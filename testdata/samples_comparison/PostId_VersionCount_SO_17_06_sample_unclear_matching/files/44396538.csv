Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
148759713;44396538;8121082;2;ed084faa-cf18-43c3-bfe7-449a49ce6db6;2017-06-06 17:44:31.0;"I am working on a project for serial communications between Excel and an Arduino. It is currently working but I am having trouble getting it to work the way I want and don't understand how it works currently.&#xD;&#xA;&#xD;&#xA;I believe the issue lies with the difference in strings in VBA, and within a cell. I can call a readFromSerialPort from within the spreadsheet and it works just fine, however I have had trouble doing it from withing VBA. Here is the issue.&#xD;&#xA;&#xD;&#xA;inside a cell in Excel I have a cell with the formula/function &#xD;&#xA;&#xD;&#xA;        =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;where in VBA I update Buff every 1 second to gather new data into the cell with the formula, this is not how I wish it to work but the only way I have been able to get it to work so far. I update it in VBA like this &#xD;&#xA;&#xD;&#xA;        BigData.Range(""Buf"").Value = ""randomLargeString                    ""&#xD;&#xA;&#xD;&#xA;Then begin to pull data from the cell with the formula by using Str functions (Mid, and inSTR) like the following initial step to find the end of the string where I expect a space.&#xD;&#xA;&#xD;&#xA;        endOfData = InStr(BigData.Range(""dataWindow"").Value, "" "")&#xD;&#xA;&#xD;&#xA;The function in the cell calls my DLL function, defined in VBA like this&#xD;&#xA;&#xD;&#xA;    Public Declare Function readFromSerialPort Lib ""C:PathToDll.dll"" (ByRef buffer As String) As String&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;&#xD;&#xA;    char mbstring[MAX_STRING_SIZE];&#xD;&#xA;    BSTR wcstring = *bufferTemp;&#xD;&#xA;    int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;&#xD;&#xA;    char charString[MAX_STRING_SIZE];&#xD;&#xA;    DWORD dwBytesRead = 0;&#xD;&#xA;&#xD;&#xA;    //hSerial is simply a handle to the port file&#xD;&#xA;    if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;        ErrorExit(""ReadFile"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;    return *bufferTemp;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;However it confuses me how this works as from what I understand it, the cell  contains a variant string and I am passing it As String (doesn't work otherwise). And passing as string would mean that it is a single byte character BSTR yet the DLL code assumes it recieves a wideChar BSTR and does a conversion (and it works). Then sends back a wide char which is received as a string and placed in cell with the formula (if I change to variant I get #Value in cell). &#xD;&#xA;&#xD;&#xA;I want to be able to understand how this works but also, change it so that I can call this function from within VBA and not this backwards way of updating Buf to change the function cell (dataWindow). Any help would be appreciated, I am an computer Engineering student but am working on this as an actual job for my university, so please respond soon if you can help.";;
148762740;44396538;8121082;5;f9c99c83-7a08-4270-ab41-178abc13a86e;2017-06-06 18:30:05.0;"I am working on a project for serial communications between Excel and an Arduino. It is currently working but I am having trouble getting it to work the way I want and don't understand how it works currently.&#xD;&#xA;&#xD;&#xA;I believe the issue lies with the difference in strings in VBA, and within a cell. I can call a readFromSerialPort from within the spreadsheet and it works just fine, however I have had trouble doing it from withing VBA. Here is the issue.&#xD;&#xA;&#xD;&#xA;inside a cell in Excel I have a cell with the formula/function. This cell is called dataWindow.&#xD;&#xA;&#xD;&#xA;        =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;where in VBA I update Buff every 1 second to gather new data into the cell with the formula, this is not how I wish it to work but the only way I have been able to get it to work so far. I update it in VBA like this &#xD;&#xA;&#xD;&#xA;        BigData.Range(""Buf"").Value = ""randomLargeString                    ""&#xD;&#xA;&#xD;&#xA;Then begin to pull data from the cell with the formula by using Str functions (Mid, and inSTR) like the following initial step to find the end of the string where I expect a space.&#xD;&#xA;&#xD;&#xA;        endOfData = InStr(BigData.Range(""dataWindow"").Value, "" "")&#xD;&#xA;&#xD;&#xA;The function in the cell calls my DLL function, defined in VBA like this&#xD;&#xA;&#xD;&#xA;    Public Declare Function readFromSerialPort Lib ""C:PathToDll.dll"" (ByRef buffer As String) As String&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;&#xD;&#xA;    char mbstring[MAX_STRING_SIZE];&#xD;&#xA;    BSTR wcstring = *bufferTemp;&#xD;&#xA;    int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;&#xD;&#xA;    char charString[MAX_STRING_SIZE];&#xD;&#xA;    DWORD dwBytesRead = 0;&#xD;&#xA;&#xD;&#xA;    //hSerial is simply a handle to the port file&#xD;&#xA;    if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;        ErrorExit(""ReadFile"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;    return *bufferTemp;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;However it confuses me how this works as from what I understand it, the cell  contains a variant string and I am passing it As String (doesn't work otherwise). And passing as string would mean that it is a single byte character BSTR yet the DLL code assumes it recieves a wideChar BSTR and does a conversion (and it works). Then sends back a wide char which is received as a string and placed in cell with the formula (if I change to variant I get #Value in cell). &#xD;&#xA;&#xD;&#xA;I want to be able to understand how this works but also, change it so that I can call this function from within VBA and not this backwards way of updating Buf to change the function cell (dataWindow). Any help would be appreciated, I am an computer Engineering student but am working on this as an actual job for my university, so please respond soon if you can help.";;added 32 characters in body
148763231;44396538;8121082;5;7fcb999e-8c0e-41a0-b13c-cb9b1dfdc4db;2017-06-06 18:37:31.0;",I am working on a project for serial communications between Excel and an Arduino. It is currently working but I am having trouble getting it to work the way I want and don't understand how it works currently.&#xD;&#xA;&#xD;&#xA;I believe the issue lies with the difference in strings in VBA, and within a cell. I can call a readFromSerialPort from within the spreadsheet and it works just fine, however I have had trouble doing it from withing VBA. Here is the issue.&#xD;&#xA;&#xD;&#xA;inside a cell in Excel I have a cell with the formula/function. This cell is called dataWindow.&#xD;&#xA;&#xD;&#xA;        =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;where in VBA I update Buff every 1 second to gather new data into the cell with the formula, this is not how I wish it to work but the only way I have been able to get it to work so far. I update it in VBA like this &#xD;&#xA;&#xD;&#xA;        BigData.Range(""Buf"").Value = ""randomLargeString                    ""&#xD;&#xA;&#xD;&#xA;Then begin to pull data from the cell with the formula by using Str functions (Mid, and inSTR) like the following initial step to find the end of the string where I expect a space.&#xD;&#xA;&#xD;&#xA;        endOfData = InStr(BigData.Range(""dataWindow"").Value, "" "")&#xD;&#xA;&#xD;&#xA;The function in the cell calls my DLL function, defined in VBA like this&#xD;&#xA;&#xD;&#xA;    Public Declare Function readFromSerialPort Lib ""C:PathToDll.dll"" (ByRef buffer As String) As String&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;&#xD;&#xA;    char mbstring[MAX_STRING_SIZE];&#xD;&#xA;    BSTR wcstring = *bufferTemp;&#xD;&#xA;    int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;&#xD;&#xA;    char charString[MAX_STRING_SIZE];&#xD;&#xA;    DWORD dwBytesRead = 0;&#xD;&#xA;&#xD;&#xA;    //hSerial is simply a handle to the port file&#xD;&#xA;    if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;        ErrorExit(""ReadFile"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;    return *bufferTemp;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;However it confuses me how this works as from what I understand it, the cell  contains a variant string and I am passing it As String (doesn't work otherwise). And passing as string would mean that it is a single byte character BSTR yet the DLL code assumes it recieves a wideChar BSTR and does a conversion (and it works). Then sends back a wide char which is received as a string and placed in cell with the formula (if I change to variant I get #Value in cell). &#xD;&#xA;&#xD;&#xA;I want to be able to understand how this works, but also change it so that I can call this function from within VBA and not this backwards way of updating Buf to change the function cell (dataWindow). Any help would be appreciated, I am an computer Engineering student but am working on this as an actual job for my university, so please respond soon if you can help.";;added 1 character in body
148763929;44396538;8121082;5;b9d849fe-ebe1-4905-abfd-dbb803c2a047;2017-06-06 18:48:58.0;"I am working on a project for serial communications between Excel and an Arduino. It is currently working but I am having trouble getting it to work the way I want and don't understand how it works currently.&#xD;&#xA;&#xD;&#xA;I believe the issue lies with the difference in strings in VBA, and within a cell. I can call a readFromSerialPort from within the spreadsheet and it works just fine, however I have had trouble doing it from withing VBA. Here is the issue.&#xD;&#xA;&#xD;&#xA;inside a cell in Excel I have a cell with the formula/function. This cell is called dataWindow.&#xD;&#xA;&#xD;&#xA;        =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;where in VBA I update Buff every 1 second to gather new data into the cell with the formula, this is not how I wish it to work but the only way I have been able to get it to work so far. I update it in VBA like this &#xD;&#xA;&#xD;&#xA;        BigData.Range(""Buf"").Value = ""randomLargeString                    ""&#xD;&#xA;&#xD;&#xA;Then begin to pull data from the cell with the formula by using Str functions (Mid, and inSTR) like the following initial step to find the end of the string where I expect a space.&#xD;&#xA;&#xD;&#xA;        endOfData = InStr(BigData.Range(""dataWindow"").Value, "" "")&#xD;&#xA;&#xD;&#xA;The function in the cell calls my DLL function, defined in VBA like this&#xD;&#xA;&#xD;&#xA;    Public Declare Function readFromSerialPort Lib ""C:PathToDll.dll"" (ByRef buffer As String) As String&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;&#xD;&#xA;    char mbstring[MAX_STRING_SIZE];&#xD;&#xA;    BSTR wcstring = *bufferTemp;&#xD;&#xA;    int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;&#xD;&#xA;    char charString[MAX_STRING_SIZE];&#xD;&#xA;    DWORD dwBytesRead = 0;&#xD;&#xA;&#xD;&#xA;    //hSerial is simply a handle to the port file&#xD;&#xA;    if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;        ErrorExit(""ReadFile"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;    return *bufferTemp;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;However it confuses me how this works as from what I understand it, the cell  contains a variant string and I am passing it As String (doesn't work otherwise). And passing as string would mean that it is a single byte character BSTR yet the DLL code assumes it recieves a wideChar BSTR and does a conversion (and it works). Then sends back a wide char which is received as a string and placed in cell with the formula (if I change to variant I get #Value in cell). &#xD;&#xA;&#xD;&#xA;And doing the above works, my problem is that I wish to use VBA code to do this and not do it in cell, so I tried.&#xD;&#xA;&#xD;&#xA;        Dim Buffer As String&#xD;&#xA;        Buffer = ""B                                              ""&#xD;&#xA;        BigData.Range(""dataWindow"").Value = readFromSerialPort(Buffer)&#xD;&#xA;&#xD;&#xA;But when I do it this way, I get the error 998 ""Invlid access to memory location"".&#xD;&#xA;&#xD;&#xA;I want to be able to understand how this works now, but also change it so that I can call this function from within VBA and not this backwards way of updating Buf to change the function cell (dataWindow). Any help would be appreciated, I am an computer Engineering student but am working on this as an actual job for my university, so please respond soon if you can help.";;added 379 characters in body
148767613;44396538;11683;5;ad8d1820-8557-4a03-bb24-c88e0304f66a;2017-06-06 19:50:39.0;"I am working on a project for serial communications between Excel and an Arduino. It is currently working but I am having trouble getting it to work the way I want and don't understand how it works currently.&#xD;&#xA;&#xD;&#xA;I believe the issue lies with the difference in strings in VBA, and within a cell. I can call a `readFromSerialPort` from within the spreadsheet and it works just fine, however I have had trouble doing it from withing VBA. Here is the issue.&#xD;&#xA;&#xD;&#xA;Inside a cell in Excel I have a cell with the formula/function. This cell is called dataWindow.&#xD;&#xA;&#xD;&#xA;    =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;where in VBA I update `Buff` every 1 second to gather new data into the cell with the formula, this is not how I wish it to work but the only way I have been able to get it to work so far. I update it in VBA like this &#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    BigData.Range(""Buf"").Value = ""randomLargeString                    ""&#xD;&#xA;&#xD;&#xA;Then begin to pull data from the cell with the formula by using Str functions (`Mid`, and `inSTR`) like the following initial step to find the end of the string where I expect a space.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    endOfData = InStr(BigData.Range(""dataWindow"").Value, "" "")&#xD;&#xA;&#xD;&#xA;The function in the cell calls my DLL function, defined in VBA like this&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    Public Declare Function readFromSerialPort Lib ""C:PathToDll.dll"" (ByRef buffer As String) As String&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-cpp -->&#xD;&#xA;&#xD;&#xA;    DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;    &#xD;&#xA;        char mbstring[MAX_STRING_SIZE];&#xD;&#xA;        BSTR wcstring = *bufferTemp;&#xD;&#xA;        int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;    &#xD;&#xA;        char charString[MAX_STRING_SIZE];&#xD;&#xA;        DWORD dwBytesRead = 0;&#xD;&#xA;    &#xD;&#xA;        //hSerial is simply a handle to the port file&#xD;&#xA;        if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;            ErrorExit(""ReadFile"");&#xD;&#xA;            int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;            return *bufferTemp;&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;However it confuses me how this works as from what I understand it, the cell contains a variant string and I am passing it `As String` (doesn't work otherwise). And passing as string would mean that it is a single byte character `BSTR` yet the DLL code assumes it receives a wideChar `BSTR` and does a conversion (and it works). Then sends back a wide char which is received as a string and placed in cell with the formula (if I change to variant I get #Value in cell). &#xD;&#xA;&#xD;&#xA;And doing the above works, my problem is that I wish to use VBA code to do this and not do it in cell, so I tried.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    Dim Buffer As String&#xD;&#xA;    Buffer = ""B                                              ""&#xD;&#xA;    BigData.Range(""dataWindow"").Value = readFromSerialPort(Buffer)&#xD;&#xA;&#xD;&#xA;But when I do it this way, I get the error 998 ""Invalid access to memory location"".&#xD;&#xA;&#xD;&#xA;I want to be able to understand how this works now, but also change it so that I can call this function from within VBA and not this backwards way of updating `Buf` to change the function cell (dataWindow). Any help would be appreciated, I am an computer Engineering student but am working on this as an actual job for my university, so please respond soon if you can help.";;formatting
148773240;44396538;8121082;5;9b516257-07f2-499c-ad16-f181f49133c6;2017-06-06 21:33:03.0;"I am working on a project for serial communications between Excel and an Arduino. The folowing is what I have in VBA for the reading of data from the Arduino which is where my problem lies.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;Private Declare Function readFromSerialPort Lib ""C:PathToDll.dll""(ByVal Buffer As String, ByVal Length As Integer) As String&#xD;&#xA;        &#xD;&#xA;    Public Sub ReadFromSerial() &#xD;&#xA;        Dim Buffer As String&#xD;&#xA;        Buffer = ""B                                              ""&#xD;&#xA;        BigData.Range(""dataWindow"").Value = readFromSerialPort(Buffer, Len(Buffer))&#xD;&#xA;    End Sub&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-cpp -->&#xD;&#xA;&#xD;&#xA;    DLL_EXPORT LPSTR WINAPI readFromSerialPort(LPSTR bufferTemp, int bufferLength) {&#xD;&#xA;    &#xD;&#xA;        DWORD dwBytesRead = 0;&#xD;&#xA;        if (hSerial == INVALID_HANDLE_VALUE) {&#xD;&#xA;    		ErrorExit(""ReadFile (port not open)"");&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;        if(!ReadFile(hSerial, bufferTemp, bufferLength, &dwBytesRead, NULL)) {&#xD;&#xA;            ErrorExit(""ReadFile"");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;However when I run this Excel simply crashes after briefly popping up an error window telling me that I cannot access that memory location, any idea what the problem is?&#xD;&#xA;";;deleted 2272 characters in body
148773716;44396538;8121082;5;2d6638cf-78b6-4d40-8114-c968f953fcc5;2017-06-06 21:45:11.0;"I am working on a project for serial communications between Excel and an Arduino. The folowing is what I have in VBA for the reading of data from the Arduino which is where my problem lies.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    Private Declare Function readFromSerialPort Lib ""C:PathToDll.dll""(ByVal Buffer As String, ByVal Length As Integer) As String&#xD;&#xA;        &#xD;&#xA;    Public Sub ReadFromSerial() &#xD;&#xA;        Dim Buffer As String&#xD;&#xA;        Buffer = ""B                                              ""&#xD;&#xA;        BigData.Range(""dataWindow"").Value = readFromSerialPort(Buffer, Len(Buffer))&#xD;&#xA;    End Sub&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-cpp -->&#xD;&#xA;&#xD;&#xA;    DLL_EXPORT LPSTR WINAPI readFromSerialPort(LPSTR bufferTemp, int bufferLength) {&#xD;&#xA;    &#xD;&#xA;        DWORD dwBytesRead = 0;&#xD;&#xA;        if (hSerial == INVALID_HANDLE_VALUE) {&#xD;&#xA;    		ErrorExit(""ReadFile (port not open)"");&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;        if(!ReadFile(hSerial, bufferTemp, bufferLength, &dwBytesRead, NULL)) {&#xD;&#xA;            ErrorExit(""ReadFile"");&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        return bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;However when I run this Excel simply crashes after briefly popping up an error window telling me that I cannot access that memory location, any idea what the problem is?&#xD;&#xA;";;added 6 characters in body
148775511;44396538;8121082;5;bbbb5231-692e-4219-bc4f-9bf1bcd37e12;2017-06-06 22:36:12.0;"I am working on a project for serial communications between Excel and an Arduino. The following is what I have in VBA for the reading of data from the Arduino which is where my problem lies.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-vb -->&#xD;&#xA;&#xD;&#xA;    Private Declare Function readFromSerialPort Lib ""C:PathToDll.dll""(ByRef Buffer As String) As String&#xD;&#xA;&#xD;&#xA;And in a looping function within my VBA I have the following which sets a cell value to a string which is my buffer.&#xD;&#xA;&#xD;&#xA;    BigData.Range(""Buf"").Value = ""B                                            ""&#xD;&#xA;&#xD;&#xA;Another cell called dataWindow takes in Buf as an argument so it updates when this is called.&#xD;&#xA;&#xD;&#xA;    =readFromSerialPort(Buf)&#xD;&#xA;&#xD;&#xA;And here is the C++ code on the other end in the DLL.&#xD;&#xA;&#xD;&#xA;<!-- language: lang-cpp -->&#xD;&#xA;&#xD;&#xA;    DLL_EXPORT BSTR WINAPI readFromSerialPort(LPBSTR bufferTemp) {&#xD;&#xA;    char errorMsg[] = ""read failed"";&#xD;&#xA;    char mbstring[MAX_STRING_SIZE];&#xD;&#xA;    BSTR wcstring = *bufferTemp;&#xD;&#xA;    int sLen = wcstombs(mbstring,wcstring,MAX_STRING_SIZE);&#xD;&#xA;&#xD;&#xA;    char charString[MAX_STRING_SIZE];&#xD;&#xA;    DWORD dwBytesRead = 0;&#xD;&#xA;&#xD;&#xA;    if (hSerial == INVALID_HANDLE_VALUE) {&#xD;&#xA;		ErrorExit(""ReadFile (port not open)"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;    if(!ReadFile(hSerial, charString, sLen, &dwBytesRead, NULL)) {&#xD;&#xA;        ErrorExit(""ReadFile"");&#xD;&#xA;        int wLen2 = mbstowcs(*bufferTemp,errorMsg,strlen(errorMsg));&#xD;&#xA;        return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    int wLen2 = mbstowcs(*bufferTemp,charString,sLen);&#xD;&#xA;    return *bufferTemp;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;The issue is that this works when called from a cell but not when I change it to declaring a string in VBA and calling the read from there.&#xD;&#xA;";;added 435 characters in body
