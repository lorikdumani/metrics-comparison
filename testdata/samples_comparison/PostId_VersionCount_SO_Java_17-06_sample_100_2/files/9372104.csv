Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
21293856;9372104;1178063;2;941fcc08-c763-45d3-8919-11a682ada4b1;2012-02-21 04:17:25.0;"You can draw multiple straight lines on view using  Finger paint example which is in Developer android. &#xD;&#xA;[example link][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/graphics/FingerPaint.html&#xD;&#xA;&#xD;&#xA;Just comment: `mPath.quadTo(mX, mY, (x + mX)/2, (y + mY)/2);`&#xD;&#xA;You will be able to draw straight lines.&#xD;&#xA;";;
21295541;9372104;1178063;5;51fdca67-4121-46d5-89f1-42835aef26fa;2012-02-21 05:46:58.0;"You can draw multiple straight lines on view using  Finger paint example which is in Developer android. &#xD;&#xA;[example link][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://developer.android.com/resources/samples/ApiDemos/src/com/example/android/apis/graphics/FingerPaint.html&#xD;&#xA;&#xD;&#xA;Just comment: `mPath.quadTo(mX, mY, (x + mX)/2, (y + mY)/2);`&#xD;&#xA;You will be able to draw straight lines.&#xD;&#xA;&#xD;&#xA;    import android.app.Activity;&#xD;&#xA;    import android.content.Context;&#xD;&#xA;    import android.graphics.Bitmap;&#xD;&#xA;    import android.graphics.Canvas;&#xD;&#xA;    import android.graphics.Color;&#xD;&#xA;    import android.graphics.Paint;&#xD;&#xA;    import android.graphics.Path;&#xD;&#xA;    import android.graphics.Point;&#xD;&#xA;    import android.os.Bundle;&#xD;&#xA;    import android.view.MotionEvent;&#xD;&#xA;    import android.view.View;&#xD;&#xA;    import android.view.View.OnTouchListener;&#xD;&#xA;    import android.widget.ImageView;&#xD;&#xA;    &#xD;&#xA;    public class JoinPointsActivity extends Activity  {&#xD;&#xA;        /** Called when the activity is first created. */&#xD;&#xA;    	Paint mPaint;&#xD;&#xA;    	float Mx1,My1;&#xD;&#xA;    	float x,y;&#xD;&#xA;        @Override&#xD;&#xA;        &#xD;&#xA;        public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;            super.onCreate(savedInstanceState);&#xD;&#xA;           // setContentView(R.layout.main);&#xD;&#xA;            MyView view1 =new MyView(this);&#xD;&#xA;            view1.setBackgroundResource(R.drawable.image_0031_layer_1);&#xD;&#xA;            setContentView(view1);&#xD;&#xA;        &#xD;&#xA;          &#xD;&#xA;            mPaint = new Paint();&#xD;&#xA;            mPaint.setAntiAlias(true);&#xD;&#xA;            mPaint.setDither(true);&#xD;&#xA;            mPaint.setColor(0xFFFF0000);&#xD;&#xA;            mPaint.setStyle(Paint.Style.STROKE);&#xD;&#xA;            mPaint.setStrokeJoin(Paint.Join.ROUND);&#xD;&#xA;           // mPaint.setStrokeCap(Paint.Cap.ROUND);&#xD;&#xA;            mPaint.setStrokeWidth(10);&#xD;&#xA;           &#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        public class MyView extends View {&#xD;&#xA;    &#xD;&#xA;            private static final float MINP = 0.25f;&#xD;&#xA;            private static final float MAXP = 0.75f;&#xD;&#xA;    &#xD;&#xA;          private Bitmap  mBitmap;&#xD;&#xA;            private Canvas  mCanvas;&#xD;&#xA;            private Path    mPath;&#xD;&#xA;           private Paint   mBitmapPaint;&#xD;&#xA;    &#xD;&#xA;            public MyView(Context c) {&#xD;&#xA;                super(c);&#xD;&#xA;    &#xD;&#xA;                mPath = new Path();&#xD;&#xA;              mBitmapPaint = new Paint(Paint.DITHER_FLAG);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;           protected void onSizeChanged(int w, int h, int oldw, int oldh) {&#xD;&#xA;                super.onSizeChanged(w, h, oldw, oldh);&#xD;&#xA;                mBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);&#xD;&#xA;                mCanvas = new Canvas(mBitmap);&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            protected void onDraw(Canvas canvas) {&#xD;&#xA;                canvas.drawColor(0xFFAAAAAA);&#xD;&#xA;               // canvas.drawLine(mX, mY, Mx1, My1, mPaint);&#xD;&#xA;               // canvas.drawLine(mX, mY, x, y, mPaint);&#xD;&#xA;                canvas.drawBitmap(mBitmap, 0, 0, mBitmapPaint);&#xD;&#xA;                canvas.drawPath(mPath, mPaint);&#xD;&#xA;                &#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            private float mX, mY;&#xD;&#xA;            private static final float TOUCH_TOLERANCE = 4;&#xD;&#xA;    &#xD;&#xA;            private void touch_start(float x, float y) {&#xD;&#xA;                mPath.reset();&#xD;&#xA;                mPath.moveTo(x, y);&#xD;&#xA;                mX = x;&#xD;&#xA;                mY = y;&#xD;&#xA;            }&#xD;&#xA;            private void touch_move(float x, float y) {&#xD;&#xA;                float dx = Math.abs(x - mX);&#xD;&#xA;                float dy = Math.abs(y - mY);&#xD;&#xA;                if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {&#xD;&#xA;                   // mPath.quadTo(mX, mY, (x + mX)/2, (y + mY)/2);&#xD;&#xA;                    mX = x;&#xD;&#xA;                    mY = y;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            private void touch_up() {&#xD;&#xA;                mPath.lineTo(mX, mY);&#xD;&#xA;                // commit the path to our offscreen&#xD;&#xA;                mCanvas.drawPath(mPath, mPaint);&#xD;&#xA;                // kill this so we don't double draw&#xD;&#xA;                mPath.reset();&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            @Override&#xD;&#xA;            public boolean onTouchEvent(MotionEvent event) {&#xD;&#xA;                float x = event.getX();&#xD;&#xA;                float y = event.getY();&#xD;&#xA;    &#xD;&#xA;                switch (event.getAction()) {&#xD;&#xA;                    case MotionEvent.ACTION_DOWN:&#xD;&#xA;                        touch_start(x, y);&#xD;&#xA;                        invalidate();&#xD;&#xA;                        break;&#xD;&#xA;                    case MotionEvent.ACTION_MOVE:&#xD;&#xA;                        touch_move(x, y);&#xD;&#xA;                        invalidate();&#xD;&#xA;                        break;&#xD;&#xA;                    case MotionEvent.ACTION_UP:&#xD;&#xA;                        touch_up();&#xD;&#xA;                   //   Mx1=(int) event.getX();&#xD;&#xA;                     //  My1= (int) event.getY();&#xD;&#xA;                       invalidate();&#xD;&#xA;                        break;&#xD;&#xA;                }&#xD;&#xA;                return true;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;";;added 4469 characters in body
