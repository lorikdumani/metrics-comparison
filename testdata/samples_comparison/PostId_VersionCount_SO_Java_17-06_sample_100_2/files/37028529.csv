Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
117292824;37028529;2565146;2;a370556c-9b66-4198-8d44-b5539afe38df;2016-05-04 12:57:58.0;"Am I still following the Builder pattern with the implementation below?&#xD;&#xA;What's confusing me is the protected constructor in the class ""myClass"". My first thought when it comes to the builder pattern is to hide the object that the builder is supposed to construct. But here we don't. I can't understand if this is just bad design or ok design.&#xD;&#xA;&#xD;&#xA;    public class myClass{&#xD;&#xA;        private final String x;&#xD;&#xA;        private final String y;&#xD;&#xA;&#xD;&#xA;        protected myClass(MyBuilder builder){&#xD;&#xA;                this.x = builder.getX();&#xD;&#xA;                this.y = builder.getY();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;       //getters...&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public class myBuilder{&#xD;&#xA;        private String X;&#xD;&#xA;        private String Y;&#xD;&#xA;&#xD;&#xA;        public myBuilder withX(String x){&#xD;&#xA;            this.x = x;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public myBuilder withY(String y){&#xD;&#xA;            this.y = y;&#xD;&#xA;        }&#xD;&#xA;    }";;
117296199;37028529;2565146;5;0a84a692-0e54-45a5-904b-845ee2205fbb;2016-05-04 13:33:43.0;"Am I still following the Builder pattern with the implementation below?&#xD;&#xA;What's confusing me is the protected constructor in the class ""myClass"". My first thought when it comes to the builder pattern is to hide the object that the builder is supposed to construct. But here we don't. I can't understand if this is just bad design or ok design.&#xD;&#xA;&#xD;&#xA;    public class MyClass{&#xD;&#xA;        private final String x;&#xD;&#xA;        private final String y;&#xD;&#xA;&#xD;&#xA;        protected MyClass(MyBuilder builder){&#xD;&#xA;                this.x = builder.getX();&#xD;&#xA;                this.y = builder.getY();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;       //getters...&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public class MyBuilder{&#xD;&#xA;        private String X;&#xD;&#xA;        private String Y;&#xD;&#xA;&#xD;&#xA;        public MyBuilder withX(String x){&#xD;&#xA;            this.x = x;&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public MyBuilder withY(String y){&#xD;&#xA;            this.y = y;&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public MyClass build(){&#xD;&#xA;            return new MyClass(this);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        //getters....&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    public class Main{&#xD;&#xA;        public static void main(){&#xD;&#xA;            //Example 1&#xD;&#xA;            MyClass myClass = new MyBuilder().withX(""x"").withY(""y"").build();&#xD;&#xA;&#xD;&#xA;            //Example 2&#xD;&#xA;            MyClass myClass2 = new MyClass(new MyBuilder().withX(""x"").withY(""y""));&#xD;&#xA;&#xD;&#xA;           &#xD;&#xA;        }&#xD;&#xA;    }";;Updated the code with usage examples.
