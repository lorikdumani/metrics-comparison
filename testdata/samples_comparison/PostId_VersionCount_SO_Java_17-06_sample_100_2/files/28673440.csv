Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
84389507;28673440;4596786;2;4c8cee31-17db-43ad-83f0-3b585599ee46;2015-02-23 12:05:43.0;"I am trying to show routes on my google map... i am developing a cab booking App, in which i am getting two values ""From"" and ""To"" from the user, that where they want to go?&#xD;&#xA;&#xD;&#xA;but i am facing the problems on adding routes in map...When i submit the value i got force closed...&#xD;&#xA;&#xD;&#xA;Here is my coding informations...&#xD;&#xA;&#xD;&#xA;**Dialogue.java class which is on the snap shot image**&#xD;&#xA;&#xD;&#xA;    public class Dialoge extends Activity{&#xD;&#xA;    	Button b;&#xD;&#xA;    	EditText e1,e2;&#xD;&#xA;    	&#xD;&#xA;    	String addressfrom,addressto;&#xD;&#xA;    	@Override&#xD;&#xA;    	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		// TODO Auto-generated method stub&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		&#xD;&#xA;    		setContentView(R.layout.dia);&#xD;&#xA;    		e1=(EditText)findViewById(R.id.from);&#xD;&#xA;    		e2=(EditText)findViewById(R.id.To);&#xD;&#xA;    		&#xD;&#xA;    		b=(Button)findViewById(R.id.Submit);&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		b.setOnClickListener(new OnClickListener() {&#xD;&#xA;    			&#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View v) {&#xD;&#xA;    				// TODO Auto-generated method stub&#xD;&#xA;    				if(v==b){&#xD;&#xA;    					addressfrom = e1.getText().toString();&#xD;&#xA;    					addressto = e2.getText().toString();&#xD;&#xA;    					Intent i = new Intent(Dialoge.this,RideNow.class);&#xD;&#xA;    					i.putExtra(""from"", addressfrom);&#xD;&#xA;    					i.putExtra(""to"", addressto);&#xD;&#xA;    					startActivity(i);&#xD;&#xA;    					&#xD;&#xA;    					/*String format = ""geo:0,0?q=""+addressto;&#xD;&#xA;    					Uri uri = Uri.parse(format); &#xD;&#xA;    					Intent intent = new Intent(Intent.ACTION_VIEW, uri);&#xD;&#xA;    		      		intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#xD;&#xA;    		      		startActivity(intent);*/&#xD;&#xA;    					&#xD;&#xA;    					&#xD;&#xA;    				&#xD;&#xA;    			}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**My RideNow.java job that shows route and being called when pressing Submit button**&#xD;&#xA;&#xD;&#xA;    public class RideNow extends Activity {&#xD;&#xA;    	GoogleMap mMap;&#xD;&#xA;    	String fromString,toString,url,polyline;&#xD;&#xA;    	double latitude,longitude,latitudeto,longitudeto;&#xD;&#xA;    	ProgressDialog pd;&#xD;&#xA;    	LatLng l,l2;&#xD;&#xA;    	double latt;&#xD;&#xA;    	List<HashMap<String, String>> path = new ArrayList<HashMap<String, String>>();&#xD;&#xA;    	List<List<HashMap<String, String>>> routes = new ArrayList<List<HashMap<String,String>>>() ;&#xD;&#xA;    	List<LatLng> list = null;&#xD;&#xA;    	PolylineOptions p = null;&#xD;&#xA;    	ArrayList<LatLng> points = null;&#xD;&#xA;    	TextView t1,t2;&#xD;&#xA;    	@Override&#xD;&#xA;    	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		// TODO Auto-generated method stub&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		setContentView(R.layout.ridenow);&#xD;&#xA;    		&#xD;&#xA;    		t1 = (TextView)findViewById(R.id.text1);&#xD;&#xA;    		t2 = (TextView)findViewById(R.id.text2);&#xD;&#xA;    		&#xD;&#xA;    		MapFragment m = (MapFragment)getFragmentManager().findFragmentById(R.id.fragment1);&#xD;&#xA;            mMap = m.getMap();&#xD;&#xA;    		//mv.setBuiltInZoomControls(true);&#xD;&#xA;            ParseAnalytics.trackAppOpened(getIntent());&#xD;&#xA;            &#xD;&#xA;    		Intent i = getIntent();&#xD;&#xA;    		Bundle b = i.getExtras();&#xD;&#xA;    		fromString = b.getString(""from"");&#xD;&#xA;    		toString = b.getString(""to"");&#xD;&#xA;    		&#xD;&#xA;    		Geocoder geoCoder = new Geocoder(RideNow.this, Locale.getDefault());&#xD;&#xA;    		try {&#xD;&#xA;    			//########## Address From ###########&#xD;&#xA;                  List<Address> addressesfrom =&#xD;&#xA;              geoCoder.getFromLocationName(fromString, 1); &#xD;&#xA;                  if (addressesfrom.size() >  0) {&#xD;&#xA;                     latitude = addressesfrom.get(0).getLatitude(); &#xD;&#xA;                     longitude =addressesfrom.get(0).getLongitude(); }&#xD;&#xA;                  &#xD;&#xA;                 //######### Address To ##########&#xD;&#xA;                  &#xD;&#xA;                  List<Address> addressesto =&#xD;&#xA;        		          geoCoder.getFromLocationName(toString, 1); &#xD;&#xA;        		              if (addressesto.size() >  0) {&#xD;&#xA;        		                 latitudeto = addressesto.get(0).getLatitude(); &#xD;&#xA;        		                 longitudeto =addressesto.get(0).getLongitude(); }&#xD;&#xA;              &#xD;&#xA;        		l = new LatLng(latitude, longitude);&#xD;&#xA;        		l2 = new LatLng(latitudeto, longitudeto);&#xD;&#xA;        		url = getDirectionsUrl(l, l2);&#xD;&#xA;        		t1.setText(""""+latitude+"",""+longitude);&#xD;&#xA;        		t2.setText(""""+latitudeto+"",""+longitudeto);&#xD;&#xA;        		new json().execute();&#xD;&#xA;        		&#xD;&#xA;        		MarkerOptions marker = new MarkerOptions().position(l).title(""""+fromString);&#xD;&#xA;        		&#xD;&#xA;                mMap.addMarker(marker);&#xD;&#xA;                MarkerOptions markerto = new MarkerOptions().position(new LatLng(latitudeto, longitudeto)).title(""""+toString);&#xD;&#xA;        		CameraPosition cameraPositionto = new CameraPosition.Builder().target(new LatLng(latitudeto, longitudeto)).bearing(45).tilt(90).zoom(mMap.getCameraPosition().zoom).build();&#xD;&#xA;                mMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPositionto));&#xD;&#xA;                mMap.addMarker(markerto);&#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                mMap.addPolyline(p);&#xD;&#xA;                &#xD;&#xA;        		&#xD;&#xA;        		              &#xD;&#xA;              } catch (IOException e) { // TODO Auto-generated catch block&#xD;&#xA;              e.printStackTrace(); }&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	private String getDirectionsUrl(LatLng origin,LatLng dest){&#xD;&#xA;    		 &#xD;&#xA;            // Origin of route&#xD;&#xA;            String str_origin = ""origin=""+origin.latitude+"",""+origin.longitude;&#xD;&#xA;     &#xD;&#xA;            // Destination of route&#xD;&#xA;            String str_dest = ""destination=""+dest.latitude+"",""+dest.longitude;&#xD;&#xA;     &#xD;&#xA;            // Sensor enabled&#xD;&#xA;            String sensor = ""sensor=false"";&#xD;&#xA;     &#xD;&#xA;            // Building the parameters to the web service&#xD;&#xA;            String parameters = str_origin+""&""+str_dest+""&""+sensor;&#xD;&#xA;     &#xD;&#xA;            // Output format&#xD;&#xA;            String output = ""json"";&#xD;&#xA;     &#xD;&#xA;            // Building the url to the web service&#xD;&#xA;            String url = ""https://maps.googleapis.com/maps/api/directions/""+output+""?""+parameters;&#xD;&#xA;     &#xD;&#xA;            return url;&#xD;&#xA;        }&#xD;&#xA;    	public class json extends AsyncTask<Void, Void, Void>{&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected Void doInBackground(Void... params) {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			ServiceHandler sh = new ServiceHandler();&#xD;&#xA;    			String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);&#xD;&#xA;    			Log.d(""Response: "", ""> "" + jsonStr);&#xD;&#xA;    			if(jsonStr!=null){&#xD;&#xA;    				try{&#xD;&#xA;    					JSONObject jobj = new JSONObject(jsonStr);&#xD;&#xA;    	    			JSONArray jroute = jobj.getJSONArray(""routes"");&#xD;&#xA;    	    			&#xD;&#xA;    	    			&#xD;&#xA;    	    				JSONObject j = jroute.getJSONObject(0);&#xD;&#xA;    	    				JSONObject jbound = j.getJSONObject(""bounds"");&#xD;&#xA;    	    				JSONObject jn = jbound.getJSONObject(""northeast"");&#xD;&#xA;    	    				String d = jn.getString(""lat"");&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONArray jlegs = j.getJSONArray(""legs"");&#xD;&#xA;    	    				JSONObject jobjj = jlegs.getJSONObject(0);&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONObject jduration =jobjj.getJSONObject(""duration"");&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONArray steps = jobjj.getJSONArray(""steps"");&#xD;&#xA;    	    				JSONObject jsteps = steps.getJSONObject(0);&#xD;&#xA;    	    				JSONObject poly = jsteps.getJSONObject(""polyline"");&#xD;&#xA;    	    				polyline = poly.getString(""points"");&#xD;&#xA;    	    				list = decodePoly(polyline);&#xD;&#xA;    	    				for(int l=0;l<list.size();l++){&#xD;&#xA;                                HashMap<String, String> hm = new HashMap<String, String>();&#xD;&#xA;                                hm.put(""lat"", Double.toString((list.get(l)).latitude) );&#xD;&#xA;                                hm.put(""lng"", Double.toString((list.get(l)).longitude) );&#xD;&#xA;                                path.add(hm);&#xD;&#xA;                            }&#xD;&#xA;    	    				points = new ArrayList<LatLng>();&#xD;&#xA;    	    				for(int m=0;m<path.size();m++){&#xD;&#xA;    	                        HashMap<String,String> point = path.get(m);&#xD;&#xA;    	     &#xD;&#xA;    	                        double lat = Double.parseDouble(point.get(""lat""));&#xD;&#xA;    	                        double lng = Double.parseDouble(point.get(""lng""));&#xD;&#xA;    	                        LatLng position = new LatLng(lat, lng);&#xD;&#xA;    	     &#xD;&#xA;    	                        points.add(position);&#xD;&#xA;    	                    }&#xD;&#xA;    	    				//p.addAll(points);&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    				}catch(Exception e){}&#xD;&#xA;    				}&#xD;&#xA;    				return null;&#xD;&#xA;    				&#xD;&#xA;    			&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPreExecute() {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			super.onPreExecute();&#xD;&#xA;    			pd = new ProgressDialog(RideNow.this);&#xD;&#xA;    			pd.setTitle(""Please Wait...."");&#xD;&#xA;    			pd.setMessage(""Wait"");&#xD;&#xA;    			pd.setCancelable(false);&#xD;&#xA;    			pd.show();&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPostExecute(Void result) {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			super.onPostExecute(result);&#xD;&#xA;    			pd.dismiss();&#xD;&#xA;    			//Toast.makeText(getApplicationContext(),"" (""+polyline+"")"",Toast.LENGTH_SHORT).show();&#xD;&#xA;    			Toast.makeText(getApplicationContext(), """"+latt, Toast.LENGTH_LONG).show();&#xD;&#xA;    			p.addAll(points);&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	private List<LatLng> decodePoly(String encoded) {&#xD;&#xA;    		 &#xD;&#xA;            List<LatLng> poly = new ArrayList<LatLng>();&#xD;&#xA;            int index = 0, len = encoded.length();&#xD;&#xA;            int lat = 0, lng = 0;&#xD;&#xA;     &#xD;&#xA;            while (index < len) {&#xD;&#xA;                int b, shift = 0, result = 0;&#xD;&#xA;                do {&#xD;&#xA;                    b = encoded.charAt(index++) - 63;&#xD;&#xA;                    result |= (b & 0x1f) << shift;&#xD;&#xA;                    shift += 5;&#xD;&#xA;                } while (b >= 0x20);&#xD;&#xA;                int dlat = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;                lat += dlat;&#xD;&#xA;     &#xD;&#xA;                shift = 0;&#xD;&#xA;                result = 0;&#xD;&#xA;                do {&#xD;&#xA;                    b = encoded.charAt(index++) - 63;&#xD;&#xA;                    result |= (b & 0x1f) << shift;&#xD;&#xA;                    shift += 5;&#xD;&#xA;                } while (b >= 0x20);&#xD;&#xA;                int dlng = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;                lng += dlng;&#xD;&#xA;     &#xD;&#xA;                LatLng p = new LatLng((((double) lat / 1E5)),&#xD;&#xA;                    (((double) lng / 1E5)));&#xD;&#xA;                poly.add(p);&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return poly;&#xD;&#xA;        }&#xD;&#xA;    }";;
84390205;28673440;4596786;5;82013cd0-29fe-4dba-b9af-7a53c2989e50;2015-02-23 12:15:55.0;"I am trying to show routes on my google map... i am developing a cab booking App, in which i am getting two values ""From"" and ""To"" from the user, that where they want to go?&#xD;&#xA;&#xD;&#xA;but i am facing the problems on adding routes in map...When i submit the value i got force closed...&#xD;&#xA;&#xD;&#xA;Here is my coding informations...&#xD;&#xA;&#xD;&#xA;**Dialogue.java class which is on the snap shot image**&#xD;&#xA;&#xD;&#xA;    public class Dialoge extends Activity{&#xD;&#xA;    	Button b;&#xD;&#xA;    	EditText e1,e2;&#xD;&#xA;    	&#xD;&#xA;    	String addressfrom,addressto;&#xD;&#xA;    	@Override&#xD;&#xA;    	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		// TODO Auto-generated method stub&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		&#xD;&#xA;    		setContentView(R.layout.dia);&#xD;&#xA;    		e1=(EditText)findViewById(R.id.from);&#xD;&#xA;    		e2=(EditText)findViewById(R.id.To);&#xD;&#xA;    		&#xD;&#xA;    		b=(Button)findViewById(R.id.Submit);&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    		b.setOnClickListener(new OnClickListener() {&#xD;&#xA;    			&#xD;&#xA;    			@Override&#xD;&#xA;    			public void onClick(View v) {&#xD;&#xA;    				// TODO Auto-generated method stub&#xD;&#xA;    				if(v==b){&#xD;&#xA;    					addressfrom = e1.getText().toString();&#xD;&#xA;    					addressto = e2.getText().toString();&#xD;&#xA;    					Intent i = new Intent(Dialoge.this,RideNow.class);&#xD;&#xA;    					i.putExtra(""from"", addressfrom);&#xD;&#xA;    					i.putExtra(""to"", addressto);&#xD;&#xA;    					startActivity(i);&#xD;&#xA;    					&#xD;&#xA;    					/*String format = ""geo:0,0?q=""+addressto;&#xD;&#xA;    					Uri uri = Uri.parse(format); &#xD;&#xA;    					Intent intent = new Intent(Intent.ACTION_VIEW, uri);&#xD;&#xA;    		      		intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);&#xD;&#xA;    		      		startActivity(intent);*/&#xD;&#xA;    					&#xD;&#xA;    					&#xD;&#xA;    				&#xD;&#xA;    			}&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    &#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    	&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;**My RideNow.java job that shows route and being called when pressing Submit button**&#xD;&#xA;&#xD;&#xA;    public class RideNow extends Activity {&#xD;&#xA;    	GoogleMap mMap;&#xD;&#xA;    	String fromString,toString,url,polyline;&#xD;&#xA;    	double latitude,longitude,latitudeto,longitudeto;&#xD;&#xA;    	ProgressDialog pd;&#xD;&#xA;    	LatLng l,l2;&#xD;&#xA;    	double latt;&#xD;&#xA;    	List<HashMap<String, String>> path = new ArrayList<HashMap<String, String>>();&#xD;&#xA;    	List<List<HashMap<String, String>>> routes = new ArrayList<List<HashMap<String,String>>>() ;&#xD;&#xA;    	List<LatLng> list = null;&#xD;&#xA;    	PolylineOptions p = null;&#xD;&#xA;    	ArrayList<LatLng> points = null;&#xD;&#xA;    	TextView t1,t2;&#xD;&#xA;    	@Override&#xD;&#xA;    	protected void onCreate(Bundle savedInstanceState) {&#xD;&#xA;    		// TODO Auto-generated method stub&#xD;&#xA;    		super.onCreate(savedInstanceState);&#xD;&#xA;    		setContentView(R.layout.ridenow);&#xD;&#xA;    		&#xD;&#xA;    		t1 = (TextView)findViewById(R.id.text1);&#xD;&#xA;    		t2 = (TextView)findViewById(R.id.text2);&#xD;&#xA;    		&#xD;&#xA;    		MapFragment m = (MapFragment)getFragmentManager().findFragmentById(R.id.fragment1);&#xD;&#xA;            mMap = m.getMap();&#xD;&#xA;    		//mv.setBuiltInZoomControls(true);&#xD;&#xA;            ParseAnalytics.trackAppOpened(getIntent());&#xD;&#xA;            &#xD;&#xA;    		Intent i = getIntent();&#xD;&#xA;    		Bundle b = i.getExtras();&#xD;&#xA;    		fromString = b.getString(""from"");&#xD;&#xA;    		toString = b.getString(""to"");&#xD;&#xA;    		&#xD;&#xA;    		Geocoder geoCoder = new Geocoder(RideNow.this, Locale.getDefault());&#xD;&#xA;    		try {&#xD;&#xA;    			//########## Address From ###########&#xD;&#xA;                  List<Address> addressesfrom =&#xD;&#xA;              geoCoder.getFromLocationName(fromString, 1); &#xD;&#xA;                  if (addressesfrom.size() >  0) {&#xD;&#xA;                     latitude = addressesfrom.get(0).getLatitude(); &#xD;&#xA;                     longitude =addressesfrom.get(0).getLongitude(); }&#xD;&#xA;                  &#xD;&#xA;                 //######### Address To ##########&#xD;&#xA;                  &#xD;&#xA;                  List<Address> addressesto =&#xD;&#xA;        		          geoCoder.getFromLocationName(toString, 1); &#xD;&#xA;        		              if (addressesto.size() >  0) {&#xD;&#xA;        		                 latitudeto = addressesto.get(0).getLatitude(); &#xD;&#xA;        		                 longitudeto =addressesto.get(0).getLongitude(); }&#xD;&#xA;              &#xD;&#xA;        		l = new LatLng(latitude, longitude);&#xD;&#xA;        		l2 = new LatLng(latitudeto, longitudeto);&#xD;&#xA;        		url = getDirectionsUrl(l, l2);&#xD;&#xA;        		t1.setText(""""+latitude+"",""+longitude);&#xD;&#xA;        		t2.setText(""""+latitudeto+"",""+longitudeto);&#xD;&#xA;        		new json().execute();&#xD;&#xA;        		&#xD;&#xA;        		MarkerOptions marker = new MarkerOptions().position(l).title(""""+fromString);&#xD;&#xA;        		&#xD;&#xA;                mMap.addMarker(marker);&#xD;&#xA;                MarkerOptions markerto = new MarkerOptions().position(new LatLng(latitudeto, longitudeto)).title(""""+toString);&#xD;&#xA;        		CameraPosition cameraPositionto = new CameraPosition.Builder().target(new LatLng(latitudeto, longitudeto)).bearing(45).tilt(90).zoom(mMap.getCameraPosition().zoom).build();&#xD;&#xA;                mMap.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPositionto));&#xD;&#xA;                mMap.addMarker(markerto);&#xD;&#xA;                &#xD;&#xA;                &#xD;&#xA;                mMap.addPolyline(p);&#xD;&#xA;                &#xD;&#xA;        		&#xD;&#xA;        		              &#xD;&#xA;              } catch (IOException e) { // TODO Auto-generated catch block&#xD;&#xA;              e.printStackTrace(); }&#xD;&#xA;    		&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	private String getDirectionsUrl(LatLng origin,LatLng dest){&#xD;&#xA;    		 &#xD;&#xA;            // Origin of route&#xD;&#xA;            String str_origin = ""origin=""+origin.latitude+"",""+origin.longitude;&#xD;&#xA;     &#xD;&#xA;            // Destination of route&#xD;&#xA;            String str_dest = ""destination=""+dest.latitude+"",""+dest.longitude;&#xD;&#xA;     &#xD;&#xA;            // Sensor enabled&#xD;&#xA;            String sensor = ""sensor=false"";&#xD;&#xA;     &#xD;&#xA;            // Building the parameters to the web service&#xD;&#xA;            String parameters = str_origin+""&""+str_dest+""&""+sensor;&#xD;&#xA;     &#xD;&#xA;            // Output format&#xD;&#xA;            String output = ""json"";&#xD;&#xA;     &#xD;&#xA;            // Building the url to the web service&#xD;&#xA;            String url = ""https://maps.googleapis.com/maps/api/directions/""+output+""?""+parameters;&#xD;&#xA;     &#xD;&#xA;            return url;&#xD;&#xA;        }&#xD;&#xA;    	public class json extends AsyncTask<Void, Void, Void>{&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected Void doInBackground(Void... params) {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			ServiceHandler sh = new ServiceHandler();&#xD;&#xA;    			String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);&#xD;&#xA;    			Log.d(""Response: "", ""> "" + jsonStr);&#xD;&#xA;    			if(jsonStr!=null){&#xD;&#xA;    				try{&#xD;&#xA;    					JSONObject jobj = new JSONObject(jsonStr);&#xD;&#xA;    	    			JSONArray jroute = jobj.getJSONArray(""routes"");&#xD;&#xA;    	    			&#xD;&#xA;    	    			&#xD;&#xA;    	    				JSONObject j = jroute.getJSONObject(0);&#xD;&#xA;    	    				JSONObject jbound = j.getJSONObject(""bounds"");&#xD;&#xA;    	    				JSONObject jn = jbound.getJSONObject(""northeast"");&#xD;&#xA;    	    				String d = jn.getString(""lat"");&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONArray jlegs = j.getJSONArray(""legs"");&#xD;&#xA;    	    				JSONObject jobjj = jlegs.getJSONObject(0);&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONObject jduration =jobjj.getJSONObject(""duration"");&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    	    				JSONArray steps = jobjj.getJSONArray(""steps"");&#xD;&#xA;    	    				JSONObject jsteps = steps.getJSONObject(0);&#xD;&#xA;    	    				JSONObject poly = jsteps.getJSONObject(""polyline"");&#xD;&#xA;    	    				polyline = poly.getString(""points"");&#xD;&#xA;    	    				list = decodePoly(polyline);&#xD;&#xA;    	    				for(int l=0;l<list.size();l++){&#xD;&#xA;                                HashMap<String, String> hm = new HashMap<String, String>();&#xD;&#xA;                                hm.put(""lat"", Double.toString((list.get(l)).latitude) );&#xD;&#xA;                                hm.put(""lng"", Double.toString((list.get(l)).longitude) );&#xD;&#xA;                                path.add(hm);&#xD;&#xA;                            }&#xD;&#xA;    	    				points = new ArrayList<LatLng>();&#xD;&#xA;    	    				for(int m=0;m<path.size();m++){&#xD;&#xA;    	                        HashMap<String,String> point = path.get(m);&#xD;&#xA;    	     &#xD;&#xA;    	                        double lat = Double.parseDouble(point.get(""lat""));&#xD;&#xA;    	                        double lng = Double.parseDouble(point.get(""lng""));&#xD;&#xA;    	                        LatLng position = new LatLng(lat, lng);&#xD;&#xA;    	     &#xD;&#xA;    	                        points.add(position);&#xD;&#xA;    	                    }&#xD;&#xA;    	    				//p.addAll(points);&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    	    				&#xD;&#xA;    				}catch(Exception e){}&#xD;&#xA;    				}&#xD;&#xA;    				return null;&#xD;&#xA;    				&#xD;&#xA;    			&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPreExecute() {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			super.onPreExecute();&#xD;&#xA;    			pd = new ProgressDialog(RideNow.this);&#xD;&#xA;    			pd.setTitle(""Please Wait...."");&#xD;&#xA;    			pd.setMessage(""Wait"");&#xD;&#xA;    			pd.setCancelable(false);&#xD;&#xA;    			pd.show();&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		@Override&#xD;&#xA;    		protected void onPostExecute(Void result) {&#xD;&#xA;    			// TODO Auto-generated method stub&#xD;&#xA;    			super.onPostExecute(result);&#xD;&#xA;    			pd.dismiss();&#xD;&#xA;    			//Toast.makeText(getApplicationContext(),"" (""+polyline+"")"",Toast.LENGTH_SHORT).show();&#xD;&#xA;    			Toast.makeText(getApplicationContext(), """"+latt, Toast.LENGTH_LONG).show();&#xD;&#xA;    			p.addAll(points);&#xD;&#xA;    		}&#xD;&#xA;    		&#xD;&#xA;    	}&#xD;&#xA;    	private List<LatLng> decodePoly(String encoded) {&#xD;&#xA;    		 &#xD;&#xA;            List<LatLng> poly = new ArrayList<LatLng>();&#xD;&#xA;            int index = 0, len = encoded.length();&#xD;&#xA;            int lat = 0, lng = 0;&#xD;&#xA;     &#xD;&#xA;            while (index < len) {&#xD;&#xA;                int b, shift = 0, result = 0;&#xD;&#xA;                do {&#xD;&#xA;                    b = encoded.charAt(index++) - 63;&#xD;&#xA;                    result |= (b & 0x1f) << shift;&#xD;&#xA;                    shift += 5;&#xD;&#xA;                } while (b >= 0x20);&#xD;&#xA;                int dlat = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;                lat += dlat;&#xD;&#xA;     &#xD;&#xA;                shift = 0;&#xD;&#xA;                result = 0;&#xD;&#xA;                do {&#xD;&#xA;                    b = encoded.charAt(index++) - 63;&#xD;&#xA;                    result |= (b & 0x1f) << shift;&#xD;&#xA;                    shift += 5;&#xD;&#xA;                } while (b >= 0x20);&#xD;&#xA;                int dlng = ((result & 1) != 0 ? ~(result >> 1) : (result >> 1));&#xD;&#xA;                lng += dlng;&#xD;&#xA;     &#xD;&#xA;                LatLng p = new LatLng((((double) lat / 1E5)),&#xD;&#xA;                    (((double) lng / 1E5)));&#xD;&#xA;                poly.add(p);&#xD;&#xA;            }&#xD;&#xA;     &#xD;&#xA;            return poly;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**My Logcat**&#xD;&#xA;&#xD;&#xA;    02-23 17:44:14.930: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:15.930: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:16.140: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:17.140: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:17.350: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:18.350: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:18.560: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:19.560: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:19.770: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:20.770: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:20.980: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:21.980: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:22.190: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:23.190: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:23.400: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:24.400: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:24.610: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:25.610: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:25.690: D/dalvikvm(950): GC_CONCURRENT freed 396K, 55% free 2671K/5831K, external 716K/1038K, paused 0ms+0ms&#xD;&#xA;    02-23 17:44:25.820: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:26.820: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:27.030: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:28.030: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:28.240: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:29.240: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:29.450: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:30.450: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:30.660: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:31.660: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:31.870: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:32.870: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:33.080: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:34.080: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:34.290: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:35.290: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:35.500: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:36.500: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:36.710: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:37.710: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:37.920: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:38.920: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:39.130: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:40.130: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:40.340: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:41.340: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:41.550: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:42.550: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:42.760: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:42.770: D/dalvikvm(2366): GC_CONCURRENT freed 384K, 54% free 2682K/5767K, external 716K/1038K, paused 0ms+0ms&#xD;&#xA;    02-23 17:44:43.760: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:43.970: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:44.970: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:45.180: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:46.180: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:46.390: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:47.390: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:47.600: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:48.600: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:48.810: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:49.810: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:50.020: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:51.020: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:51.230: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:52.230: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:52.440: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:53.440: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:53.650: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;    02-23 17:44:54.650: W/PGA(521): ctlSwapBuffers(133): Host Connect failed, err = -1(0xffffffff)&#xD;&#xA;    02-23 17:44:54.860: E/PGA(521): PgaSocketWriteAllHdipc: hd_ipc_send() failed&#xD;&#xA;&#xD;&#xA;";;added 6366 characters in body
