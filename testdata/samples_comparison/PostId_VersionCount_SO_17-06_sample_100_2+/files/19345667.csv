Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
49216029;19345667;557418;2;93df105f-1837-4f75-9c65-b83cbe6b9fa1;2013-10-13 13:13:33.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;     excluded_numbers = set()&#xD;&#xA;     for j in range(81):&#xD;&#xA;       if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;         excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;     for m in '123456789':&#xD;&#xA;       if m not in excluded_numbers:&#xD;&#xA;         r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;but it seems that due to the recursion it doesn't work that why. Anyone know why?";;
49216827;19345667;557418;5;8d61704e-efc5-4201-bc68-d04551c22229;2013-10-13 13:42:01.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;     excluded_numbers = set()&#xD;&#xA;     for j in range(81):&#xD;&#xA;       if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;         excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;     for m in '123456789':&#xD;&#xA;       if m not in excluded_numbers:&#xD;&#xA;         r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;I expect since I put ""return a"" in the code that with the ""print r(a)"" I should have the desired result.&#xD;&#xA;&#xD;&#xA;but it seems that due to the recursion it doesn't work that why. Anyone know why?";;added 108 characters in body
49217900;19345667;557418;5;18f08ede-a320-472f-9fbd-50b67435468c;2013-10-13 14:11:14.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;     excluded_numbers = set()&#xD;&#xA;     for j in range(81):&#xD;&#xA;       if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;         excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;     for m in '123456789':&#xD;&#xA;       if m not in excluded_numbers:&#xD;&#xA;         r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;I expect since I put ""return a"" in the code that with the ""print r(a)"" I should have the desired result.&#xD;&#xA;&#xD;&#xA;but it seems that due to the recursion it doesn't work that why. It only returns None instead of the string. Anyone know why?";;added 44 characters in body
49220096;19345667;448715;5;2479c4ad-f4f4-4be1-9020-77a2e11be85f;2013-10-13 15:13:58.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;     excluded_numbers = set()&#xD;&#xA;     for j in range(81):&#xD;&#xA;       if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;         excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;     for m in '123456789':&#xD;&#xA;       if m not in excluded_numbers:&#xD;&#xA;         r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;I expect since I put ""return a"" in the code that with the ""print r(a)"" I should have the desired result. But it seems that due to the recursion it doesn't work that way. It only returns None instead of the string. Anyone know why?";;Change why to way and reformat paragraph.
49223530;19345667;557418;5;05134dd3-9d0c-4b72-9968-9ff2041ada03;2013-10-13 16:45:40.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;      excluded_numbers = set()&#xD;&#xA;      for j in range(81):&#xD;&#xA;        if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;          excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;      for m in '123456789':&#xD;&#xA;        if m not in excluded_numbers:&#xD;&#xA;          r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;I expect since I put ""return a"" in the code that with the ""print r(a)"" I should have the desired result. But it seems that due to the recursion it doesn't work that way. It only returns None instead of the string. Anyone know why?";;added 7 characters in body
49223817;19345667;557418;5;9f94c954-62db-473f-aaee-74dcc6c218a4;2013-10-13 16:52:45.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;      excluded_numbers = set()&#xD;&#xA;      for j in range(81):&#xD;&#xA;        if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;          excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;      for m in '123456789':&#xD;&#xA;        if m not in excluded_numbers:&#xD;&#xA;          return r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a)&#xD;&#xA;&#xD;&#xA;I want to have the result put in a table or printed in the output using return&#xD;&#xA;&#xD;&#xA;>return a&#xD;&#xA;&#xD;&#xA;I expect since I put ""return a"" in the code that with the ""print r(a)"" I should have the desired result. But it seems that due to the recursion it doesn't work that way. It only returns None instead of the string. Anyone know why?";;added 7 characters in body
49336160;19345667;557418;5;dc75916a-eba7-4118-af3c-da18b0879b44;2013-10-15 10:57:13.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    b=[]&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;          b.append(a)&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;      excluded_numbers = set()&#xD;&#xA;      for j in range(81):&#xD;&#xA;        if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;          excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;      for m in '123456789':&#xD;&#xA;        if m not in excluded_numbers:&#xD;&#xA;          return r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a),b&#xD;&#xA;&#xD;&#xA;This is a sudoku solver. It inputs a 81 size string with 0 and 1-9 numbers and returns a string without the 0s. The given example inputs a string `a` and it is supposed to return the result string.&#xD;&#xA;When trying to print the result returned by the recursive function `r` it returns nothing. Also despite of the fact that I fill the `b` table with `b.append(a)` it prints an empty table.";;added 94 characters in body
49337581;19345667;557418;5;8ac4038d-57ac-4d2e-8adb-2128fdc48ac8;2013-10-15 11:19:28.0;"    a=""003020600900305001001806400008102900700000008006708200002609500800203009005010300""&#xD;&#xA;    b=[]&#xD;&#xA;    def same_row(i,j): return (i/9 == j/9)&#xD;&#xA;    def same_col(i,j): return (i-j) % 9 == 0&#xD;&#xA;    def same_block(i,j): return (i/27 == j/27 and i%9/3 == j%9/3)&#xD;&#xA;    def r(a):&#xD;&#xA;      i = a.find('0')&#xD;&#xA;      if i == -1:&#xD;&#xA;          b.append(a)&#xD;&#xA;	      return a&#xD;&#xA;&#xD;&#xA;      excluded_numbers = set()&#xD;&#xA;      for j in range(81):&#xD;&#xA;        if same_row(i,j) or same_col(i,j) or same_block(i,j):&#xD;&#xA;          excluded_numbers.add(a[j])&#xD;&#xA;&#xD;&#xA;      for m in '123456789':&#xD;&#xA;        if m not in excluded_numbers:&#xD;&#xA;          return r(a[:i]+m+a[i+1:])&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    print r(a),b&#xD;&#xA;&#xD;&#xA;This is a sudoku solver. It inputs a 81 size string with 0 and 1-9 numbers and returns a string without the 0s. The given example inputs a string `a` and it is supposed to return the result string. You can verify that the function returns a result by putting `exit(a)` instead of `return a` and `b.append(a)`&#xD;&#xA;&#xD;&#xA;When trying to print the result returned by the recursive function `r` it returns nothing. Also despite of the fact that I fill the `b` table with `b.append(a)` it prints an empty table.";;added 111 characters in body
