Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
108889904;34903567;5816153;2;f0191528-ae4f-4098-a779-6c177f4d525e;2016-01-20 15:06:09.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;
108890429;34903567;5816153;5;762798c0-3192-4f18-9e20-72b00ee76e11;2016-01-20 15:12:30.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 342 characters in body
108891166;34903567;5816153;5;fc93e105-b31d-40bb-9ece-cefea370230d;2016-01-20 15:21:02.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;&#xD;&#xA;    var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;    &#xD;&#xA;                        var fileResult = new StringBuilder();&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                        using (var sr = new StreamReader(fileName))&#xD;&#xA;                        {&#xD;&#xA;                            string line;&#xD;&#xA;    &#xD;&#xA;                            while ((line = sr.ReadLine()) != null; )&#xD;&#xA;                            {&#xD;&#xA;                                var listOfplaceholders = line.GetPlaceHolders();&#xD;&#xA;    &#xD;&#xA;                                var newLine = string.Empty;&#xD;&#xA;    &#xD;&#xA;                                for (var i = 0; i < listOfplaceholders.Count; i++)&#xD;&#xA;                                {&#xD;&#xA;                                    fileResult.Append(line.Replace(listOfplaceholders[i], fileMapper[listOfplaceHolders[i]]));&#xD;&#xA;                                }&#xD;&#xA;                            }&#xD;&#xA;                        }";;added 615 characters in body
108891769;34903567;5816153;5;01ec82f5-43b2-48a1-bab8-ad8314f4dd1c;2016-01-20 15:28:20.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;&#xD;&#xA;    var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                        var fileLine = new List<string>();&#xD;&#xA;    &#xD;&#xA;                        using (var sr = new StreamReader(fileName))&#xD;&#xA;                        {&#xD;&#xA;                            string line;&#xD;&#xA;    &#xD;&#xA;                            while ((line = sr.ReadLine()) != null; )&#xD;&#xA;                            {&#xD;&#xA;                                var listOfplaceholders = line.GetPlaceHolders();&#xD;&#xA;    &#xD;&#xA;                                var fileResult = new StringBuilder();&#xD;&#xA;    &#xD;&#xA;                                for (var i = 0; i < listOfplaceholders.Count; i++)&#xD;&#xA;                                {&#xD;&#xA;                                    line = line.Replace(listOfplaceholders[i], fileMapper[listOfplaceHolders[i]]));&#xD;&#xA;                                }&#xD;&#xA;    &#xD;&#xA;                                fileLine.Add(line);&#xD;&#xA;                            }&#xD;&#xA;                        }";;added 89 characters in body
108892394;34903567;5816153;5;f548c1e4-5fb3-4d16-aedd-8e2911cc7e33;2016-01-20 15:34:38.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                        var fileLines = new List<string>();&#xD;&#xA;    &#xD;&#xA;                        using (var sr = new StreamReader(fileName))&#xD;&#xA;                        {&#xD;&#xA;                            var line = string.Empty;&#xD;&#xA;    &#xD;&#xA;                            while ((line = sr.ReadLine()) != null)&#xD;&#xA;                            {&#xD;&#xA;                                List<string> listOfPlaceHolders = line.GetPlaceHolders();&#xD;&#xA;    &#xD;&#xA;                                for (var i = 0; i < listOfPlaceHolders.Count; i++)&#xD;&#xA;                                {&#xD;&#xA;                                    line = line.Replace(listOfPlaceHolders[i], fileMapper[listOfPlaceHolders[i]]);&#xD;&#xA;                                }&#xD;&#xA;    &#xD;&#xA;                                fileLines.Add(line);&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                        foreach (var line in fileLines)&#xD;&#xA;                        {&#xD;&#xA;                            Console.WriteLine(line);&#xD;&#xA;                        }";;deleted 59 characters in body
108896446;34903567;5816153;5;541da074-e49b-4dee-a23b-a51b2e20f0a1;2016-01-20 16:23:46.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;Complet  and compile example:&#xD;&#xA;&#xD;&#xA;    class Example&#xD;&#xA;        {&#xD;&#xA;            public void GetFile()&#xD;&#xA;            {&#xD;&#xA;                var fileMapper = new Dictionary<string, string>&#xD;&#xA;                {&#xD;&#xA;                    [""obj""] = ""sfsfs"",&#xD;&#xA;                    [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                var fileLines = new List<string>();&#xD;&#xA;    &#xD;&#xA;                using (var sr = new StreamReader(""FileName""))&#xD;&#xA;                {&#xD;&#xA;                    var line = string.Empty;&#xD;&#xA;    &#xD;&#xA;                    while ((line = sr.ReadLine()) != null)&#xD;&#xA;                    {&#xD;&#xA;                        List<string> listOfPlaceHolders = this.GetPlaceHolders(line);&#xD;&#xA;    &#xD;&#xA;                        for (var i = 0; i < listOfPlaceHolders.Count; i++)&#xD;&#xA;                        {&#xD;&#xA;                            line = line.Replace(listOfPlaceHolders[i], fileMapper[listOfPlaceHolders[i]]);&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;                        fileLines.Add(line);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                foreach (var line in fileLines)&#xD;&#xA;                {&#xD;&#xA;                    Console.WriteLine(line);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public List<string> GetPlaceHolders(string line)&#xD;&#xA;            {&#xD;&#xA;                var result = new List<string>();&#xD;&#xA;    &#xD;&#xA;                var placeHoldersIndex = new List<int>();&#xD;&#xA;    &#xD;&#xA;                var open = false;&#xD;&#xA;    &#xD;&#xA;                for (var i = 0; i < line.Length; i++)&#xD;&#xA;                {&#xD;&#xA;                    if (line[i] == '{' && !open)&#xD;&#xA;                    {&#xD;&#xA;                        open = true;&#xD;&#xA;                        placeHoldersIndex.Add(i);&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (line[i] == '}' && open)&#xD;&#xA;                    {&#xD;&#xA;                        placeHoldersIndex.Add(i);&#xD;&#xA;                        open = false;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                for (var j = 0; j < placeHoldersIndex.Count(); j += 2)&#xD;&#xA;                {&#xD;&#xA;                    result.Add(line.Substring(j, j + 1));&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }";;added 893 characters in body
108896973;34903567;5816153;5;ced3e563-d12c-43e9-a640-2a8c7c77dd3b;2016-01-20 16:29:16.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;*Full working example (compiled)*&#xD;&#xA;&#xD;&#xA;    class Example&#xD;&#xA;        {&#xD;&#xA;            public void GetFile()&#xD;&#xA;            {&#xD;&#xA;                var fileMapper = new Dictionary<string, string>&#xD;&#xA;                {&#xD;&#xA;                    [""obj""] = ""sfsfs"",&#xD;&#xA;                    [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                var fileLines = new List<string>();&#xD;&#xA;    &#xD;&#xA;                using (var sr = new StreamReader(""FileName""))&#xD;&#xA;                {&#xD;&#xA;                    var line = string.Empty;&#xD;&#xA;    &#xD;&#xA;                    while ((line = sr.ReadLine()) != null)&#xD;&#xA;                    {&#xD;&#xA;                        List<string> listOfPlaceHolders = this.GetPlaceHolders(line);&#xD;&#xA;    &#xD;&#xA;                        for (var i = 0; i < listOfPlaceHolders.Count; i++)&#xD;&#xA;                        {&#xD;&#xA;                            line = line.Replace(listOfPlaceHolders[i], fileMapper[listOfPlaceHolders[i]]);&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;                        fileLines.Add(line);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                foreach (var line in fileLines)&#xD;&#xA;                {&#xD;&#xA;                    Console.WriteLine(line);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public List<string> GetPlaceHolders(string line)&#xD;&#xA;            {&#xD;&#xA;                var result = new List<string>();&#xD;&#xA;    &#xD;&#xA;                var placeHoldersIndex = new List<int>();&#xD;&#xA;    &#xD;&#xA;                var open = false;&#xD;&#xA;    &#xD;&#xA;                for (var i = 0; i < line.Length; i++)&#xD;&#xA;                {&#xD;&#xA;                    if (line[i] == '{' && !open)&#xD;&#xA;                    {&#xD;&#xA;                        open = true;&#xD;&#xA;                        placeHoldersIndex.Add(i);&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (line[i] == '}' && open)&#xD;&#xA;                    {&#xD;&#xA;                        placeHoldersIndex.Add(i);&#xD;&#xA;                        open = false;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                for (var j = 0; j < placeHoldersIndex.Count(); j += 2)&#xD;&#xA;                {&#xD;&#xA;                    result.Add(line.Substring(j, j + 1));&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }";;added 893 characters in body
108897853;34903567;5816153;5;a6d1be5a-47b6-4137-8fd3-e6d92a0abdf6;2016-01-20 16:39:02.0;"You will nedd create Placeholders&#xD;&#xA;&#xD;&#xA;In file will have lines:&#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;    This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Placeholders are ${....} &#xD;&#xA;&#xD;&#xA;Then You will need parse file, line by line.&#xD;&#xA;&#xD;&#xA;You resolve the placeholders. &#xD;&#xA;&#xD;&#xA;In placeholders first part of string is name of object. &#xD;&#xA;&#xD;&#xA;Therefore you will need to have mapper of existings object in program to object in file. &#xD;&#xA;&#xD;&#xA;Then, You create container with that mapper&#xD;&#xA;&#xD;&#xA;Then you are map the object from file to object from container and using reflection you get the vale of what You define in placeholder&#xD;&#xA;&#xD;&#xA;**Another way:**&#xD;&#xA;&#xD;&#xA;You have only placeholders and mapper.&#xD;&#xA;&#xD;&#xA;In file:&#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    ${obj} contains ${obj.attribute}&#xD;&#xA;        This is a ${test.title}""&#xD;&#xA;&#xD;&#xA;Mapper (for example dictionary)&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;      var fileMapper = new Dictionary<string, string>&#xD;&#xA;                        {&#xD;&#xA;                            [""obj""] = ""sfsfs"",&#xD;&#xA;                            [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                        };&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;And now you need to get placeholders and replace with object form dictionary. &#xD;&#xA;&#xD;&#xA;Reflection is not nessesery&#xD;&#xA;&#xD;&#xA;*Full working example (compiled and tested)*&#xD;&#xA;&#xD;&#xA;    class Example&#xD;&#xA;        {&#xD;&#xA;            public void GetFile()&#xD;&#xA;            {&#xD;&#xA;                var fileMapper = new Dictionary<string, string>&#xD;&#xA;                {&#xD;&#xA;                    [""obj""] = ""sfsfs"",&#xD;&#xA;                    [""obj.attribute""] = ""sfsfs""&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                var fileLines = new List<string>();&#xD;&#xA;    &#xD;&#xA;                using (var sr = new StreamReader(""FileName""))&#xD;&#xA;                {&#xD;&#xA;                    var line = string.Empty;&#xD;&#xA;    &#xD;&#xA;                    while ((line = sr.ReadLine()) != null)&#xD;&#xA;                    {&#xD;&#xA;                        List<string> listOfPlaceHolders = this.GetPlaceHolders(line);&#xD;&#xA;    &#xD;&#xA;                        for (var i = 0; i < listOfPlaceHolders.Count; i++)&#xD;&#xA;                        {&#xD;&#xA;                            line = line.Replace(""${"" + listOfPlaceHolders[i] + ""}"", fileMapper[listOfPlaceHolders[i]]);&#xD;&#xA;                        }&#xD;&#xA;    &#xD;&#xA;                        fileLines.Add(line);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;                foreach (var line in fileLines)&#xD;&#xA;                {&#xD;&#xA;                    Console.WriteLine(line);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;            public List<string> GetPlaceHolders(string line)&#xD;&#xA;            {&#xD;&#xA;                var result = new List<string>();&#xD;&#xA;    &#xD;&#xA;                var placeHoldersIndex = new List<int>();&#xD;&#xA;    &#xD;&#xA;                var open = false;&#xD;&#xA;    &#xD;&#xA;                for (var i = 0; i < line.Length; i++)&#xD;&#xA;                {&#xD;&#xA;                    if (line[i] == '{' && !open)&#xD;&#xA;                    {&#xD;&#xA;                        open = true;&#xD;&#xA;                        placeHoldersIndex.Add(i+1);&#xD;&#xA;                    }&#xD;&#xA;    &#xD;&#xA;                    if (line[i] == '}' && open)&#xD;&#xA;                    {&#xD;&#xA;                        placeHoldersIndex.Add(i);&#xD;&#xA;                        open = false;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;                for (var j = 0; j < placeHoldersIndex.Count(); j += 2)&#xD;&#xA;                {&#xD;&#xA;                   result.Add(line.Substring(placeHoldersIndex[j], placeHoldersIndex[j+1] - placeHoldersIndex[j]));&#xD;&#xA;                };&#xD;&#xA;    &#xD;&#xA;                return result;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;        }";;added 58 characters in body
