Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
144238669;43689651;6336098;2;341b3bf1-15bb-4c24-aadf-0d225636fa1e;2017-04-28 22:21:47.0;"The only example of F# agents that have multiple states (i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? Seems rather important for agent design.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;
144239681;43689651;6336098;5;7ccdbef2-65de-4f4e-8113-66589a0e3ae4;2017-04-28 22:53:15.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, ""feed"" to replychannel out data values at a delay (provided with each value), and a ""pause"" state. I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values.&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;added 342 characters in body
144239899;43689651;6336098;5;bbc9e5de-4cc5-4847-93d6-02127c63b8ca;2017-04-28 22:59:21.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, ""feed"" to replychannel out data values at a delay (provided with each value), and a ""pause"" state. I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;added 342 characters in body
144240254;43689651;6336098;5;2250f220-431c-438c-882d-57deb72474d9;2017-04-28 23:11:07.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;| StartFeed rateMultiplier -> async {&#xD;&#xA;&#xD;&#xA;         replychannel out data values at a delay (provided with each value) &#xD;&#xA;         multiplied by rateMultiplier }&#xD;&#xA;&#xD;&#xA;| Pause"" -> async {&#xD;&#xA;&#xD;&#xA;         wait until a ""StartFeed rateMultiplier"" message comes in&#xD;&#xA;&#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;"added 67 characters in body; added 7 characters in body"
144240527;43689651;6336098;5;b0410317-4556-4c4e-8bed-6e766a80d799;2017-04-28 23:22:10.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;| StartFeed rateMultiplier replychannel ->&#xD;&#xA;&#xD;&#xA;         - replychannel out data values at a delay (provided with each value) &#xD;&#xA;           multiplied by rateMultiplier&#xD;&#xA;         - loop by using  &#xD;&#xA;           thisAgent.Post(StartFeed rateMultiplier replychannel)&#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;| Pause"" -> &#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;"added 67 characters in body; added 7 characters in body"
144240794;43689651;6336098;5;3240b290-3a8d-4ebd-90a6-047928825f4b;2017-04-28 23:32:27.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;| StartFeed rateMultiplier replychannel ->&#xD;&#xA;&#xD;&#xA;         - replychannel out data values at a delay (provided with each value) &#xD;&#xA;           multiplied by rateMultiplier&#xD;&#xA;         - loop by using  &#xD;&#xA;           thisAgent.Post(StartFeed rateMultiplier replychannel)&#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;| Pause"" -> &#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA;edit 2: Given the message queue aspect of MailboxProcessor, I can see that an external message (with a different rateMultiplier value) that is received by the agent and placed in the queue will successfully change the rate without interrupting the flow of data values out. Any advice on the ""Pause"" would be still be appreciated.&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;"added 67 characters in body; added 7 characters in body"
144241882;43689651;6336098;5;df7327fa-e81d-4636-8be4-ad054f38e1ce;2017-04-29 00:08:39.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;| StartFeed rateMultiplier replychannel ->&#xD;&#xA;&#xD;&#xA;         - replychannel out data values at a delay (provided with each value) &#xD;&#xA;           multiplied by rateMultiplier&#xD;&#xA;         - loop by using  &#xD;&#xA;           thisAgent.Post(StartFeed rateMultiplier replychannel)&#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;| Pause -> &#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA;edit 2: Given the message queue aspect of MailboxProcessor, I can see that an external message (with a different rateMultiplier value) that is received by the agent and placed in the queue will successfully change the rate without interrupting the flow of data values out. Any advice on the ""Pause"" would be still be appreciated.&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;deleted 1 character in body
144273317;43689651;142182;5;da6831e3-7a1a-4959-8130-0a78a9552829;2017-04-29 12:15:33.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;    | StartFeed rateMultiplier replychannel ->&#xD;&#xA;&#xD;&#xA;         - replychannel out data values at a delay (provided with each value) &#xD;&#xA;           multiplied by rateMultiplier&#xD;&#xA;         - loop by using  &#xD;&#xA;           thisAgent.Post(StartFeed rateMultiplier replychannel)&#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;    | Pause -> &#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA;edit 2: Given the message queue aspect of MailboxProcessor, I can see that an external message (with a different rateMultiplier value) that is received by the agent and placed in the queue will successfully change the rate without interrupting the flow of data values out. Any advice on the ""Pause"" would be still be appreciated.&#xD;&#xA;&#xD;&#xA; [1]: http://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;Fix code formatting
147698475;43689651;-1;5;b3b999ef-958c-4c46-9705-a008bfeadc04;2017-05-23 12:34:22.0;"I'm investigating F# agents that have multiple states, i.e., using the ""let rec/and"" keyword combination (per Expert F# 3.0's ""Message Processing and State Machines"") to provide multiple async blocks. The only example I've been able to find so far is the ""throttling agent"" discussed [here][1]  (also Fssnip.net). Are there any other resources for learning this pattern? &#xD;&#xA;&#xD;&#xA;edit: My specific application is an agent that has two states, &#xD;&#xA;&#xD;&#xA;    | StartFeed rateMultiplier replychannel ->&#xD;&#xA;&#xD;&#xA;         - replychannel out data values at a delay (provided with each value) &#xD;&#xA;           multiplied by rateMultiplier&#xD;&#xA;         - loop by using  &#xD;&#xA;           thisAgent.Post(StartFeed rateMultiplier replychannel)&#xD;&#xA;           &#xD;&#xA;&#xD;&#xA;    | Pause -> &#xD;&#xA;&#xD;&#xA; I would like to provide some way to pass in a feed rate multiplier value that increases/decreases the delay by the passed-in multiplier in the ""feed"" async state, without interrupting the feed of values. I guess the question boils down to ""how do you keep an async state block actively looping while still being aware of new messages?"" Almost like skipping the inbox.Receive asynchronous wait, unless a message actually comes in? Inbox.scan?&#xD;&#xA;&#xD;&#xA;edit 2: Given the message queue aspect of MailboxProcessor, I can see that an external message (with a different rateMultiplier value) that is received by the agent and placed in the queue will successfully change the rate without interrupting the flow of data values out. Any advice on the ""Pause"" would be still be appreciated.&#xD;&#xA;&#xD;&#xA; [1]: https://stackoverflow.com/questions/6219726/throttled-async-download-in-f";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
