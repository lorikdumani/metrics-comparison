Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
29116483;12387793;555014;2;737821bc-ebb7-4c5a-a4c7-b3ab29f1c49d;2012-09-12 12:04:03.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29";;
29117741;12387793;555014;5;61128195-c56b-4597-823a-f5bafeff881b;2012-09-12 12:31:36.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA;&#xD;&#xA;    System.Uri myUri = new System.Uri(&#xD;&#xA;            ""http://myPageUrlAddress.com/script.aspx?deviceid="" + deviceId);&#xD;&#xA;        HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;        textRequest.Method = ""POST"";&#xD;&#xA;        textRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;        textRequest.BeginGetRequestStream(new &#xD;&#xA;                              AsyncCallback(GetRequestStreamCallback), myRequest)&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29";;added 862 characters in body
29123547;12387793;555014;5;0e775639-2ed9-4aac-92d0-08cb0dfdd672;2012-09-12 14:25:41.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA; &#xD;&#xA;    //collect all data you need:&#xD;&#xA;    var deviceId = ...&#xD;&#xA;    var userName = ...&#xD;&#xA;    var userLogin = ...&#xD;&#xA;    //create request string&#xD;&#xA;    var requestUrl =  string&#xD;&#xA;            .Format(""http://myPageUrlAddress.com/script.aspx?deviceid={0}&user={1}&login={2}"", deviceId, userName, userLogin);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    System.Uri myUri = new System.Uri(requestUrl);&#xD;&#xA;    //create a request instance&#xD;&#xA;    HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;    textRequest.Method = ""POST"";&#xD;&#xA;    textRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;    //and it will be sent. Also you need to create GetRequestStreamCallback method to &#xD;&#xA;    //handle server responce.&#xD;&#xA;    textRequest.BeginGetRequestStream(new &#xD;&#xA;    AsyncCallback(GetRequestStreamCallback), myRequest);&#xD;&#xA;&#xD;&#xA;   &#xD;&#xA;   On the servre side pars the request:&#xD;&#xA;   Using php you should write something like that:&#xD;&#xA;&#xD;&#xA;    echo $_REQUEST[""deviceid""]; &#xD;&#xA;    echo $_REQUEST[""user""];&#xD;&#xA;    echo $_REQUEST[""login""];&#xD;&#xA;it will print sended parameters.&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29";;added 603 characters in body
29125748;12387793;555014;5;a958d5a5-33fe-496b-a5fe-aa2b0dacbfc6;2012-09-12 15:10:11.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA; &#xD;&#xA;         private void Button_Click(object sender, RoutedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            //collect all data you need:&#xD;&#xA;            var deviceId = Convert.ToBase64String(ExtendedPropertyHelper.GetDeviceUniqueID());&#xD;&#xA;            var userName = ExtendedPropertyHelper.GetWindowsLiveAnonymousID();&#xD;&#xA;            var manufatcurer = ExtendedPropertyHelper.GetManufacturer();&#xD;&#xA;            //create request string&#xD;&#xA;            var requestUrl = string&#xD;&#xA;            .Format(""http://myPageUrlAddress.com/script.aspx?deviceid={0}&user={1}&login={2}"", deviceId, userName, manufatcurer);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            System.Uri myUri = new System.Uri(requestUrl);&#xD;&#xA;            //create a request instance&#xD;&#xA;            HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;            myRequest.Method = ""POST"";&#xD;&#xA;            myRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;            //and it will be sent. Also you need to create GetRequestStreamCallback method to &#xD;&#xA;            //handle server responce.&#xD;&#xA;            myRequest.BeginGetRequestStream(new&#xD;&#xA;            AsyncCallback(GetRequestStreamCallback), myRequest);&#xD;&#xA;        }&#xD;&#xA;        public void GetRequestStreamCallback(IAsyncResult result) { ; }&#xD;&#xA;&#xD;&#xA;What about e-mail - just create a TextBox on the same Page, and save user input to a variable.&#xD;&#xA;   &#xD;&#xA;   On the servre side pars the request:&#xD;&#xA;   Using php you should write something like that:&#xD;&#xA;&#xD;&#xA;    echo $_REQUEST[""deviceid""]; &#xD;&#xA;    echo $_REQUEST[""user""];&#xD;&#xA;    echo $_REQUEST[""login""];&#xD;&#xA;it will print sended parameters.&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29";;added 429 characters in body
29126899;12387793;555014;5;58afbf50-d214-44c2-bf30-2878b7717e01;2012-09-12 15:33:55.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA; &#xD;&#xA;         private void Button_Click(object sender, RoutedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            //collect all data you need:&#xD;&#xA;            var deviceId = Convert.ToBase64String(ExtendedPropertyHelper.GetDeviceUniqueID());&#xD;&#xA;            var userName = ExtendedPropertyHelper.GetWindowsLiveAnonymousID();&#xD;&#xA;            var manufatcurer = ExtendedPropertyHelper.GetManufacturer();&#xD;&#xA;            //create request string&#xD;&#xA;            var requestUrl = string&#xD;&#xA;      .Format(""http://myPageUrlAddress.com/script.aspx?deviceid={0}&user={1}&login={2}"",&#xD;&#xA;       deviceId, userName, manufatcurer);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            System.Uri myUri = new System.Uri(requestUrl);&#xD;&#xA;            //create a request instance&#xD;&#xA;            HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;            myRequest.Method = ""POST"";&#xD;&#xA;            myRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;            //and it will be sent. &#xD;&#xA;            //Also you need to create GetRequestStreamCallback method to &#xD;&#xA;            //handle server responce.&#xD;&#xA;            myRequest.BeginGetRequestStream(new&#xD;&#xA;            AsyncCallback(GetRequestStreamCallback), myRequest);&#xD;&#xA;        }&#xD;&#xA;        //this method is empty. You can show tha dialog box about successful sending.&#xD;&#xA;        public void GetRequestStreamCallback(IAsyncResult result) { ; }&#xD;&#xA;&#xD;&#xA;What about e-mail - just create a TextBox on the same Page, and save user input to a variable.&#xD;&#xA;   &#xD;&#xA;   On the servre side pars the request:&#xD;&#xA;   Using php you should write something like that:&#xD;&#xA;&#xD;&#xA;    echo $_REQUEST[""deviceid""]; &#xD;&#xA;    echo $_REQUEST[""user""];&#xD;&#xA;    echo $_REQUEST[""login""];&#xD;&#xA;it will print sended parameters.&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29";;added 105 characters in body
29127971;12387793;555014;5;8f61e3a0-3b30-4cfe-82a5-0bff44acc482;2012-09-12 15:58:07.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA; &#xD;&#xA;         private void Button_Click(object sender, RoutedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            //collect all data you need:&#xD;&#xA;            var deviceId = Convert.ToBase64String(ExtendedPropertyHelper.GetDeviceUniqueID());&#xD;&#xA;            var userName = ExtendedPropertyHelper.GetWindowsLiveAnonymousID();&#xD;&#xA;            var manufatcurer = ExtendedPropertyHelper.GetManufacturer();&#xD;&#xA;            //create request string&#xD;&#xA;            //[see the explanation on MSDN][2]&#xD;&#xA;            var requestUrl = string&#xD;&#xA;      .Format(""http://myPageUrlAddress.com/script.aspx?deviceid={0}&user={1}&login={2}"",&#xD;&#xA;       deviceId, userName, manufatcurer);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            System.Uri myUri = new System.Uri(requestUrl);&#xD;&#xA;            //create a request instance&#xD;&#xA;            HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;            myRequest.Method = ""POST"";&#xD;&#xA;            myRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;            //and it will be sent. &#xD;&#xA;            //Also you need to create GetRequestStreamCallback method to &#xD;&#xA;            //handle server responce.&#xD;&#xA;            myRequest.BeginGetRequestStream(new&#xD;&#xA;            AsyncCallback(GetRequestStreamCallback), myRequest);&#xD;&#xA;        }&#xD;&#xA;        //this method is empty. You can show tha dialog box about successful sending.&#xD;&#xA;        public void GetRequestStreamCallback(IAsyncResult result) { ; }&#xD;&#xA;&#xD;&#xA;What about e-mail - just create a TextBox on the same Page, and save user input to a variable.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29&#xD;&#xA;  [2]: http://msdn.microsoft.com/en-us/library/system.string.format.aspx";;deleted 101 characters in body
29128415;12387793;555014;5;6b1fd330-7138-4044-90b8-e8e1755edb4c;2012-09-12 16:07:50.0;"You can get `DeviceExtendedProperties.DeviceUniqueId`  from `Microsoft.Phone.Info` namespace.&#xD;&#xA;Don't forget to declare in `WMAppManifest.xml`&#xD;&#xA;&#xD;&#xA;like this:&#xD;&#xA;&#xD;&#xA;    <Capabilities>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_DEVICE""/>&#xD;&#xA;      <Capability Name=""ID_CAP_IDENTITY_USER""/>&#xD;&#xA;    </Capabilities>&#xD;&#xA;&#xD;&#xA;Link to msdn [here][1]&#xD;&#xA;&#xD;&#xA;Then, you can send this id to your e-mail:&#xD;&#xA;&#xD;&#xA;    var emailComposeTask = new EmailComposeTask&#xD;&#xA;    {&#xD;&#xA;        To = ""your-email@domiain.com"",&#xD;&#xA;        Subject = ""Test Message using EmailComposeTask"",&#xD;&#xA;        Body = deviceId&#xD;&#xA;    };&#xD;&#xA;    emailComposeTask.Show();&#xD;&#xA;&#xD;&#xA;But this will open an-email client, and I don't thik that user will be so kind to send you an email. So, you'd better send a POST request to your server&#xD;&#xA; &#xD;&#xA;         private void Button_Click(object sender, RoutedEventArgs e)&#xD;&#xA;        {&#xD;&#xA;            //collect all data you need:&#xD;&#xA;            var deviceId = Convert.ToBase64String(ExtendedPropertyHelper.GetDeviceUniqueID());&#xD;&#xA;            var userName = ExtendedPropertyHelper.GetWindowsLiveAnonymousID();&#xD;&#xA;            var manufatcurer = ExtendedPropertyHelper.GetManufacturer();&#xD;&#xA;            //create request string&#xD;&#xA;            //[see the explanation on MSDN][2]&#xD;&#xA;            var requestUrl = string&#xD;&#xA;      .Format(""http://myPageUrlAddress.com/script.aspx?deviceid={0}&user={1}&manufacturer={2}"",&#xD;&#xA;       deviceId, userName, manufatcurer);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;            System.Uri myUri = new System.Uri(requestUrl);&#xD;&#xA;            //create a request instance&#xD;&#xA;            HttpWebRequest myRequest = (HttpWebRequest)HttpWebRequest.Create(myUri);&#xD;&#xA;            myRequest.Method = ""POST"";&#xD;&#xA;            myRequest.ContentType = ""application/x-www-form-urlencoded"";&#xD;&#xA;            //and it will be sent. &#xD;&#xA;            //Also you need to create GetRequestStreamCallback method to &#xD;&#xA;            //handle server responce.&#xD;&#xA;            myRequest.BeginGetRequestStream(new&#xD;&#xA;            AsyncCallback(GetRequestStreamCallback), myRequest);&#xD;&#xA;        }&#xD;&#xA;        //this method is empty. You can show tha dialog box about successful sending.&#xD;&#xA;        public void GetRequestStreamCallback(IAsyncResult result) { ; }&#xD;&#xA;&#xD;&#xA;What about e-mail - just create a TextBox on the same Page, and save user input to a variable.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://msdn.microsoft.com/en-us/library/microsoft.phone.info.deviceextendedproperties%28v=vs.92%29&#xD;&#xA;  [2]: http://msdn.microsoft.com/en-us/library/system.string.format.aspx";;added 7 characters in body
