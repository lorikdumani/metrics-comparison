Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
142846520;43348372;7851069;2;9a37d113-dd15-4acf-a41e-de24806badc5;2017-04-11 14:08:21.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes:&#xD;&#xA;&#xD;&#xA;    protocol Conscrious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscrious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;
142847065;43348372;7851069;5;a2a1d06b-99c5-4906-aedd-89382e3a282c;2017-04-11 14:13:46.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;corrected spelling
142847737;43348372;7851069;5;ee6e8142-d02a-48d4-9456-a23ea9be875a;2017-04-11 14:21:27.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes, see the comments:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;added 18 characters in body
142847963;43348372;7851069;5;1f8d572c-f1ed-48a0-898b-f6f2feaa7644;2017-04-11 14:23:45.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes, see the comments:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false(why is false)&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;added 14 characters in body
142850568;43348372;7851069;5;849260c5-2fd1-4165-9157-947f2573c17a;2017-04-11 14:52:33.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes, see the comments, why the log function in UIViewController was not called, it conforms protocol; why UIViewController was catched but T == UIViewController.self is false:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false(why is false)&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;added 153 characters in body
144706210;43348372;1527934;5;e95619e4-b292-4731-a789-4e7b55dde409;2017-05-05 12:58:50.0;"Met the same issue with http://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes, see the comments, why the log function in `UIViewController` was not called, it conforms protocol; why `UIViewController` was caught but `T == UIViewController.self` is `false`:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false(why is false)&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;grammar, code formatting
147697178;43348372;-1;5;3e3f9931-eba8-471c-b5b6-098c097117be;2017-05-23 12:34:18.0;"Met the same issue with https://stackoverflow.com/questions/42824541/swift-3-1-deprecates-initialize-how-can-i-achieve-the-same-thing, @Jordan Smith 's solution is very impressive, then i was interested in the implement, but met some troubles in practice, here are some key codes, see the comments, why the log function in `UIViewController` was not called, it conforms protocol; why `UIViewController` was caught but `T == UIViewController.self` is `false`:&#xD;&#xA;&#xD;&#xA;    protocol Conscious {&#xD;&#xA;        static func awake()&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** extension */&#xD;&#xA;    extension UIViewController: Conscious {&#xD;&#xA;        static func awake() {&#xD;&#xA;            if self == UIViewController.self {&#xD;&#xA;                print(self, #function)     // never came here, but seems should come&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /** main */&#xD;&#xA;    private static let _operation: Void = {&#xD;&#xA;        let typeCount = Int(objc_getClassList(nil, 0))&#xD;&#xA;        let types = UnsafeMutablePointer<AnyClass?>.allocate(capacity: typeCount)&#xD;&#xA;        let autoreleasingTypes = AutoreleasingUnsafeMutablePointer<AnyClass?>(types)&#xD;&#xA;        objc_getClassList(autoreleasingTypes, Int32(typeCount))&#xD;&#xA;        &#xD;&#xA;        for index in 0 ..< typeCount {&#xD;&#xA;            (types[index] as? Conscious.Type)?.awake()&#xD;&#xA;            &#xD;&#xA;            let T = types[index]!&#xD;&#xA;            let vc = UIViewController()&#xD;&#xA;            print(T, vc.isKind(of: T), T == UIViewController.self)&#xD;&#xA;            /*&#xD;&#xA;              Strange things:&#xD;&#xA;              UIResponder true false&#xD;&#xA;              UIViewController true false(why is false)&#xD;&#xA;              UISearchController false false&#xD;&#xA;             */&#xD;&#xA;        }&#xD;&#xA;        &#xD;&#xA;        types.deallocate(capacity: typeCount)&#xD;&#xA;    }()";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
