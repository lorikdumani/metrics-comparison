Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
96036534;31657248;2663883;2;de6cd0d7-e220-4020-9d00-972788919221;2015-07-27 15:33:28.0;"Have you tried ""MeshFaceMaterial""?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });";;
96037132;31657248;2663883;5;6b562b15-9687-4029-8b3d-1bf0d02afaf4;2015-07-27 15:39:22.0;"Have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });";;added 56 characters in body
96037659;31657248;2663883;5;b17c0d23-d784-40ed-ae62-2358f90b99ca;2015-07-27 15:46:06.0;"If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });";;added 66 characters in body
96038220;31657248;2663883;5;12025f19-3434-4436-9663-205f9e91890c;2015-07-27 15:51:57.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube).";;added 66 characters in body
96038834;31657248;2663883;5;093dd20d-fada-4f84-83b6-5d192020cd10;2015-07-27 15:58:34.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube).&#xD;&#xA;&#xD;&#xA;    var materials = [];&#xD;&#xA;    for (var i=0; i<6; i++) {&#xD;&#xA;      var img = new Image();&#xD;&#xA;      img.src = i + '.png';&#xD;&#xA;      var tex = new THREE.Texture(img);&#xD;&#xA;      img.tex = tex;&#xD;&#xA;      img.onload = function() {&#xD;&#xA;        this.tex.needsUpdate = true;&#xD;&#xA;      };&#xD;&#xA;      var mat = new THREE.MeshBasicMaterial({color: 0xffffff, map: tex});&#xD;&#xA;      materials.push(mat);&#xD;&#xA;    }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;added 66 characters in body
96038937;31657248;2663883;5;fad25784-7009-4167-8dcd-61c8a203907d;2015-07-27 16:00:05.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube).&#xD;&#xA;&#xD;&#xA;    var materials = [];&#xD;&#xA;    for (var i=0; i<6; i++) {&#xD;&#xA;      var img = new Image();&#xD;&#xA;      img.src = ""./resources/images/""+ i + "".png"";&#xD;&#xA;      var tex = new THREE.Texture(img);&#xD;&#xA;      img.tex = tex;&#xD;&#xA;      img.onload = function() {&#xD;&#xA;        this.tex.needsUpdate = true;&#xD;&#xA;      };&#xD;&#xA;      var mat = new THREE.MeshBasicMaterial({color: 0xffffff, map: tex});&#xD;&#xA;      materials.push(mat);&#xD;&#xA;    }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;added 66 characters in body
96039755;31657248;2663883;5;e7aaaf04-305c-4343-8dfe-053b85243bbb;2015-07-27 16:09:55.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube).&#xD;&#xA;&#xD;&#xA;        var materials = [];&#xD;&#xA;        for (var i=0; i<6; i++) {&#xD;&#xA;         var image = ""./resources/images/""+fileName+"".png""&#xD;&#xA;    	 materials.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture(image)}));&#xD;&#xA;        }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;added 66 characters in body
96040918;31657248;2663883;5;e5d9b8c4-5435-404f-9a36-4ad7a54b1cfe;2015-07-27 16:25:32.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is ""MeshFaceMaterial"" is an option as well, the similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube). I modified that code to fit the situation:&#xD;&#xA;&#xD;&#xA;        var materials = [];&#xD;&#xA;        for (var i=0; i<6; i++) {&#xD;&#xA;         var image = ""./resources/images/""+fileName+"".png""&#xD;&#xA;    	 materials.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture(image)}));&#xD;&#xA;        }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;added 88 characters in body
96041719;31657248;2663883;5;5b649379-61c6-43fc-b965-8d094b4e3050;2015-07-27 16:36:22.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is ""MeshFaceMaterial"" is an option as well, the similar example [here](http://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube). I modified that code to fit the situation:&#xD;&#xA;&#xD;&#xA;        var image;        &#xD;&#xA;        var materials = [];&#xD;&#xA;        for (var i=0; i<6; i++) {&#xD;&#xA;         image = ""./resources/images/""+fileName+"".png""&#xD;&#xA;    	 materials.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture(image)}));&#xD;&#xA;        }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;added 24 characters in body
147586570;31657248;-1;5;dab04d00-2682-46ab-afc1-4f882cc4fce1;2017-05-23 12:29:50.0;"1) If you are loading materials, and already have the geometry, then have you tried ""MeshFaceMaterial"" ([docs](http://threejs.org/docs/#Reference/Core/Face3))?&#xD;&#xA;&#xD;&#xA;    var loaderSix = new THREE.JSONLoader();&#xD;&#xA;        loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;            var materialSix = new THREE.MeshFaceMaterial(""your materials array: model"");&#xD;&#xA;    &#xD;&#xA;            six = new THREE.Mesh(""your cube geometry"", materialSix);&#xD;&#xA;            six.translateY(1);&#xD;&#xA;            six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;2) If you are loading the object, then to add different images is ""MeshFaceMaterial"" is an option as well, the similar example [here](https://stackoverflow.com/questions/8820591/how-to-use-multiple-materials-in-a-three-js-cube). I modified that code to fit the situation:&#xD;&#xA;&#xD;&#xA;        var image;        &#xD;&#xA;        var materials = [];&#xD;&#xA;        for (var i=0; i<6; i++) {&#xD;&#xA;         image = ""./resources/images/""+fileName+"".png""&#xD;&#xA;    	 materials.push(new THREE.MeshBasicMaterial( { map: THREE.ImageUtils.loadTexture(image)}));&#xD;&#xA;        }&#xD;&#xA;        var loaderSix = new THREE.JSONLoader();&#xD;&#xA;            loaderSix.load(""./resources/json/six.json"", function (model) {&#xD;&#xA;                var materialSix = new THREE.MeshFaceMaterial(materials);&#xD;&#xA;        &#xD;&#xA;                six = new THREE.Mesh(model, materialSix);&#xD;&#xA;                six.translateY(1);&#xD;&#xA;                six.scale = new THREE.Vector3(3, 3, 3);&#xD;&#xA;            });";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
