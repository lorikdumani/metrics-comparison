Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
85240223;28897494;3839843;2;55639f8d-6be6-450c-8a98-f39ea7292b44;2015-03-06 11:06:36.0;"related to my question on jca inbound transaction management.&#xD;&#xA;http://stackoverflow.com/questions/28881889/how-to-control-xaresource-in-inbound-jca-resource-adapter-for-conversational-tra/28882053#28882053&#xD;&#xA;&#xD;&#xA;For an inbound resource adapter I need to keep a transaction open and execute different actions in that transaction. &#xD;&#xA;&#xD;&#xA;This could be solved by making the message endpoint @Stateful, but It's unclear to me wether that is allowed.&#xD;&#xA;&#xD;&#xA;The 3.1 EJB spec states (section 5.1)&#xD;&#xA;&#xD;&#xA;Message-driven bean instances have no conversational state. This means that all bean instances are equivalent when they are not involved in servicing a client message.&#xD;&#xA;&#xD;&#xA;I found ""someone on the internet"" stating that it would be allowed.&#xD;&#xA;https://github.com/dblevins/jca-quickstart/wiki/Inbound-Connectors-MDBs-Today&#xD;&#xA;&#xD;&#xA;Another approach would be trying to  manage the XAResrouce myself, but no luck there yet...";;
85240685;28897494;3839843;5;17a45332-5ba4-40b0-99e1-7d3b6f12a553;2015-03-06 11:13:41.0;"related to my question on jca inbound transaction management.&#xD;&#xA;http://stackoverflow.com/questions/28881889/how-to-control-xaresource-in-inbound-jca-resource-adapter-for-conversational-tra/28882053#28882053&#xD;&#xA;&#xD;&#xA;For an inbound resource adapter I need to keep a transaction open and execute different actions in that transaction. &#xD;&#xA;&#xD;&#xA;This could be solved by making the message endpoint @Stateful, but It's unclear to me wether that is allowed.&#xD;&#xA;&#xD;&#xA;The 3.1 EJB spec states (section 5.1)&#xD;&#xA;&#xD;&#xA;***Message-driven bean instances have no conversational state. This means that all bean instances are equivalent when they are not involved in servicing a client message.***&#xD;&#xA;&#xD;&#xA;I found ""someone on the internet"" stating that it would be allowed.&#xD;&#xA;https://github.com/dblevins/jca-quickstart/wiki/Inbound-Connectors-MDBs-Today&#xD;&#xA;&#xD;&#xA;Another approach would be trying to  manage the XAResrouce myself, but no luck there yet...&#xD;&#xA;&#xD;&#xA;edited:&#xD;&#xA;Note that the JCA spec states (section 13.5)&#xD;&#xA;&#xD;&#xA;***Note that the endpoint instance supplied by the createEndPoint method call is a&#xD;&#xA;proxy which implements the endpoint message listener type and the&#xD;&#xA;MessageEndpoint interface and it is not the actual endpoint.***&#xD;&#xA;&#xD;&#xA;So, afaik there is no guarantee that the actual listener is the same everytime you go through the proxy.";;added 379 characters in body
85403850;28897494;3839843;5;327f5e7a-e0f9-47db-a26b-8299a05f4275;2015-03-09 08:16:59.0;"related to my question on jca inbound transaction management.&#xD;&#xA;http://stackoverflow.com/questions/28881889/how-to-control-xaresource-in-inbound-jca-resource-adapter-for-conversational-tra/28882053#28882053&#xD;&#xA;&#xD;&#xA;For an inbound resource adapter I need to keep a transaction open and execute different actions in that transaction. &#xD;&#xA;&#xD;&#xA;This could be solved by making the message endpoint @Stateful, but It's unclear to me wether that is allowed.&#xD;&#xA;&#xD;&#xA;The 3.1 EJB spec states (section 5.1)&#xD;&#xA;&#xD;&#xA;***Message-driven bean instances have no conversational state. This means that all bean instances are equivalent when they are not involved in servicing a client message.***&#xD;&#xA;&#xD;&#xA;I found a post from David Blevins, founder of TomiTribe (the company behin TomEE), stating that it would be allowed.&#xD;&#xA;https://github.com/dblevins/jca-quickstart/wiki/Inbound-Connectors-MDBs-Today&#xD;&#xA;&#xD;&#xA;Another approach would be trying to  manage the XAResrouce myself, but no luck there yet...&#xD;&#xA;&#xD;&#xA;edited:&#xD;&#xA;Note that the JCA spec states (section 13.5)&#xD;&#xA;&#xD;&#xA;***Note that the endpoint instance supplied by the createEndPoint method call is a&#xD;&#xA;proxy which implements the endpoint message listener type and the&#xD;&#xA;MessageEndpoint interface and it is not the actual endpoint.***&#xD;&#xA;&#xD;&#xA;So, afaik there is no guarantee that the actual listener is the same everytime you go through the proxy.";;update reference to blog post after realizing it was a post from David Blevins, founder of TomEE
146035570;28897494;-1;5;a7d71f1a-afde-476f-a8c5-f52b39367cd6;2017-05-23 10:10:08.0;"related to my question on jca inbound transaction management.&#xD;&#xA;https://stackoverflow.com/questions/28881889/how-to-control-xaresource-in-inbound-jca-resource-adapter-for-conversational-tra/28882053#28882053&#xD;&#xA;&#xD;&#xA;For an inbound resource adapter I need to keep a transaction open and execute different actions in that transaction. &#xD;&#xA;&#xD;&#xA;This could be solved by making the message endpoint @Stateful, but It's unclear to me wether that is allowed.&#xD;&#xA;&#xD;&#xA;The 3.1 EJB spec states (section 5.1)&#xD;&#xA;&#xD;&#xA;***Message-driven bean instances have no conversational state. This means that all bean instances are equivalent when they are not involved in servicing a client message.***&#xD;&#xA;&#xD;&#xA;I found a post from David Blevins, founder of TomiTribe (the company behin TomEE), stating that it would be allowed.&#xD;&#xA;https://github.com/dblevins/jca-quickstart/wiki/Inbound-Connectors-MDBs-Today&#xD;&#xA;&#xD;&#xA;Another approach would be trying to  manage the XAResrouce myself, but no luck there yet...&#xD;&#xA;&#xD;&#xA;edited:&#xD;&#xA;Note that the JCA spec states (section 13.5)&#xD;&#xA;&#xD;&#xA;***Note that the endpoint instance supplied by the createEndPoint method call is a&#xD;&#xA;proxy which implements the endpoint message listener type and the&#xD;&#xA;MessageEndpoint interface and it is not the actual endpoint.***&#xD;&#xA;&#xD;&#xA;So, afaik there is no guarantee that the actual listener is the same everytime you go through the proxy.";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
