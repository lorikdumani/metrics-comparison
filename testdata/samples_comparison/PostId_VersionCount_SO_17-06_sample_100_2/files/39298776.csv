Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
126304814;39298776;1420382;2;d1c5bcb9-1f71-4ac9-abd6-4d2d8d287f19;2016-09-02 18:33:20.0;"I was wondering if there is a more idiomatic way to get the functionality represented by the code below. Basically I just want to check if the array contains the elements in `pattern` in the order specified by `pattern`. It's okay for there to be gaps between these elements.&#xD;&#xA;&#xD;&#xA;    class Array&#xD;&#xA;      def has_pattern?(pattern)&#xD;&#xA;        offset = 0&#xD;&#xA;        pattern.each do |p|&#xD;&#xA;          offset = self[offset..-1].index(p)&#xD;&#xA;          return false if offset.nil?&#xD;&#xA;        end&#xD;&#xA;        return true&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    puts [1,2,3,4,5,1].has_pattern?([1,4,5]) # true&#xD;&#xA;    puts [1,2,3,4,5,1].has_pattern?([2,3,1]) # true&#xD;&#xA;    puts [1,2,3,4,5,1].has_pattern?([1,3,2]) # false&#xD;&#xA;&#xD;&#xA;The code above seems to work, but doesn't feel like idiomatic Ruby to me. Is there a nicer way to write this?";;
126306541;39298776;2423164;5;1fe32e7e-0a68-4f0d-84dd-1e8579223e6f;2016-09-02 19:07:03.0;"I was wondering if there is a more idiomatic way to get the functionality represented by the code below. Basically I just want to check if the array contains the elements in `pattern` in the order specified by `pattern`. It's okay for there to be gaps between these elements.&#xD;&#xA;&#xD;&#xA;    class Array&#xD;&#xA;      def has_pattern?(pattern)&#xD;&#xA;        offset = 0&#xD;&#xA;        pattern.each do |p|&#xD;&#xA;          offset = self[offset..-1].index(p)&#xD;&#xA;          return false if offset.nil?&#xD;&#xA;        end&#xD;&#xA;        return true&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;    puts [1, 2, 3, 4, 5, 1].has_pattern?([1, 4, 5]) # true&#xD;&#xA;    puts [1, 2, 3, 4, 5, 1].has_pattern?([2, 3, 1]) # true&#xD;&#xA;    puts [1, 2, 3, 4, 5, 1].has_pattern?([1, 3, 2]) # false&#xD;&#xA;&#xD;&#xA;The code above seems to work, but doesn't feel like idiomatic Ruby to me. Is there a nicer way to write this?";;whitespaces
