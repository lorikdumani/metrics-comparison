Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
108005711;34681224;420892;2;2f4cc6c7-17f7-4ddf-bbcf-b39b924021b4;2016-01-08 16:03:57.0;"This is mostly syntactic sugar but I'd like to access the items of a dictionary as object properties.&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;&#xD;&#xA;    class CoolThing():&#xD;&#xA;      def __init__(self):&#xD;&#xA;        self.CoolDict = {'a': 1, 'b': 2}&#xD;&#xA;&#xD;&#xA;and I'd like to have&#xD;&#xA;&#xD;&#xA;    my_cool_thing.a # => 1&#xD;&#xA;    my_cool_thing.b # => 2&#xD;&#xA;";;
108026840;34681224;420892;5;299b1ac1-d36f-402b-bfc2-809fc6ba039e;2016-01-08 21:46:16.0;"This is mostly syntactic sugar but I'd like to access the items of a dictionary as object properties.&#xD;&#xA;&#xD;&#xA;Example:&#xD;&#xA;&#xD;&#xA;    class CoolThing():&#xD;&#xA;      def __init__(self):&#xD;&#xA;        self.CoolDict = {'a': 1, 'b': 2}&#xD;&#xA;&#xD;&#xA;and I'd like to have&#xD;&#xA;&#xD;&#xA;    my_cool_thing.a # => 1&#xD;&#xA;    my_cool_thing.b # => 2&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**Edit: some code of a potential solution with a nested structure with dot notation: device.property.field**&#xD;&#xA;&#xD;&#xA;    class Parameters():&#xD;&#xA;        &#xD;&#xA;        def __init__(self, ids, devices):&#xD;&#xA;            self._ids = ids&#xD;&#xA;            self._devices = devices&#xD;&#xA;            for p in self._devices:&#xD;&#xA;                p = p[0]&#xD;&#xA;                if self.__dict__.get(p.device) is None:&#xD;&#xA;                    self.__dict__[p.device] = SmartDict()&#xD;&#xA;                else:&#xD;&#xA;                    if self.__dict__[p.device].get(p.property) is None:&#xD;&#xA;                        self.__dict__[p.device][p.property] = SmartDict()&#xD;&#xA;                    else:&#xD;&#xA;                        if self.__dict__[p.device][p.property].get(p.field) is None:&#xD;&#xA;                            self.__dict__[p.device][p.property][p.field] = ParameterData(p)&#xD;&#xA;        &#xD;&#xA;    class SmartDict():&#xD;&#xA;        def __init__(self):&#xD;&#xA;            self.__dict__ = {}&#xD;&#xA;        &#xD;&#xA;        def __getitem__(self, k):&#xD;&#xA;            return self.__dict__[k]&#xD;&#xA;        &#xD;&#xA;        def __setitem__(self, k, v):&#xD;&#xA;            self.__dict__[k] = v&#xD;&#xA;            &#xD;&#xA;        def get(self, k):&#xD;&#xA;            return self.__dict__.get(k)&#xD;&#xA;            &#xD;&#xA;        def __len__(self):&#xD;&#xA;            return len(self.__dict__)&#xD;&#xA;";;added 1186 characters in body
