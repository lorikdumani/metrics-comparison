Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
7165799;3440556;404854;2;bb450d67-7a51-4feb-a0f5-eb389aafd211;2010-08-09 13:39:49.0;"Dictionaries happen to require a little help to serialize and deserialize.&#xD;&#xA;&#xD;&#xA;Here is a good example of an XML Serializable dictionary:&#xD;&#xA;&#xD;&#xA;http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx&#xD;&#xA;&#xD;&#xA;You can make it case insensitive by changing the class declaration and adding a constructor, and tweaking a line.&#xD;&#xA;&#xD;&#xA;    public class SerializableDictionary<string, TValue>&#xD;&#xA;        : Dictionary<string, TValue>, IXmlSerializable&#xD;&#xA;    {&#xD;&#xA;        public SerializableDictionary()&#xD;&#xA;            : base(StringComparer.InvariantCultureIgnoreCase)&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // ...&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Change the line `this.Add(key, value);` to `this[key] = value;`.&#xD;&#xA;&#xD;&#xA;At any rate, you may need to massage some of the details, but this should get you well on the road.&#xD;&#xA;&#xD;&#xA;";;
7166186;3440556;404854;5;7ce78eee-776f-4436-9d35-68a473a45b82;2010-08-09 13:59:38.0;"**Edit:**&#xD;&#xA;&#xD;&#xA;Per the comments, it appears this approach may be outdated in .NET 4.&#xD;&#xA;&#xD;&#xA;**End Edit**&#xD;&#xA;&#xD;&#xA;Dictionaries happen to require a little help to serialize and deserialize.&#xD;&#xA;&#xD;&#xA;Here is a good example of an XML Serializable dictionary:&#xD;&#xA;&#xD;&#xA;http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx&#xD;&#xA;&#xD;&#xA;You can make it case insensitive by changing the class declaration and adding a constructor, and tweaking a line.&#xD;&#xA;&#xD;&#xA;    public class SerializableDictionary<string, TValue>&#xD;&#xA;        : Dictionary<string, TValue>, IXmlSerializable&#xD;&#xA;    {&#xD;&#xA;        public SerializableDictionary()&#xD;&#xA;            : base(StringComparer.InvariantCultureIgnoreCase)&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // ...&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Change the line `this.Add(key, value);` to `this[key] = value;`.&#xD;&#xA;&#xD;&#xA;At any rate, you may need to massage some of the details, but this should get you well on the road.&#xD;&#xA;&#xD;&#xA;";;added 102 characters in body
45657269;3440556;404854;5;ebc6a500-9539-487b-96b0-0a9a5781bdaa;2013-08-20 15:20:31.0;"**Edit:**&#xD;&#xA;&#xD;&#xA;Per the comments, it appears this approach may be outdated in .NET 4.&#xD;&#xA;&#xD;&#xA;**End Edit**&#xD;&#xA;&#xD;&#xA;Dictionaries happen to require a little help to serialize and deserialize.&#xD;&#xA;&#xD;&#xA;Here is a good example of an XML Serializable dictionary:&#xD;&#xA;&#xD;&#xA;http://weblogs.asp.net/pwelter34/archive/2006/05/03/444961.aspx&#xD;&#xA;&#xD;&#xA;You can make it case insensitive by changing the class declaration and adding a constructor, and tweaking a line.&#xD;&#xA;&#xD;&#xA;** EDIT: Corrected syntax error below. /EDIT**&#xD;&#xA;&#xD;&#xA;    public class SerializableDictionary<TValue>&#xD;&#xA;        : Dictionary<string, TValue>, IXmlSerializable&#xD;&#xA;    {&#xD;&#xA;        public SerializableDictionary()&#xD;&#xA;            : base(StringComparer.InvariantCultureIgnoreCase)&#xD;&#xA;        {&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        // ...&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Change the line `this.Add(key, value);` to `this[key] = value;`.&#xD;&#xA;&#xD;&#xA;At any rate, you may need to massage some of the details, but this should get you well on the road.&#xD;&#xA;&#xD;&#xA;";;added 42 characters in body
