Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
40684248;16572983;1025459;2;b7dc146a-8f26-4cc5-a39c-9074382b8685;2013-05-15 19:00:10.0;"    <?php &#xD;&#xA;    &#xD;&#xA;    //Set the arrays&#xD;&#xA;&#xD;&#xA;    $arr1 = array(&#xD;&#xA;        array('number'=>100,'name'=>'john'),&#xD;&#xA;        array('number'=>200,'name'=>'johnny')&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    $arr2= array(&#xD;&#xA;        array('number'=>300,'name'=>'r'),&#xD;&#xA;        array('number'=>100,'name'=>'b'),&#xD;&#xA;        array('number'=>200,'name'=>'c')&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    // use a nested for loop to iterate and compare both arrays&#xD;&#xA;    &#xD;&#xA;    for ($i=0;$i<count($arr1);$i++):&#xD;&#xA;&#xD;&#xA;        for ($j=0;$j<count($arr2);$j++):&#xD;&#xA;&#xD;&#xA;        	if ($arr2[$j]['number']==$arr1[$i]['number'])&#xD;&#xA;        		$arr1[$i]['name']=$arr2[$j]['name'];&#xD;&#xA;        &#xD;&#xA;        endfor;&#xD;&#xA;&#xD;&#xA;    endfor;&#xD;&#xA;    &#xD;&#xA;    print_r($arr1);&#xD;&#xA;&#xD;&#xA;OUTPUT:&#xD;&#xA;&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;     Array (&#xD;&#xA;     [0] => Array ( [number] => 100 [name] => b )&#xD;&#xA;     [1] => Array ( [number] => 200 [name] => c )&#xD;&#xA;     )";;
40685201;16572983;1025459;5;cbd0bab8-8f74-4763-8a67-66d85fcb062a;2013-05-15 19:23:45.0;"    <?php &#xD;&#xA;    &#xD;&#xA;    //Set the arrays&#xD;&#xA;&#xD;&#xA;    $arr1 = array(&#xD;&#xA;        array('number'=>100,'name'=>'john'),&#xD;&#xA;        array('number'=>200,'name'=>'johnny')&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    $arr2= array(&#xD;&#xA;        array('number'=>300,'name'=>'r'),&#xD;&#xA;        array('number'=>100,'name'=>'b'),&#xD;&#xA;        array('number'=>200,'name'=>'c')&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    // use a nested for loop to iterate and compare both arrays&#xD;&#xA;    &#xD;&#xA;    for ($i=0;$i<count($arr1);$i++):&#xD;&#xA;&#xD;&#xA;        for ($j=0;$j<count($arr2);$j++):&#xD;&#xA;&#xD;&#xA;        	if ($arr2[$j]['number']==$arr1[$i]['number'])&#xD;&#xA;        		$arr1[$i]['name']=$arr2[$j]['name'];&#xD;&#xA;        &#xD;&#xA;        endfor;&#xD;&#xA;&#xD;&#xA;    endfor;&#xD;&#xA;    &#xD;&#xA;    print_r($arr1);&#xD;&#xA;&#xD;&#xA;OUTPUT:&#xD;&#xA;&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;     Array (&#xD;&#xA;     [0] => Array ( [number] => 100 [name] => b )&#xD;&#xA;     [1] => Array ( [number] => 200 [name] => c )&#xD;&#xA;     )&#xD;&#xA;&#xD;&#xA;However, you should probably reconsider the very way your data is structured. Do you really need a multi-dimensional array or can you use a simple associative array, like so:&#xD;&#xA;&#xD;&#xA;     // set the arrays&#xD;&#xA;&#xD;&#xA;     $arr1 = array(&#xD;&#xA;    	    'johnny'=>200,&#xD;&#xA;            'john'=>100&#xD;&#xA;          &#xD;&#xA;        );&#xD;&#xA;    &#xD;&#xA;     $arr2= array(&#xD;&#xA;           'r'=>300,&#xD;&#xA;           'b'=>100,&#xD;&#xA;           'c'=>200&#xD;&#xA;             );&#xD;&#xA;    &#xD;&#xA;    // find values common to both arrays&#xD;&#xA;&#xD;&#xA;    $arr3 = array_intersect($arr2, $arr1);&#xD;&#xA;        &#xD;&#xA;    // change the key of arr1 to match the corresponding key in arr2&#xD;&#xA;&#xD;&#xA;      foreach ($arr3 as $key=>$value) {&#xD;&#xA;&#xD;&#xA;          $old_key = array_search($value, $arr1);&#xD;&#xA;          $arr1[$key]=$arr1[$old_key];&#xD;&#xA;          unset($arr1[$old_key]);&#xD;&#xA;&#xD;&#xA;      }&#xD;&#xA;       &#xD;&#xA;    &#xD;&#xA;    print_r($arr1);";;added 649 characters in body
40685572;16572983;1025459;5;1075d724-a607-4f5d-a8cc-5b4eaa7192cc;2013-05-15 19:31:54.0;"    <?php &#xD;&#xA;    &#xD;&#xA;    //Set the arrays&#xD;&#xA;&#xD;&#xA;    $arr1 = array(&#xD;&#xA;        array('number'=>100,'name'=>'john'),&#xD;&#xA;        array('number'=>200,'name'=>'johnny')&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    $arr2= array(&#xD;&#xA;        array('number'=>300,'name'=>'r'),&#xD;&#xA;        array('number'=>100,'name'=>'b'),&#xD;&#xA;        array('number'=>200,'name'=>'c')&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    // use a nested for loop to iterate and compare both arrays&#xD;&#xA;    &#xD;&#xA;    for ($i=0;$i<count($arr1);$i++):&#xD;&#xA;&#xD;&#xA;        for ($j=0;$j<count($arr2);$j++):&#xD;&#xA;&#xD;&#xA;        	if ($arr2[$j]['number']==$arr1[$i]['number'])&#xD;&#xA;        		$arr1[$i]['name']=$arr2[$j]['name'];&#xD;&#xA;        &#xD;&#xA;        endfor;&#xD;&#xA;&#xD;&#xA;    endfor;&#xD;&#xA;    &#xD;&#xA;    print_r($arr1);&#xD;&#xA;&#xD;&#xA;OUTPUT:&#xD;&#xA;&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;     Array (&#xD;&#xA;     [0] => Array ( [number] => 100 [name] => b )&#xD;&#xA;     [1] => Array ( [number] => 200 [name] => c )&#xD;&#xA;     )&#xD;&#xA;&#xD;&#xA;That being said, you should probably reconsider the very way your data is structured. Do you really need a multi-dimensional array or can you use a simple associative array, like so:&#xD;&#xA;&#xD;&#xA;     // set the arrays&#xD;&#xA;&#xD;&#xA;     $arr1 = array(&#xD;&#xA;            'john'=>100,&#xD;&#xA;    	    'johnny'=>200          &#xD;&#xA;        );&#xD;&#xA;    &#xD;&#xA;     $arr2 = array(&#xD;&#xA;           'r'=>300,&#xD;&#xA;           'b'=>100,&#xD;&#xA;           'c'=>200&#xD;&#xA;         );&#xD;&#xA;    &#xD;&#xA;    // find values in arr2 common to both arrays&#xD;&#xA;&#xD;&#xA;    $arr3 = array_intersect($arr2, $arr1);&#xD;&#xA;        &#xD;&#xA;    // change the key of arr1 to match the corresponding key in arr2&#xD;&#xA;&#xD;&#xA;      foreach ($arr3 as $key=>$value) {&#xD;&#xA;&#xD;&#xA;          $old_key = array_search($value, $arr1);&#xD;&#xA;          $arr1[$key]=$arr1[$old_key];&#xD;&#xA;          unset($arr1[$old_key]);&#xD;&#xA;&#xD;&#xA;      }&#xD;&#xA;       &#xD;&#xA;    &#xD;&#xA;    print_r($arr1);";;added 8 characters in body
40685835;16572983;1025459;5;7d44f666-1ecc-4ffe-84bc-ad58466681f0;2013-05-15 19:37:19.0;"    <?php &#xD;&#xA;    &#xD;&#xA;    //Set the arrays&#xD;&#xA;&#xD;&#xA;    $arr1 = array(&#xD;&#xA;        array('number'=>100,'name'=>'john'),&#xD;&#xA;        array('number'=>200,'name'=>'johnny')&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;    $arr2= array(&#xD;&#xA;        array('number'=>300,'name'=>'r'),&#xD;&#xA;        array('number'=>100,'name'=>'b'),&#xD;&#xA;        array('number'=>200,'name'=>'c')&#xD;&#xA;    );&#xD;&#xA;    &#xD;&#xA;    // use a nested for loop to iterate and compare both arrays&#xD;&#xA;    &#xD;&#xA;    for ($i=0;$i<count($arr1);$i++):&#xD;&#xA;&#xD;&#xA;        for ($j=0;$j<count($arr2);$j++):&#xD;&#xA;&#xD;&#xA;        	if ($arr2[$j]['number']==$arr1[$i]['number'])&#xD;&#xA;        		$arr1[$i]['name']=$arr2[$j]['name'];&#xD;&#xA;        &#xD;&#xA;        endfor;&#xD;&#xA;&#xD;&#xA;    endfor;&#xD;&#xA;    &#xD;&#xA;    print_r($arr1);&#xD;&#xA;&#xD;&#xA;OUTPUT:&#xD;&#xA;&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;     Array (&#xD;&#xA;     [0] => Array ( [number] => 100 [name] => b )&#xD;&#xA;     [1] => Array ( [number] => 200 [name] => c )&#xD;&#xA;     )&#xD;&#xA;&#xD;&#xA;That being said, you should probably reconsider the very way your data is structured. Do you really need a multi-dimensional array or can you use a simple associative array, like so:&#xD;&#xA;&#xD;&#xA;     // set the arrays&#xD;&#xA;&#xD;&#xA;     $arr1 = array(&#xD;&#xA;            'john'=>100,&#xD;&#xA;    	    'johnny'=>200          &#xD;&#xA;        );&#xD;&#xA;    &#xD;&#xA;     $arr2 = array(&#xD;&#xA;           'r'=>300,&#xD;&#xA;           'b'=>100,&#xD;&#xA;           'c'=>200&#xD;&#xA;         );&#xD;&#xA;    &#xD;&#xA;    // find values in arr2 common to both arrays&#xD;&#xA;&#xD;&#xA;    $arr3 = array_intersect($arr2, $arr1);&#xD;&#xA;        &#xD;&#xA;    // change the key of arr1 to match the corresponding key in arr2&#xD;&#xA;&#xD;&#xA;      foreach ($arr3 as $key=>$value) {&#xD;&#xA;&#xD;&#xA;          $old_key = array_search($value, $arr1);&#xD;&#xA;          $arr1[$key]=$arr1[$old_key];&#xD;&#xA;          unset($arr1[$old_key]);&#xD;&#xA;&#xD;&#xA;      }&#xD;&#xA;       &#xD;&#xA;    &#xD;&#xA;    print_r($arr1);&#xD;&#xA;&#xD;&#xA;OUTPUT:&#xD;&#xA;&#xD;&#xA;    Array ( &#xD;&#xA;       [b] => 100 &#xD;&#xA;       [c] => 200 &#xD;&#xA;    )";;added 8 characters in body
