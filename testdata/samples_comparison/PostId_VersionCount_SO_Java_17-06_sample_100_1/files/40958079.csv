Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
133061067;40958079;7247694;2;2b65e3f0-7dfa-49e8-83ff-1a076c8e9ce0;2016-12-04 11:25:45.0;"**I am new to JFreeChart. I have created line chart using JFreeChart. Now,  I  want to add additional details about the chart out side of the graph (i.e on Left side and the Bottom of the graph).  Also I want to save the generated graph with all the information. Could any body help me out here.**&#xD;&#xA;&#xD;&#xA;    package hh;&#xD;&#xA;    &#xD;&#xA;    import java.awt.BorderLayout;&#xD;&#xA;    import java.awt.Color;&#xD;&#xA;    import java.io.File;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    &#xD;&#xA;    import javax.swing.JFrame;&#xD;&#xA;    import javax.swing.JPanel;&#xD;&#xA;    import javax.swing.SwingUtilities;&#xD;&#xA;    &#xD;&#xA;    import org.jfree.chart.ChartFactory;&#xD;&#xA;    import org.jfree.chart.ChartPanel;&#xD;&#xA;    import org.jfree.chart.ChartUtilities;&#xD;&#xA;    import org.jfree.chart.JFreeChart;&#xD;&#xA;    import org.jfree.chart.axis.NumberAxis;&#xD;&#xA;    import org.jfree.chart.axis.NumberTickUnit;&#xD;&#xA;    import org.jfree.chart.plot.XYPlot;&#xD;&#xA;    import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;&#xD;&#xA;    import org.jfree.chart.renderer.xy.XYSplineRenderer;&#xD;&#xA;    import org.jfree.data.xy.XYDataset;&#xD;&#xA;    import org.jfree.data.xy.XYSeries;&#xD;&#xA;    import org.jfree.data.xy.XYSeriesCollection;&#xD;&#xA;    &#xD;&#xA;    public class XYLineChartExample extends JFrame {&#xD;&#xA;    &#xD;&#xA;    	// double x=1.08,y=0.370;&#xD;&#xA;    	JFreeChart chart;&#xD;&#xA;    &#xD;&#xA;    	public XYLineChartExample() {&#xD;&#xA;    		super(""XY Line Chart Example with JFreechart"");&#xD;&#xA;    &#xD;&#xA;    		JPanel chartPanel = createChartPanel();&#xD;&#xA;    		add(chartPanel, BorderLayout.CENTER);&#xD;&#xA;    &#xD;&#xA;    		setSize(1240, 600);&#xD;&#xA;    		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		setLocationRelativeTo(null);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private JPanel createChartPanel() {&#xD;&#xA;    		String chartTitle = ""Objects Movement Chart"";&#xD;&#xA;    		String xAxisLabel = ""X"";&#xD;&#xA;    		String yAxisLabel = ""Y"";&#xD;&#xA;    &#xD;&#xA;    		XYDataset dataset = createDataset();&#xD;&#xA;    &#xD;&#xA;    		JFreeChart chart = ChartFactory.createXYLineChart(chartTitle,&#xD;&#xA;    				xAxisLabel, yAxisLabel, dataset);&#xD;&#xA;    		XYPlot plot = chart.getXYPlot();&#xD;&#xA;    		XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();&#xD;&#xA;    		plot.setRenderer(renderer);&#xD;&#xA;    		renderer.setSeriesPaint(2, Color.RED);&#xD;&#xA;    		renderer.setSeriesPaint(3, Color.BLACK);&#xD;&#xA;    		renderer.setSeriesPaint(4, Color.BLACK);&#xD;&#xA;    		renderer.setSeriesPaint(5, Color.BLUE);&#xD;&#xA;    		renderer.setSeriesPaint(6, Color.RED);&#xD;&#xA;    &#xD;&#xA;    		File imageFile = new File(&#xD;&#xA;    				""C:/Users/varinder/Desktop/Graphs/Branch1_Grap.jpg"");&#xD;&#xA;    		int width = 1240;&#xD;&#xA;    		int height = 500;&#xD;&#xA;    		try {&#xD;&#xA;    			ChartUtilities.saveChartAsJPEG(imageFile, chart, width, height);&#xD;&#xA;    		} catch (IOException ex) {&#xD;&#xA;    			System.err.println(ex);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return new ChartPanel(chart);&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private XYDataset createDataset() {&#xD;&#xA;    &#xD;&#xA;    		XYSeriesCollection dataset = new XYSeriesCollection();&#xD;&#xA;    		XYSeries series = new XYSeries(""Object 1"");&#xD;&#xA;    		XYSeries series2 = new XYSeries(""Object 2"");&#xD;&#xA;    		XYSeries series3 = new XYSeries(""Object 3"");&#xD;&#xA;    		XYSeries series4 = new XYSeries(""Object 4"");&#xD;&#xA;    		XYSeries series5 = new XYSeries(""Object 5"");&#xD;&#xA;    		XYSeries series6 = new XYSeries(""Object 6"");&#xD;&#xA;    		XYSeries series7 = new XYSeries(""Object 7"");&#xD;&#xA;    &#xD;&#xA;    		// fixed X axis&#xD;&#xA;    &#xD;&#xA;    		series.add(.10, .000);&#xD;&#xA;    		series.add(.20, .000);&#xD;&#xA;    		series.add(.30, .000);&#xD;&#xA;    		series.add(.40, .000);&#xD;&#xA;    		series.add(.50, .000);&#xD;&#xA;    		series.add(.60, .000);&#xD;&#xA;    		series.add(.70, .000);&#xD;&#xA;    		series.add(.80, .000);&#xD;&#xA;    		series.add(.90, .000);&#xD;&#xA;    		series.add(1.00, .000);&#xD;&#xA;    		series.add(1.10, .000);&#xD;&#xA;    		series.add(1.20, .000);&#xD;&#xA;    		series.add(1.30, .000);&#xD;&#xA;    		series.add(1.40, .000);&#xD;&#xA;    		series.add(1.50, .000);&#xD;&#xA;    		series.add(1.60, .000);&#xD;&#xA;    		series.add(1.70, .000);&#xD;&#xA;    		series.add(1.80, .000);&#xD;&#xA;    		series.add(1.90, .000);&#xD;&#xA;    		series.add(2.00, .000);&#xD;&#xA;    		series.add(2.10, .000);&#xD;&#xA;    		series.add(2.20, .000);&#xD;&#xA;    		series.add(2.30, .000);&#xD;&#xA;    		series.add(2.30, .000);&#xD;&#xA;    		series.add(2.40, .000);&#xD;&#xA;    		series.add(2.50, .000);&#xD;&#xA;    		series.add(2.60, .000);&#xD;&#xA;    		series.add(2.70, .000);&#xD;&#xA;    		series.add(2.80, .000);&#xD;&#xA;    		series.add(2.90, .000);&#xD;&#xA;    		series.add(3.00, .000);&#xD;&#xA;    		series.add(3.10, .000);&#xD;&#xA;    		series.add(3.20, .000);&#xD;&#xA;    		series.add(3.30, .000);&#xD;&#xA;    		series.add(3.40, .000);&#xD;&#xA;    		series.add(3.50, .000);&#xD;&#xA;    		series.add(3.60, .000);&#xD;&#xA;    		// series.add(3.70, .000);&#xD;&#xA;    &#xD;&#xA;    		// fixed Y axis&#xD;&#xA;    		series2.add(.00, .100);&#xD;&#xA;    		series2.add(.00, .200);&#xD;&#xA;    		series2.add(.00, .300);&#xD;&#xA;    		series2.add(.00, .400);&#xD;&#xA;    		series2.add(.00, .500);&#xD;&#xA;    		series2.add(.00, .600);&#xD;&#xA;    		series2.add(.00, .700);&#xD;&#xA;    		series2.add(.00, .800);&#xD;&#xA;    		series2.add(.00, .900);&#xD;&#xA;    		series2.add(.00, 1.000);&#xD;&#xA;    		series2.add(.00, 1.100);&#xD;&#xA;    		series2.add(.00, 1.200);&#xD;&#xA;    &#xD;&#xA;    		// Bed level with red color&#xD;&#xA;    		// series2.add(0, 193.500);&#xD;&#xA;    &#xD;&#xA;    		// series3.add(1.92, 100.370);&#xD;&#xA;    		series3.add(0.88, 0.900);&#xD;&#xA;    		series3.add(2.12, 0.900);&#xD;&#xA;    		series3.add(0.75, 0.900);&#xD;&#xA;    		series3.add(2.25, 0.900);&#xD;&#xA;    		series3.add(0.59, 0.300);&#xD;&#xA;    		series3.add(2.41, 0.300);&#xD;&#xA;    		series3.add(0.00, 0.300);&#xD;&#xA;    		series3.add(3.1, .300);&#xD;&#xA;    &#xD;&#xA;    		series4.add(0.88, 0.304);&#xD;&#xA;    		series4.add(2.12, 0.304);&#xD;&#xA;    &#xD;&#xA;    		series4.add(0.879, 0.876);// one decrease&#xD;&#xA;    		series4.add(2.12, 0.876);&#xD;&#xA;    		series5.add(0.88, 0.876);&#xD;&#xA;    		series5.add(1.109, 0.876);&#xD;&#xA;    		series5.add(1.109, 0.376);&#xD;&#xA;    &#xD;&#xA;    		series6.add(2.12, 0.876);&#xD;&#xA;    		series6.add(1.891, 0.876);&#xD;&#xA;    		series6.add(1.890, 0.376);&#xD;&#xA;    		series6.add(1.109, 0.376);&#xD;&#xA;    &#xD;&#xA;    		series7.add(1.109, 0.876);// sement area by adding 0.1.&#xD;&#xA;    		series7.add(1.119, 0.876);&#xD;&#xA;    		series7.add(1.119, 0.386);&#xD;&#xA;    		series7.add(1.881, 0.386);&#xD;&#xA;    		series7.add(1.881, 0.876);&#xD;&#xA;    		series7.add(1.891, 0.876);&#xD;&#xA;    		// series7.add(1.11, 0.);&#xD;&#xA;    &#xD;&#xA;    		dataset.addSeries(series);&#xD;&#xA;    		dataset.addSeries(series2);&#xD;&#xA;    		dataset.addSeries(series3);&#xD;&#xA;    		dataset.addSeries(series4);&#xD;&#xA;    		dataset.addSeries(series5);&#xD;&#xA;    		dataset.addSeries(series6);&#xD;&#xA;    		dataset.addSeries(series7);&#xD;&#xA;    		return dataset;&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args) {&#xD;&#xA;    		SwingUtilities.invokeLater(new Runnable() {&#xD;&#xA;    			@Override&#xD;&#xA;    			public void run() {&#xD;&#xA;    &#xD;&#xA;    				new XYLineChartExample().setVisible(true);&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;";;
133096866;40958079;230513;5;440121ee-4952-4254-9776-c24180dea513;2016-12-05 03:15:15.0;"I am new to JFreeChart. I have created line chart using JFreeChart. Now,  I  want to add additional details about the chart out side of the graph (i.e on Left side and the Bottom of the graph).  Also, I want to save the generated graph with all the information. Could any body help me out here.&#xD;&#xA;&#xD;&#xA;    package hh;&#xD;&#xA;    &#xD;&#xA;    import java.awt.BorderLayout;&#xD;&#xA;    import java.awt.Color;&#xD;&#xA;    import java.io.File;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    &#xD;&#xA;    import javax.swing.JFrame;&#xD;&#xA;    import javax.swing.JPanel;&#xD;&#xA;    import javax.swing.SwingUtilities;&#xD;&#xA;    &#xD;&#xA;    import org.jfree.chart.ChartFactory;&#xD;&#xA;    import org.jfree.chart.ChartPanel;&#xD;&#xA;    import org.jfree.chart.ChartUtilities;&#xD;&#xA;    import org.jfree.chart.JFreeChart;&#xD;&#xA;    import org.jfree.chart.axis.NumberAxis;&#xD;&#xA;    import org.jfree.chart.axis.NumberTickUnit;&#xD;&#xA;    import org.jfree.chart.plot.XYPlot;&#xD;&#xA;    import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;&#xD;&#xA;    import org.jfree.chart.renderer.xy.XYSplineRenderer;&#xD;&#xA;    import org.jfree.data.xy.XYDataset;&#xD;&#xA;    import org.jfree.data.xy.XYSeries;&#xD;&#xA;    import org.jfree.data.xy.XYSeriesCollection;&#xD;&#xA;    &#xD;&#xA;    public class XYLineChartExample extends JFrame {&#xD;&#xA;    &#xD;&#xA;    	// double x=1.08,y=0.370;&#xD;&#xA;    	JFreeChart chart;&#xD;&#xA;    &#xD;&#xA;    	public XYLineChartExample() {&#xD;&#xA;    		super(""XY Line Chart Example with JFreechart"");&#xD;&#xA;    &#xD;&#xA;    		JPanel chartPanel = createChartPanel();&#xD;&#xA;    		add(chartPanel, BorderLayout.CENTER);&#xD;&#xA;    &#xD;&#xA;    		setSize(1240, 600);&#xD;&#xA;    		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;&#xA;    		setLocationRelativeTo(null);&#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private JPanel createChartPanel() {&#xD;&#xA;    		String chartTitle = ""Objects Movement Chart"";&#xD;&#xA;    		String xAxisLabel = ""X"";&#xD;&#xA;    		String yAxisLabel = ""Y"";&#xD;&#xA;    &#xD;&#xA;    		XYDataset dataset = createDataset();&#xD;&#xA;    &#xD;&#xA;    		JFreeChart chart = ChartFactory.createXYLineChart(chartTitle,&#xD;&#xA;    				xAxisLabel, yAxisLabel, dataset);&#xD;&#xA;    		XYPlot plot = chart.getXYPlot();&#xD;&#xA;    		XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();&#xD;&#xA;    		plot.setRenderer(renderer);&#xD;&#xA;    		renderer.setSeriesPaint(2, Color.RED);&#xD;&#xA;    		renderer.setSeriesPaint(3, Color.BLACK);&#xD;&#xA;    		renderer.setSeriesPaint(4, Color.BLACK);&#xD;&#xA;    		renderer.setSeriesPaint(5, Color.BLUE);&#xD;&#xA;    		renderer.setSeriesPaint(6, Color.RED);&#xD;&#xA;    &#xD;&#xA;    		File imageFile = new File(&#xD;&#xA;    				""C:/Users/varinder/Desktop/Graphs/Branch1_Grap.jpg"");&#xD;&#xA;    		int width = 1240;&#xD;&#xA;    		int height = 500;&#xD;&#xA;    		try {&#xD;&#xA;    			ChartUtilities.saveChartAsJPEG(imageFile, chart, width, height);&#xD;&#xA;    		} catch (IOException ex) {&#xD;&#xA;    			System.err.println(ex);&#xD;&#xA;    		}&#xD;&#xA;    &#xD;&#xA;    		return new ChartPanel(chart);&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	private XYDataset createDataset() {&#xD;&#xA;    &#xD;&#xA;    		XYSeriesCollection dataset = new XYSeriesCollection();&#xD;&#xA;    		XYSeries series = new XYSeries(""Object 1"");&#xD;&#xA;    		XYSeries series2 = new XYSeries(""Object 2"");&#xD;&#xA;    		XYSeries series3 = new XYSeries(""Object 3"");&#xD;&#xA;    		XYSeries series4 = new XYSeries(""Object 4"");&#xD;&#xA;    		XYSeries series5 = new XYSeries(""Object 5"");&#xD;&#xA;    		XYSeries series6 = new XYSeries(""Object 6"");&#xD;&#xA;    		XYSeries series7 = new XYSeries(""Object 7"");&#xD;&#xA;    &#xD;&#xA;    		// fixed X axis&#xD;&#xA;    &#xD;&#xA;    		series.add(.10, .000);&#xD;&#xA;    		series.add(.20, .000);&#xD;&#xA;    		series.add(.30, .000);&#xD;&#xA;    		series.add(.40, .000);&#xD;&#xA;    		series.add(.50, .000);&#xD;&#xA;    		series.add(.60, .000);&#xD;&#xA;    		series.add(.70, .000);&#xD;&#xA;    		series.add(.80, .000);&#xD;&#xA;    		series.add(.90, .000);&#xD;&#xA;    		series.add(1.00, .000);&#xD;&#xA;    		series.add(1.10, .000);&#xD;&#xA;    		series.add(1.20, .000);&#xD;&#xA;    		series.add(1.30, .000);&#xD;&#xA;    		series.add(1.40, .000);&#xD;&#xA;    		series.add(1.50, .000);&#xD;&#xA;    		series.add(1.60, .000);&#xD;&#xA;    		series.add(1.70, .000);&#xD;&#xA;    		series.add(1.80, .000);&#xD;&#xA;    		series.add(1.90, .000);&#xD;&#xA;    		series.add(2.00, .000);&#xD;&#xA;    		series.add(2.10, .000);&#xD;&#xA;    		series.add(2.20, .000);&#xD;&#xA;    		series.add(2.30, .000);&#xD;&#xA;    		series.add(2.30, .000);&#xD;&#xA;    		series.add(2.40, .000);&#xD;&#xA;    		series.add(2.50, .000);&#xD;&#xA;    		series.add(2.60, .000);&#xD;&#xA;    		series.add(2.70, .000);&#xD;&#xA;    		series.add(2.80, .000);&#xD;&#xA;    		series.add(2.90, .000);&#xD;&#xA;    		series.add(3.00, .000);&#xD;&#xA;    		series.add(3.10, .000);&#xD;&#xA;    		series.add(3.20, .000);&#xD;&#xA;    		series.add(3.30, .000);&#xD;&#xA;    		series.add(3.40, .000);&#xD;&#xA;    		series.add(3.50, .000);&#xD;&#xA;    		series.add(3.60, .000);&#xD;&#xA;    		// series.add(3.70, .000);&#xD;&#xA;    &#xD;&#xA;    		// fixed Y axis&#xD;&#xA;    		series2.add(.00, .100);&#xD;&#xA;    		series2.add(.00, .200);&#xD;&#xA;    		series2.add(.00, .300);&#xD;&#xA;    		series2.add(.00, .400);&#xD;&#xA;    		series2.add(.00, .500);&#xD;&#xA;    		series2.add(.00, .600);&#xD;&#xA;    		series2.add(.00, .700);&#xD;&#xA;    		series2.add(.00, .800);&#xD;&#xA;    		series2.add(.00, .900);&#xD;&#xA;    		series2.add(.00, 1.000);&#xD;&#xA;    		series2.add(.00, 1.100);&#xD;&#xA;    		series2.add(.00, 1.200);&#xD;&#xA;    &#xD;&#xA;    		// Bed level with red color&#xD;&#xA;    		// series2.add(0, 193.500);&#xD;&#xA;    &#xD;&#xA;    		// series3.add(1.92, 100.370);&#xD;&#xA;    		series3.add(0.88, 0.900);&#xD;&#xA;    		series3.add(2.12, 0.900);&#xD;&#xA;    		series3.add(0.75, 0.900);&#xD;&#xA;    		series3.add(2.25, 0.900);&#xD;&#xA;    		series3.add(0.59, 0.300);&#xD;&#xA;    		series3.add(2.41, 0.300);&#xD;&#xA;    		series3.add(0.00, 0.300);&#xD;&#xA;    		series3.add(3.1, .300);&#xD;&#xA;    &#xD;&#xA;    		series4.add(0.88, 0.304);&#xD;&#xA;    		series4.add(2.12, 0.304);&#xD;&#xA;    &#xD;&#xA;    		series4.add(0.879, 0.876);// one decrease&#xD;&#xA;    		series4.add(2.12, 0.876);&#xD;&#xA;    		series5.add(0.88, 0.876);&#xD;&#xA;    		series5.add(1.109, 0.876);&#xD;&#xA;    		series5.add(1.109, 0.376);&#xD;&#xA;    &#xD;&#xA;    		series6.add(2.12, 0.876);&#xD;&#xA;    		series6.add(1.891, 0.876);&#xD;&#xA;    		series6.add(1.890, 0.376);&#xD;&#xA;    		series6.add(1.109, 0.376);&#xD;&#xA;    &#xD;&#xA;    		series7.add(1.109, 0.876);// sement area by adding 0.1.&#xD;&#xA;    		series7.add(1.119, 0.876);&#xD;&#xA;    		series7.add(1.119, 0.386);&#xD;&#xA;    		series7.add(1.881, 0.386);&#xD;&#xA;    		series7.add(1.881, 0.876);&#xD;&#xA;    		series7.add(1.891, 0.876);&#xD;&#xA;    		// series7.add(1.11, 0.);&#xD;&#xA;    &#xD;&#xA;    		dataset.addSeries(series);&#xD;&#xA;    		dataset.addSeries(series2);&#xD;&#xA;    		dataset.addSeries(series3);&#xD;&#xA;    		dataset.addSeries(series4);&#xD;&#xA;    		dataset.addSeries(series5);&#xD;&#xA;    		dataset.addSeries(series6);&#xD;&#xA;    		dataset.addSeries(series7);&#xD;&#xA;    		return dataset;&#xD;&#xA;    &#xD;&#xA;    	}&#xD;&#xA;    &#xD;&#xA;    	public static void main(String[] args) {&#xD;&#xA;    		SwingUtilities.invokeLater(new Runnable() {&#xD;&#xA;    			@Override&#xD;&#xA;    			public void run() {&#xD;&#xA;    &#xD;&#xA;    				new XYLineChartExample().setVisible(true);&#xD;&#xA;    			}&#xD;&#xA;    		});&#xD;&#xA;    	}&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;";;"Copyedit; format."
