Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
132022509;40710937;1178781;2;ab2e58d9-9855-4d33-9a98-f8bc67ece9ee;2016-11-21 00:04:20.0;"I believe this is the solution you are looking for:&#xD;&#xA;&#xD;&#xA;<!-- language-all: lang-java -->&#xD;&#xA;&#xD;&#xA;    public class Minesweeper1 {&#xD;&#xA;        // Note:&#xD;&#xA;        // s == Height&#xD;&#xA;        // z == Width&#xD;&#xA;        public static int[][] makeRandomBoard(int s, int z, int n) {&#xD;&#xA;            // Note: Misspelling of ""field""?&#xD;&#xA;            int feld[][] = new int [s][z];&#xD;&#xA;&#xD;&#xA;            // Initialize the game board with no mines (value of 0)&#xD;&#xA;            for(int i = 0; i < s; i++) {&#xD;&#xA;                for(int j = 0; j < z; j++) {&#xD;&#xA;                    feld[i][j] = 0;&#xD;&#xA;                } &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            // Iterate through n times to place ""mines"" (value of 1)&#xD;&#xA;            for(int i = 0; i < n; i++){&#xD;&#xA;                // selectRandomPosition returns an array of length 2&#xD;&#xA;                // the first index (0) = randomHeight&#xD;&#xA;                // the second index (1) = randomWidth&#xD;&#xA;                // Notice that z and s is flipped&#xD;&#xA;                // because the first parameter is for width, which is z&#xD;&#xA;                // and the second parameter is for height, which is s&#xD;&#xA;                int[] position = selectRandomPosition(z, s);&#xD;&#xA;                int positionX = position[1];&#xD;&#xA;                int positionY = position[0];&#xD;&#xA;                // The order of positionY/positionX is key!&#xD;&#xA;                // If it's in the wrong order you will get an&#xD;&#xA;                // IndexOutOfBoundsException!&#xD;&#xA;                feld[positionY][positionX] = 1;&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            // Return the newly created array&#xD;&#xA;            return feld;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public static int[] selectRandomPosition(int maxWidth, int maxHeight) {&#xD;&#xA;            int randomHeight = StdRandom.uniform(0, maxHeight);&#xD;&#xA;            int randomWidth = StdRandom.uniform(0, maxWidth);&#xD;&#xA;            // Notice that this is returning a fixed array of two elements&#xD;&#xA;            // the first being the Y component, and the second being the X&#xD;&#xA;            // component.&#xD;&#xA;            return new int[]{randomHeight, randomWidth};&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ";;
132022848;40710937;1178781;5;2ecca7ef-12f1-4188-ab9e-3690d46c5327;2016-11-21 00:14:08.0;"I believe this is the solution you are looking for:&#xD;&#xA;&#xD;&#xA;## Solution&#xD;&#xA;&#xD;&#xA;<!-- language-all: lang-java -->&#xD;&#xA;&#xD;&#xA;    public class Minesweeper1 {&#xD;&#xA;        // Note:&#xD;&#xA;        // s == Height&#xD;&#xA;        // z == Width&#xD;&#xA;        public static int[][] makeRandomBoard(int s, int z, int n) {&#xD;&#xA;            // Note: Misspelling of ""field""?&#xD;&#xA;            int feld[][] = new int [s][z];&#xD;&#xA;&#xD;&#xA;            // Initialize the game board with no mines (value of 0)&#xD;&#xA;            for(int i = 0; i < s; i++) {&#xD;&#xA;                for(int j = 0; j < z; j++) {&#xD;&#xA;                    feld[i][j] = 0;&#xD;&#xA;                } &#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            // Iterate through n times to place ""mines"" (value of 1)&#xD;&#xA;            for(int i = 0; i < n; i++){&#xD;&#xA;                // selectRandomPosition returns an array of length 2&#xD;&#xA;                // the first index (0) = randomHeight&#xD;&#xA;                // the second index (1) = randomWidth&#xD;&#xA;                // Notice that z and s is flipped&#xD;&#xA;                // because the first parameter is for width, which is z&#xD;&#xA;                // and the second parameter is for height, which is s&#xD;&#xA;                int[] position = selectRandomPosition(z, s);&#xD;&#xA;                int positionX = position[1];&#xD;&#xA;                int positionY = position[0];&#xD;&#xA;                // The order of positionY/positionX is key!&#xD;&#xA;                // If it's in the wrong order you will get an&#xD;&#xA;                // IndexOutOfBoundsException!&#xD;&#xA;                feld[positionY][positionX] = 1;&#xD;&#xA;            }&#xD;&#xA;            &#xD;&#xA;            // Return the newly created array&#xD;&#xA;            return feld;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public static int[] selectRandomPosition(int maxWidth, int maxHeight) {&#xD;&#xA;            int randomHeight = StdRandom.uniform(0, maxHeight);&#xD;&#xA;            int randomWidth = StdRandom.uniform(0, maxWidth);&#xD;&#xA;            // Notice that this is returning a fixed array of two elements&#xD;&#xA;            // the first being the Y component, and the second being the X&#xD;&#xA;            // component.&#xD;&#xA;            return new int[]{randomHeight, randomWidth};&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;## Problems&#xD;&#xA;&#xD;&#xA;### Passing the wrong values&#xD;&#xA;&#xD;&#xA;You were calling `selectRandomPosition` wrong.  Remember that `s` is the Height, and `z` is the Width.  So you were passing into `selectRandomPosition` the Height for the first parameter, and the Width for the second parameter.  Look at the method declaration:&#xD;&#xA;&#xD;&#xA;    public static int[] selectRandomPosition(int maxWidth, int maxHeight)&#xD;&#xA;&#xD;&#xA;That meant you passed the Height into the `maxWidth`, and the Width into the `maxHeight`.  My solution flips it for you.  This can be confusing because `s` and `z` don't really give you hints to what they are (Height and Width) - consider renaming these variables to help you.&#xD;&#xA;&#xD;&#xA;### Accessing in the wrong order&#xD;&#xA;&#xD;&#xA;You have in your question:&#xD;&#xA;&#xD;&#xA;    feld[randomW][randomH] = 1;&#xD;&#xA;&#xD;&#xA;This is wrong, it should be:&#xD;&#xA;&#xD;&#xA;    feld[randomH][randomW] = 1;&#xD;&#xA;&#xD;&#xA;This image shows a visual representaion of what a two dimensional array looks like:&#xD;&#xA;&#xD;&#xA;[![Two Dimensional Array][1]][1]&#xD;&#xA;&#xD;&#xA;So the access would be:&#xD;&#xA;&#xD;&#xA;    feld[0][0] == 1&#xD;&#xA;    feld[0][1] == 1&#xD;&#xA;    feld[0][2] == 1&#xD;&#xA;    feld[1][0] == 1&#xD;&#xA;    feld[1][1] == 2&#xD;&#xA;    feld[1][2] == 4&#xD;&#xA;    feld[2][0] == 1&#xD;&#xA;    feld[2][1] == 3&#xD;&#xA;    feld[2][2] == 9&#xD;&#xA;&#xD;&#xA;### Nit-Pick: Misspellings&#xD;&#xA;&#xD;&#xA;Other than having weird variable names like `s` and `z` that do not help you at all in remembering what means what, your main variable that you will eventually return is misspelled.  Did you mean ""field""?&#xD;&#xA;&#xD;&#xA;Variable naming is important and can help you, and other readers, to easily understand your code.  Also, comments in places where you think you need them also help!&#xD;&#xA;&#xD;&#xA;  [1]: https://i.stack.imgur.com/XuUK0.jpg";;added 1599 characters in body
