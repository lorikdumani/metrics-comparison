Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
86301119;29171598;4199839;2;402aab21-ea5b-4fa3-ba11-a06e374ed16c;2015-03-20 16:38:24.0;"At first the Button is created with the XML-tag `android:layout_centerHorizontal=""true""` which works fine. &#xD;&#xA;&#xD;&#xA;But this Button is moved along the x-axis using an `ObjectAnimator` during run time.&#xD;&#xA;&#xD;&#xA;Now I want to move that Button back to where it has been at the beginning but I can't figure out how to do that (I want to keep the animation!). The Button is never moved along the y-axis.&#xD;&#xA;&#xD;&#xA;I have tried &#xD;&#xA;&#xD;&#xA;    Display display = getWindowManager().getDefaultDisplay();&#xD;&#xA;            Point point = new Point();&#xD;&#xA;            display.getSize(point);&#xD;&#xA;            ObjectAnimator animatorButton = ObjectAnimator.ofFloat(mButtonSelectAccount, ""X"", (point.x/2)-(mButtonAdd.getWidth()/2));&#xD;&#xA;            animatorButton.start();&#xD;&#xA;&#xD;&#xA;already but my Button somehow is a little bit too far on the right every time (~30px). It does not seem to be affected by the margin. Padding affects this though. When I set the padding to 0dp, the offset is way smaller (~5px) but still there.&#xD;&#xA;&#xD;&#xA;Hopefully you are able to point out my mistake(s), know a solution or even know a better way to move Views around. I used to edit the `transitionX` value which could be reset to `0`. That method does not work for me anymore because I try to check if my Button overlaps with another View (which it does on smaller devices but not on bigger ones) and react to it.&#xD;&#xA;&#xD;&#xA;Googling or browsing stackoverflow did not help either...&#xD;&#xA;&#xD;&#xA;Thanks in advance&#xD;&#xA;Tafelbomber";;
86306498;29171598;4199839;5;23f41916-890d-40e0-a63e-818628258927;2015-03-20 18:04:36.0;"At first the Button is created with the XML-tag `android:layout_centerHorizontal=""true""` which works fine. &#xD;&#xA;&#xD;&#xA;But this Button is moved along the x-axis using an `ObjectAnimator` during run time.&#xD;&#xA;&#xD;&#xA;Now I want to move that Button back to where it has been at the beginning but I can't figure out how to do that (I want to keep the animation!). The Button is never moved along the y-axis.&#xD;&#xA;&#xD;&#xA;I have tried &#xD;&#xA;&#xD;&#xA;    Display display = getWindowManager().getDefaultDisplay();&#xD;&#xA;            Point point = new Point();&#xD;&#xA;            display.getSize(point);&#xD;&#xA;            ObjectAnimator animator = ObjectAnimator.ofFloat(button, ""X"", (point.x/2)-(button.getWidth()/2));&#xD;&#xA;            animator.start();&#xD;&#xA;&#xD;&#xA;already but my Button somehow is a little bit too far on the right every time (~30px). It does not seem to be affected by the margin. Padding affects this though. When I set the padding to 0dp, the offset is way smaller (~5px) but still there.&#xD;&#xA;&#xD;&#xA;Hopefully you are able to point out my mistake(s), know a solution or even know a better way to move Views around. I used to edit the `transitionX` value which could be reset to `0`. That method does not work for me anymore because I try to check if my Button overlaps with another View (which it does on smaller devices but not on bigger ones) and react to it.&#xD;&#xA;&#xD;&#xA;Googling or browsing stackoverflow did not help either...&#xD;&#xA;&#xD;&#xA;Thanks in advance&#xD;&#xA;Tafelbomber&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**EDIT:**&#xD;&#xA;&#xD;&#xA;I figured out that `button.getX()` gives me wrong values by calling it immediatly before moving the button away and after that moving it to the queried X-value. This has the same effect as before.";;added 149 characters in body
86312484;29171598;4199839;5;fd1c5b8e-b1a2-4c04-8082-01e43e41e07a;2015-03-20 19:42:26.0;"At first the Button is created with the XML-tag `android:layout_centerHorizontal=""true""` which works fine. &#xD;&#xA;&#xD;&#xA;But this Button is moved along the x-axis using an `ObjectAnimator` during run time.&#xD;&#xA;&#xD;&#xA;Now I want to move that Button back to where it has been at the beginning but I can't figure out how to do that (I want to keep the animation!). The Button is never moved along the y-axis.&#xD;&#xA;&#xD;&#xA;I have tried &#xD;&#xA;&#xD;&#xA;    Display display = getWindowManager().getDefaultDisplay();&#xD;&#xA;            Point point = new Point();&#xD;&#xA;            display.getSize(point);&#xD;&#xA;            ObjectAnimator animator = ObjectAnimator.ofFloat(button, ""X"", (point.x/2)-(button.getWidth()/2));&#xD;&#xA;            animator.start();&#xD;&#xA;&#xD;&#xA;already but my Button somehow is a little bit too far on the right every time (~30px). It does not seem to be affected by the margin. Padding affects this though. When I set the padding to 0dp, the offset is way smaller (~5px) but still there.&#xD;&#xA;&#xD;&#xA;Hopefully you are able to point out my mistake(s), know a solution or even know a better way to move Views around. I used to edit the `transitionX` value which could be reset to `0`. That method does not work for me anymore because I try to check if my Button overlaps with another View (which it does on smaller devices but not on bigger ones) and react to it.&#xD;&#xA;&#xD;&#xA;Googling or browsing stackoverflow did not help either...&#xD;&#xA;&#xD;&#xA;Thanks in advance&#xD;&#xA;Tafelbomber&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**EDIT:**&#xD;&#xA;&#xD;&#xA;I figured out that `button.getX()` gives me wrong values by calling it immediatly before moving the button away and after that moving it to the queried X-value. This has the same effect as before.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;----------&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**EDIT 2:**&#xD;&#xA;&#xD;&#xA;The above problem in a way solved itself after a PC reboot. But the other problem I only explained a little is still there: I want to check programmatically if two views overlap. In the screenshot I colored the spinner for convenience. To check that I tried this method:&#xD;&#xA;&#xD;&#xA;    private boolean viewsOverlap(View leftView, View rightView){&#xD;&#xA;        float leftViewRight = leftView.getRight();&#xD;&#xA;        float rightViewLeft = rightView.getLeft();&#xD;&#xA;        System.out.println(""leftViewRight ""+leftViewRight);&#xD;&#xA;        System.out.println(""rightViewLeft ""+rightViewLeft);&#xD;&#xA;        System.out.println(""viewsOverlap: "" + (leftViewRight > rightViewLeft));&#xD;&#xA;        return leftViewRight > rightViewLeft;&#xD;&#xA;    }&#xD;&#xA;But the output is not as expected:&#xD;&#xA;&#xD;&#xA;    System.out﹕ leftViewRight 718.0&#xD;&#xA;    System.out﹕ rightViewLeft 0.0&#xD;&#xA;    System.out﹕ viewsOverlap: true&#xD;&#xA;&#xD;&#xA;Screenshot of Button and Spinner: http://i.stack.imgur.com/G8DYP.jpg&#xD;&#xA;(sorry for that link but I am not allowed to post pictures with less than 10 reputation)&#xD;&#xA;&#xD;&#xA;The `leftView` is the Button and `rightView` the Spinner. Both have been moved around already as shown in the very first example. As you can clearly see they are not overlapping and the Spinners left edge also is not at 0.0 and the button's right edge is not at 718 but at ~400. You can even estimate that the value has to be wrong since the screen is fullHD.";;grammar fixes
