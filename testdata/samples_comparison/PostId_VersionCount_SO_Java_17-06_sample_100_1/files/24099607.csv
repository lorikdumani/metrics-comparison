Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
66820799;24099607;1664878;2;ff6e8e1e-de3c-4e8f-9ac2-20344dafa03d;2014-06-07 17:02:42.0;"I have created simple demo to see how backreferences work. It is&#xD;&#xA;&#xD;&#xA;    Pattern pattern = Pattern.compile(""([0-9]+)([,=]+)\\\\2\\\\1"");&#xD;&#xA;    	Matcher matcher = pattern.matcher(""2==2 5,,,,5"");&#xD;&#xA;    	while (matcher.find()) {&#xD;&#xA;    		String group = matcher.group();&#xD;&#xA;    		System.out.println(""group="" + group);&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;The output is :&#xD;&#xA;&#xD;&#xA;    group=2==2&#xD;&#xA;    group=5,,,,5&#xD;&#xA;&#xD;&#xA;Can someone explain why `5,,,,5` is matched by backreference \\\\\\\\2 ?";;
66821333;24099607;1664878;5;e3e3839f-1d16-4f1c-b88f-92fcac4356f4;2014-06-07 17:19:17.0;"I have created simple demo to see how backreferences work. It is&#xD;&#xA;&#xD;&#xA;    Pattern pattern = Pattern.compile(""([0-9]+)([,=]+)\\\\2\\\\1"");&#xD;&#xA;    	Matcher matcher = pattern.matcher(""2==2 5,,,,5"");&#xD;&#xA;    	while (matcher.find()) {&#xD;&#xA;    		String group = matcher.group();&#xD;&#xA;    		System.out.println(""group="" + group);&#xD;&#xA;    	}&#xD;&#xA;&#xD;&#xA;The output is :&#xD;&#xA;&#xD;&#xA;    group=2==2&#xD;&#xA;    group=5,,,,5&#xD;&#xA;&#xD;&#xA;Can someone explain why `5,,,,5` is matched by backreference \\\\\\\\2 ?&#xD;&#xA;&#xD;&#xA;";;added 424 characters in body
