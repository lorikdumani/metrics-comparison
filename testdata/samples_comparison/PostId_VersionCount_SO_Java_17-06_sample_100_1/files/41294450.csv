Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
134461465;41294450;149138;2;d8405c24-9f39-4d1e-bd48-258f56806a7e;2016-12-23 02:31:36.0;"Why doesn't `ByteArrayOutputStream` override the [`OutputStream.write(byte[] b)`](https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html#write-byte:A-) method? It only overrides the [`write(byte[] b, int off, int len)`](https://docs.oracle.com/javase/8/docs/api/java/io/ByteArrayOutputStream.html#write-byte:A-int-int-) version taking an offset and length.&#xD;&#xA;&#xD;&#xA;Of course, the existing implementation for the `write(byte[] b)` method in `OutputStream` simply delegates to the other method with `offset == 0` and `len == b.length`, so it ""works"" but not well because now `baos.write(byteArray)` is declared to `throw IOException` _even though it can never throw such an exception_.&#xD;&#xA;&#xD;&#xA;For methods that actually take `ByteArrayOutputStream` (or otherwise have an `IOException`-free specialized path, perhaps by casting) this means you are stuck using the long-form `write()`. It's not a fatal flow - but is there any good reason not to have this method overridden? Is there any reason it can't happen in a future JDK?";;
134461939;41294450;149138;5;c89a13ce-b772-4a09-b0dc-b7ad07a908e4;2016-12-23 02:51:11.0;"Why doesn't `ByteArrayOutputStream` override the [`OutputStream.write(byte[] b)`](https://docs.oracle.com/javase/8/docs/api/java/io/OutputStream.html#write-byte:A-) method? It only overrides the [`write(byte[] b, int off, int len)`](https://docs.oracle.com/javase/8/docs/api/java/io/ByteArrayOutputStream.html#write-byte:A-int-int-) version taking an offset and length.&#xD;&#xA;&#xD;&#xA;Of course, the existing implementation for the `write(byte[] b)` method in `OutputStream` simply delegates to the other method with `offset == 0` and `len == b.length`, so it ""works"" but not well because now `baos.write(byteArray)` is declared to `throw IOException` _even though it can never throw such an exception_.&#xD;&#xA;&#xD;&#xA;For methods that actually take `ByteArrayOutputStream` (or otherwise have an `IOException`-free specialized path, perhaps by casting) this means you are stuck using the long-form `write()`. It's not a fatal flow - but is there any good reason not to have this method overridden? Is there any reason it can't happen in a future JDK (**edit:** yes, there are good reasons, see the comments)?";;added 58 characters in body
