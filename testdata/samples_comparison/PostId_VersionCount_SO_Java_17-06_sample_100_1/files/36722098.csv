Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
116090183;36722098;4461425;2;b1715da9-b980-455d-905d-32151d252104;2016-04-19 14:57:19.0;"# Paradigm for interacting with the Image Editor&#xD;&#xA;&#xD;&#xA;The Creative SDK Image Editor (formerly Aviary) doesn't emit events for redo/undo, but the UI does allow the user to undo and redo.&#xD;&#xA;&#xD;&#xA;The paradigm for programmatic interaction with the Image Editor is that you:&#xD;&#xA;&#xD;&#xA;1. Send an image in&#xD;&#xA;2. Get an edited image back&#xD;&#xA;&#xD;&#xA;While an image is being edited, no events are emitted to the rest of the program.&#xD;&#xA;&#xD;&#xA;# Receiving an edited image&#xD;&#xA;&#xD;&#xA;You receive the edited image in the Activity's `onActivityResult()` method. &#xD;&#xA;&#xD;&#xA;Here is a basic example:&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    protected void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;        if (resultCode == RESULT_OK) {&#xD;&#xA;            switch (requestCode) {&#xD;&#xA;&#xD;&#xA;                /* Make a case for the request code we passed to startActivityForResult() */&#xD;&#xA;                case 1: // Can be any int&#xD;&#xA;                    &#xD;&#xA;                    /* Show the image! */&#xD;&#xA;                    Uri editedImageUri = data.getData();&#xD;&#xA;                    mEditedImageView.setImageURI(editedImageUri);&#xD;&#xA;&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;# More info&#xD;&#xA;You can get [a sample app to fork and clone on the Creative SDK GitHub account](https://github.com/CreativeSDK/android-getting-started-samples/tree/master/image-editor-ui).&#xD;&#xA;&#xD;&#xA;Further information and documentation can be found in [the Creative SDK Image Editor developer guide](https://creativesdk.adobe.com/docs/android/#/articles/imageediting/index.html).";;
116291973;36722098;4461425;5;0a673116-4b06-4f38-81e3-d7a317ba5b4d;2016-04-21 15:57:02.0;"# Paradigm for interacting with the Image Editor&#xD;&#xA;&#xD;&#xA;The Creative SDK Image Editor (formerly Aviary) doesn't emit events for redo/undo, but the UI does allow the user to undo and redo.&#xD;&#xA;&#xD;&#xA;The paradigm for programmatic interaction with the Image Editor is that you:&#xD;&#xA;&#xD;&#xA;1. Configure the Image Editor&#xD;&#xA;1. Launch the Image Editor and pass in an image&#xD;&#xA;1. Receive the resulting edited image&#xD;&#xA;&#xD;&#xA;While an image is being edited, no events are emitted to the rest of the program.&#xD;&#xA;&#xD;&#xA;# Receiving an edited image&#xD;&#xA;&#xD;&#xA;You receive the edited image in the Activity's `onActivityResult()` method. &#xD;&#xA;&#xD;&#xA;Here is a basic example:&#xD;&#xA;&#xD;&#xA;    @Override&#xD;&#xA;    protected void onActivityResult(int requestCode, int resultCode, Intent data) {&#xD;&#xA;        if (resultCode == RESULT_OK) {&#xD;&#xA;            switch (requestCode) {&#xD;&#xA;&#xD;&#xA;                /* Make a case for the request code we passed to startActivityForResult() */&#xD;&#xA;                case 1: // Can be any int&#xD;&#xA;                    &#xD;&#xA;                    /* Show the image! */&#xD;&#xA;                    Uri editedImageUri = data.getData();&#xD;&#xA;                    mEditedImageView.setImageURI(editedImageUri);&#xD;&#xA;&#xD;&#xA;                    break;&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;# More info&#xD;&#xA;You can get [a sample app to fork and clone on the Creative SDK GitHub account](https://github.com/CreativeSDK/android-getting-started-samples/tree/master/image-editor-ui).&#xD;&#xA;&#xD;&#xA;Further information and documentation can be found in [the Creative SDK Image Editor developer guide](https://creativesdk.adobe.com/docs/android/#/articles/imageediting/index.html).";;Clarifying the use paradigm.
