Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
66249059;23951275;106261;2;e413cc71-d64d-4bf0-ae1f-48ac41e4db09;2014-05-30 09:31:14.0;"Favour composition over inheritance. So your class would have references to both implementing classes.&#xD;&#xA;&#xD;&#xA;    MyClass {&#xD;&#xA;    ClassA&#xD;&#xA;    ClassB&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Th alternative of subclassing twice, seems rather hacky to me and would lead to an unnecessarily complex inheritance tree.";;
66249218;23951275;2261424;5;3ee2d3d9-9270-475e-9280-dc39f362e026;2014-05-30 09:33:50.0;"Favour composition over inheritance. So your class would have references to both implementing classes.&#xD;&#xA;&#xD;&#xA;    MyClass {&#xD;&#xA;        ClassA&#xD;&#xA;        ClassB&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Th alternative of subclassing twice, seems rather hacky to me and would lead to an unnecessarily complex inheritance tree.";;added 8 characters in body
66249496;23951275;106261;5;b2c0b702-08a2-47cc-ba66-1069956f89cf;2014-05-30 09:37:28.0;"Favour composition over inheritance. So your class would have references to both implementing classes.&#xD;&#xA;&#xD;&#xA;    MyClass {&#xD;&#xA;        ClassA&#xD;&#xA;        ClassB&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Th alternative of subclassing twice, seems rather hacky to me and would lead to an unnecessarily complex inheritance tree.&#xD;&#xA;&#xD;&#xA;Or with java 8's new static methods (not default as they can be overridden)&#xD;&#xA;&#xD;&#xA;        interface X&#xD;&#xA;        {&#xD;&#xA;           static void foo()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""foo"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     interface Y&#xD;&#xA;        {&#xD;&#xA;           static void bar()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""bar"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     MyClass implements X, Y {}";;added 182 characters in body
66249907;23951275;106261;5;a914de42-8a0e-4a58-926e-5c5dca9e0140;2014-05-30 09:43:41.0;"Favour composition over inheritance. So your class would have references to both implementing classes.&#xD;&#xA;&#xD;&#xA;    MyClass {&#xD;&#xA;        ClassA&#xD;&#xA;        ClassB&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Th alternative of subclassing twice, seems rather hacky to me and would lead to an unnecessarily complex inheritance tree.&#xD;&#xA;&#xD;&#xA;Or with java 8's new static methods (as opposed to default which can be overridden)&#xD;&#xA;&#xD;&#xA;        interface X&#xD;&#xA;        {&#xD;&#xA;           static void foo()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""foo"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     interface Y&#xD;&#xA;        {&#xD;&#xA;           static void bar()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""bar"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     MyClass implements X, Y {&#xD;&#xA;       public static void main(String args[])&#xD;&#xA;       X.foo();&#xD;&#xA;     }&#xD;&#xA;&#xD;&#xA;The interface name must be used as prefix, as static method is part of interface.";;added 71 characters in body
66250310;23951275;106261;5;051ba94a-081c-4bc3-9426-00b7d490db4b;2014-05-30 09:49:54.0;"Favour composition over inheritance. So your class would have references to both implementing classes.&#xD;&#xA;&#xD;&#xA;    MyClass {&#xD;&#xA;        ClassA&#xD;&#xA;        ClassB&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Th alternative of subclassing twice, seems rather hacky to me and would lead to an unnecessarily complex inheritance tree.&#xD;&#xA;&#xD;&#xA;Or with java 8's new static methods (as opposed to default which can be overridden). See [comparator][1] for examples.&#xD;&#xA;&#xD;&#xA;        interface X&#xD;&#xA;        {&#xD;&#xA;           static void foo()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""foo"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     interface Y&#xD;&#xA;        {&#xD;&#xA;           static void bar()&#xD;&#xA;           {&#xD;&#xA;              System.out.println(""bar"");&#xD;&#xA;           }&#xD;&#xA;        }&#xD;&#xA;     MyClass implements X, Y {&#xD;&#xA;       public static void main(String args[])&#xD;&#xA;       X.foo();&#xD;&#xA;     }&#xD;&#xA;&#xD;&#xA;The interface name must be used as prefix, as static method is part of interface.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://docs.oracle.com/javase/8/docs/api/java/util/Comparator.html";;added 114 characters in body
