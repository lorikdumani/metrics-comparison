Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
47020435;18730043;2026242;2;8c737591-9122-4092-b476-9b5bf20100a1;2013-09-10 22:55:20.0;"I got a Layout and when press a Button called ""Add"", it add one inflated view inside this Layout and start a method to set all itens inside this View (Buttons, ListView..etc).&#xD;&#xA;So, I can make a list, inside the Layout, of my inflated Views and save it on Database.&#xD;&#xA;&#xD;&#xA;My problem is, when i load the data from database, set this data on an ArrayAdapter and insert  it into the Layout,&#xD;&#xA;when i call the method to set de items, i get a ""NullPointerException""&#xD;&#xA;&#xD;&#xA;This is the Activity:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState){&#xD;&#xA;&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_record_tab);&#xD;&#xA;&#xD;&#xA;		user = new UserBean();&#xD;&#xA;		username = ( EditText ) findViewById( R.id.et_username );&#xD;&#xA;		data = ( EditText ) findViewById( R.id.et_data );&#xD;&#xA;&#xD;&#xA;		formatDateTime = DateFormat.getDateTimeInstance();&#xD;&#xA;		dateTime = Calendar.getInstance();&#xD;&#xA;&#xD;&#xA;                //this is the layout&#xD;&#xA;		listRecord = ( LinearLayout ) findViewById( R.id.listRecord );&#xD;&#xA;		initInsertButton();&#xD;&#xA;&#xD;&#xA;      //this is an Intent to get data from other activity and where i call the adapter to add views automatically&#xD;&#xA;		Bundle extras = getIntent().getExtras();&#xD;&#xA;		if (extras != null) {&#xD;&#xA;			user_id = extras.getInt(""id"");&#xD;&#xA;			data_ = extras.getString(""data""); &#xD;&#xA;&#xD;&#xA;			accessObjectUser = new UserDAO( getApplicationContext() );&#xD;&#xA;			UserBean user = accessObjectUser.oneDataById(user_id);			    &#xD;&#xA;&#xD;&#xA;			username.setText(user.getNome()+"" ""+user.getSobrenome());&#xD;&#xA;			data.setText(data_);&#xD;&#xA;&#xD;&#xA;			accessObjectRec = new RecordDAO ( getApplicationContext() );&#xD;&#xA;			recs = accessObjectRec.recDataByUserId(user_id, data_);&#xD;&#xA;&#xD;&#xA;			adapterRec = new RecordTagAdapter( getApplicationContext(),&#xD;&#xA;					R.layout.record_tag,&#xD;&#xA;					rec );&#xD;&#xA;&#xD;&#xA;			//here i set the views from adapter into layout&#xD;&#xA;                        for (int i = 0; i < adapterRec.getCount(); i++) {&#xD;&#xA;				View item = adapterRec.getView(i, null, null);&#xD;&#xA;				listRecord.addView(item);&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;        //here the button to add the view manually&#xD;&#xA;&#xD;&#xA;	private void initInsertButton() {&#xD;&#xA;		&#xD;&#xA;				&#xD;&#xA;		insertRecord = ( Button ) findViewById( R.id.buttonInsertRecord );&#xD;&#xA;		insertRecord.setOnClickListener( new OnClickListener(){		&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				LayoutInflater inflate = ( LayoutInflater ) getSystemService( Context.LAYOUT_INFLATER_SERVICE );&#xD;&#xA;				view = inflate.inflate( R.layout.record_tag, null );&#xD;&#xA;&#xD;&#xA;				initRecTag();			&#xD;&#xA;				listRecord.addView( view );&#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	&#xD;&#xA;	}		&#xD;&#xA;	&#xD;&#xA;             //setting all items inside view added&#xD;&#xA;	&#xD;&#xA;              private void initRecTag(){		&#xD;&#xA;		&#xD;&#xA;		final TextView f_id = ( TextView ) view.findViewById(R.id.tx_food_id);&#xD;&#xA;		final TextView m_id = ( TextView ) view.findViewById(R.id.tx_med_id);&#xD;&#xA;		final EditText search_box = ( EditText ) view.findViewById( R.id.food_search );&#xD;&#xA;		&#xD;&#xA;&#xD;&#xA;		final ListView lstAlimentos = ( ListView ) view.findViewById( R.id.listView1 );&#xD;&#xA;	&#xD;&#xA;		search_box.addTextChangedListener(new TextWatcher() {			&#xD;&#xA;	           public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {      	&#xD;&#xA;	        	   &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,&#xD;&#xA;	                   int arg3) {&#xD;&#xA;	               // TODO Auto-generated method stub    &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void afterTextChanged(Editable arg0) {&#xD;&#xA;	               &#xD;&#xA;	           }&#xD;&#xA;		});&#xD;&#xA;&#xD;&#xA;		lstAlimentos.setOnItemClickListener( new OnItemClickListener() {&#xD;&#xA;&#xD;&#xA;			public void onItemClick( AdapterView<?> parent, View views, int position, long id ){&#xD;&#xA;                ...&#xD;&#xA;		}		&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		insertHorario = ( TextView ) view.findViewById(R.id.tx_timer);&#xD;&#xA;		insertHorario.setOnClickListener( new OnClickListener() {&#xD;&#xA;		&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;				       timeSet();				   	&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;		});&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		deleteRecord = ( Button ) view.findViewById( R.id.bt_excludeRec );&#xD;&#xA;		deleteRecord.setOnClickListener( new OnClickListener()&#xD;&#xA;		{&#xD;&#xA;			View viewTemp = view;&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				listRecord.removeView(viewTemp);&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	public void dataSet(){&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		data.setOnClickListener( new OnClickListener() {&#xD;&#xA;			&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;		    &#xD;&#xA;				showDialog(DATE_DIALOG_ID);&#xD;&#xA;				&#xD;&#xA;				final Calendar cal = Calendar.getInstance();&#xD;&#xA;				cal.getTime();&#xD;&#xA;				&#xD;&#xA;		        pYear = cal.get(Calendar.YEAR);&#xD;&#xA;		        pMonth = cal.get(Calendar.MONTH);&#xD;&#xA;		        pDay = cal.get(Calendar.DAY_OF_MONTH);&#xD;&#xA;		 &#xD;&#xA;		        &#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		});		&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;	private DatePickerDialog.OnDateSetListener pDateSetListener =&#xD;&#xA;			new DatePickerDialog.OnDateSetListener() {&#xD;&#xA;&#xD;&#xA;		public void onDateSet(DatePicker view, int year, &#xD;&#xA;				int monthOfYear, int dayOfMonth) {&#xD;&#xA;			pYear = year;&#xD;&#xA;			pMonth = monthOfYear;&#xD;&#xA;			pDay = dayOfMonth;&#xD;&#xA;			updateDisplay();&#xD;&#xA;&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;	    &#xD;&#xA;	   public void updateDisplay() {&#xD;&#xA;	        data.setText(&#xD;&#xA;	            new StringBuilder()&#xD;&#xA;	                    // Month is 0 based so add 1&#xD;&#xA;	            		.append(pDay).append(""-"")&#xD;&#xA;	                    .append(pMonth + 1).append(""-"")	                    &#xD;&#xA;	                    .append(pYear).append("" ""));&#xD;&#xA;	    }&#xD;&#xA;	     	     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	public void timeSet(){&#xD;&#xA;		&#xD;&#xA;		new TimePickerDialog( RecordTabActivity.this, t, dateTime.get(Calendar.HOUR_OF_DAY), dateTime.get(Calendar.MINUTE), true).show();&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	TimePickerDialog.OnTimeSetListener t=new TimePickerDialog.OnTimeSetListener() {&#xD;&#xA;		public void onTimeSet(TimePicker view, int hourOfDay, int minute) {&#xD;&#xA;&#xD;&#xA;			int hour = hourOfDay;&#xD;&#xA;			int minut = minute;&#xD;&#xA;			&#xD;&#xA;			updateHour(hour, minut);&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	private void updateHour(int hour, int minute) {&#xD;&#xA;		insertHorario.setText( hour+"":""+minute );&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;	private void updateData(int year, int month, int day) {&#xD;&#xA;		data.setText(day+""-""+month+""-""+day);&#xD;&#xA;	}&#xD;&#xA;	";;
47021904;18730043;2026242;5;74a019e3-5c13-434a-b6f8-5a981bb98b89;2013-09-10 23:37:35.0;"I got a Layout and when press a Button called ""Add"", it add one inflated view inside this Layout and start a method to set all itens inside this View (Buttons, ListView..etc).&#xD;&#xA;So, I can make a list, inside the Layout, of my inflated Views and save it on Database.&#xD;&#xA;&#xD;&#xA;My problem is, when i load the data from database, set this data on an ArrayAdapter and insert  it into the Layout,&#xD;&#xA;when i call the method to set de items, i get a ""NullPointerException""&#xD;&#xA;&#xD;&#xA;This is the Activity:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState){&#xD;&#xA;&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_record_tab);&#xD;&#xA;&#xD;&#xA;		user = new UserBean();&#xD;&#xA;		username = ( EditText ) findViewById( R.id.et_username );&#xD;&#xA;		data = ( EditText ) findViewById( R.id.et_data );&#xD;&#xA;&#xD;&#xA;		formatDateTime = DateFormat.getDateTimeInstance();&#xD;&#xA;		dateTime = Calendar.getInstance();&#xD;&#xA;&#xD;&#xA;                //this is the layout&#xD;&#xA;		listRecord = ( LinearLayout ) findViewById( R.id.listRecord );&#xD;&#xA;		initInsertButton();&#xD;&#xA;&#xD;&#xA;      //this is an Intent to get data from other activity and where i call the adapter to add views automatically&#xD;&#xA;		Bundle extras = getIntent().getExtras();&#xD;&#xA;		if (extras != null) {&#xD;&#xA;			user_id = extras.getInt(""id"");&#xD;&#xA;			data_ = extras.getString(""data""); &#xD;&#xA;&#xD;&#xA;			accessObjectUser = new UserDAO( getApplicationContext() );&#xD;&#xA;			UserBean user = accessObjectUser.oneDataById(user_id);			    &#xD;&#xA;&#xD;&#xA;			username.setText(user.getNome()+"" ""+user.getSobrenome());&#xD;&#xA;			data.setText(data_);&#xD;&#xA;&#xD;&#xA;			accessObjectRec = new RecordDAO ( getApplicationContext() );&#xD;&#xA;			recs = accessObjectRec.recDataByUserId(user_id, data_);&#xD;&#xA;&#xD;&#xA;			adapterRec = new RecordTagAdapter( getApplicationContext(),&#xD;&#xA;					R.layout.record_tag,&#xD;&#xA;					rec );&#xD;&#xA;&#xD;&#xA;			//here i set the views from adapter into layout&#xD;&#xA;                        for (int i = 0; i < adapterRec.getCount(); i++) {&#xD;&#xA;				View item = adapterRec.getView(i, null, null);&#xD;&#xA;				listRecord.addView(item);&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;        //here the button to add the view manually&#xD;&#xA;&#xD;&#xA;	private void initInsertButton() {&#xD;&#xA;		&#xD;&#xA;				&#xD;&#xA;		insertRecord = ( Button ) findViewById( R.id.buttonInsertRecord );&#xD;&#xA;		insertRecord.setOnClickListener( new OnClickListener(){		&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				LayoutInflater inflate = ( LayoutInflater ) getSystemService( Context.LAYOUT_INFLATER_SERVICE );&#xD;&#xA;				view = inflate.inflate( R.layout.record_tag, null );&#xD;&#xA;&#xD;&#xA;				initRecTag();			&#xD;&#xA;				listRecord.addView( view );&#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	&#xD;&#xA;	}		&#xD;&#xA;	&#xD;&#xA;             //setting all items inside view added&#xD;&#xA;	&#xD;&#xA;              private void initRecTag(){		&#xD;&#xA;		&#xD;&#xA;		final TextView f_id = ( TextView ) view.findViewById(R.id.tx_food_id);&#xD;&#xA;		final TextView m_id = ( TextView ) view.findViewById(R.id.tx_med_id);&#xD;&#xA;		final EditText search_box = ( EditText ) view.findViewById( R.id.food_search );&#xD;&#xA;		&#xD;&#xA;&#xD;&#xA;		final ListView lstAlimentos = ( ListView ) view.findViewById( R.id.listView1 );&#xD;&#xA;	&#xD;&#xA;		search_box.addTextChangedListener(new TextWatcher() {			&#xD;&#xA;	           public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {      	&#xD;&#xA;	        	   &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,&#xD;&#xA;	                   int arg3) {&#xD;&#xA;	               // TODO Auto-generated method stub    &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void afterTextChanged(Editable arg0) {&#xD;&#xA;	               &#xD;&#xA;	           }&#xD;&#xA;		});&#xD;&#xA;&#xD;&#xA;		lstAlimentos.setOnItemClickListener( new OnItemClickListener() {&#xD;&#xA;&#xD;&#xA;			public void onItemClick( AdapterView<?> parent, View views, int position, long id ){&#xD;&#xA;                ...&#xD;&#xA;		}		&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		insertHorario = ( TextView ) view.findViewById(R.id.tx_timer);&#xD;&#xA;		insertHorario.setOnClickListener( new OnClickListener() {&#xD;&#xA;		&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;				       timeSet();				   	&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;		});&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		deleteRecord = ( Button ) view.findViewById( R.id.bt_excludeRec );&#xD;&#xA;		deleteRecord.setOnClickListener( new OnClickListener()&#xD;&#xA;		{&#xD;&#xA;			View viewTemp = view;&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				listRecord.removeView(viewTemp);&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	public void dataSet(){&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		data.setOnClickListener( new OnClickListener() {&#xD;&#xA;			&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;		    &#xD;&#xA;				showDialog(DATE_DIALOG_ID);&#xD;&#xA;				&#xD;&#xA;				final Calendar cal = Calendar.getInstance();&#xD;&#xA;				cal.getTime();&#xD;&#xA;				&#xD;&#xA;		        pYear = cal.get(Calendar.YEAR);&#xD;&#xA;		        pMonth = cal.get(Calendar.MONTH);&#xD;&#xA;		        pDay = cal.get(Calendar.DAY_OF_MONTH);&#xD;&#xA;		 &#xD;&#xA;		        &#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		});		&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;	private DatePickerDialog.OnDateSetListener pDateSetListener =&#xD;&#xA;			new DatePickerDialog.OnDateSetListener() {&#xD;&#xA;&#xD;&#xA;		public void onDateSet(DatePicker view, int year, &#xD;&#xA;				int monthOfYear, int dayOfMonth) {&#xD;&#xA;			pYear = year;&#xD;&#xA;			pMonth = monthOfYear;&#xD;&#xA;			pDay = dayOfMonth;&#xD;&#xA;			updateDisplay();&#xD;&#xA;&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;	    &#xD;&#xA;	   public void updateDisplay() {&#xD;&#xA;	        data.setText(&#xD;&#xA;	            new StringBuilder()&#xD;&#xA;	                    // Month is 0 based so add 1&#xD;&#xA;	            		.append(pDay).append(""-"")&#xD;&#xA;	                    .append(pMonth + 1).append(""-"")	                    &#xD;&#xA;	                    .append(pYear).append("" ""));&#xD;&#xA;	    }&#xD;&#xA;	     	     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	public void timeSet(){&#xD;&#xA;		&#xD;&#xA;		new TimePickerDialog( RecordTabActivity.this, t, dateTime.get(Calendar.HOUR_OF_DAY), dateTime.get(Calendar.MINUTE), true).show();&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	TimePickerDialog.OnTimeSetListener t=new TimePickerDialog.OnTimeSetListener() {&#xD;&#xA;		public void onTimeSet(TimePicker view, int hourOfDay, int minute) {&#xD;&#xA;&#xD;&#xA;			int hour = hourOfDay;&#xD;&#xA;			int minut = minute;&#xD;&#xA;			&#xD;&#xA;			updateHour(hour, minut);&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	private void updateHour(int hour, int minute) {&#xD;&#xA;		insertHorario.setText( hour+"":""+minute );&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;	private void updateData(int year, int month, int day) {&#xD;&#xA;		data.setText(day+""-""+month+""-""+day);&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;logcat:&#xD;&#xA;&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): FATAL EXCEPTION: main&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): java.lang.RuntimeException: Unable to     start activity     ComponentInfo{com.centeias.nutrirecord/com.centeias.nutrirecord.RecordTabActivity}:     java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1817)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1833)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.access$500(ActivityThread.java:124)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread$H.handleMessage(ActivityThread.java:1026)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Handler.dispatchMessage(Handler.java:99)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Looper.loop(Looper.java:132)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.main(ActivityThread.java:4134)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invoke(Method.java:491)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): Caused by: java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.initRecTag(RecordTabActivity.java:358)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.onCreate(RecordTabActivity.java:254)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Activity.performCreate(Activity.java:4411)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at          android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1781)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	... 11 more&#xD;&#xA;	";;added 2549 characters in body
47105225;18730043;2026242;5;ab1daae4-fbcd-42e1-939c-74179c7c0f75;2013-09-12 01:38:14.0;"I got a Layout and when press a Button called ""Add"", it add one inflated view inside this Layout and start a method to set all itens inside this View (Buttons, ListView..etc).&#xD;&#xA;So, I can make a list, inside the Layout, of my inflated Views and save it on Database.&#xD;&#xA;&#xD;&#xA;My problem is, when i load the data from database, set this data on an ArrayAdapter and insert  it into the Layout,&#xD;&#xA;when i call the method to set the items, i get a ""NullPointerException""&#xD;&#xA;&#xD;&#xA;This is the Activity:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState){&#xD;&#xA;&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_record_tab);&#xD;&#xA;&#xD;&#xA;		user = new UserBean();&#xD;&#xA;		username = ( EditText ) findViewById( R.id.et_username );&#xD;&#xA;		data = ( EditText ) findViewById( R.id.et_data );&#xD;&#xA;&#xD;&#xA;		formatDateTime = DateFormat.getDateTimeInstance();&#xD;&#xA;		dateTime = Calendar.getInstance();&#xD;&#xA;&#xD;&#xA;                //this is the layout&#xD;&#xA;		listRecord = ( LinearLayout ) findViewById( R.id.listRecord );&#xD;&#xA;		initInsertButton();&#xD;&#xA;&#xD;&#xA;      //this is an Intent to get data from other activity and where i call the adapter to add views automatically&#xD;&#xA;		Bundle extras = getIntent().getExtras();&#xD;&#xA;		if (extras != null) {&#xD;&#xA;			user_id = extras.getInt(""id"");&#xD;&#xA;			data_ = extras.getString(""data""); &#xD;&#xA;&#xD;&#xA;			accessObjectUser = new UserDAO( getApplicationContext() );&#xD;&#xA;			UserBean user = accessObjectUser.oneDataById(user_id);			    &#xD;&#xA;&#xD;&#xA;			username.setText(user.getNome()+"" ""+user.getSobrenome());&#xD;&#xA;			data.setText(data_);&#xD;&#xA;&#xD;&#xA;			accessObjectRec = new RecordDAO ( getApplicationContext() );&#xD;&#xA;			recs = accessObjectRec.recDataByUserId(user_id, data_);&#xD;&#xA;&#xD;&#xA;			adapterRec = new RecordTagAdapter( getApplicationContext(),&#xD;&#xA;					R.layout.record_tag,&#xD;&#xA;					rec );&#xD;&#xA;&#xD;&#xA;			//here i set the views from adapter into layout&#xD;&#xA;                        for (int i = 0; i < adapterRec.getCount(); i++) {&#xD;&#xA;				View item = adapterRec.getView(i, null, null);&#xD;&#xA;				listRecord.addView(item);&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;        //here the button to add the view manually&#xD;&#xA;&#xD;&#xA;	private void initInsertButton() {&#xD;&#xA;		&#xD;&#xA;				&#xD;&#xA;		insertRecord = ( Button ) findViewById( R.id.buttonInsertRecord );&#xD;&#xA;		insertRecord.setOnClickListener( new OnClickListener(){		&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				LayoutInflater inflate = ( LayoutInflater ) getSystemService( Context.LAYOUT_INFLATER_SERVICE );&#xD;&#xA;				view = inflate.inflate( R.layout.record_tag, null );&#xD;&#xA;&#xD;&#xA;				initRecTag();			&#xD;&#xA;				listRecord.addView( view );&#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	&#xD;&#xA;	}		&#xD;&#xA;	&#xD;&#xA;             //setting all items inside view added&#xD;&#xA;	&#xD;&#xA;              private void initRecTag(){		&#xD;&#xA;		&#xD;&#xA;		final TextView f_id = ( TextView ) view.findViewById(R.id.tx_food_id);&#xD;&#xA;		final TextView m_id = ( TextView ) view.findViewById(R.id.tx_med_id);&#xD;&#xA;		final EditText search_box = ( EditText ) view.findViewById( R.id.food_search );&#xD;&#xA;		&#xD;&#xA;&#xD;&#xA;		final ListView lstAlimentos = ( ListView ) view.findViewById( R.id.listView1 );&#xD;&#xA;	&#xD;&#xA;		search_box.addTextChangedListener(new TextWatcher() {			&#xD;&#xA;	           public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {      	&#xD;&#xA;	        	   &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,&#xD;&#xA;	                   int arg3) {&#xD;&#xA;	               // TODO Auto-generated method stub    &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void afterTextChanged(Editable arg0) {&#xD;&#xA;	               &#xD;&#xA;	           }&#xD;&#xA;		});&#xD;&#xA;&#xD;&#xA;		lstAlimentos.setOnItemClickListener( new OnItemClickListener() {&#xD;&#xA;&#xD;&#xA;			public void onItemClick( AdapterView<?> parent, View views, int position, long id ){&#xD;&#xA;                ...&#xD;&#xA;		}		&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		insertHorario = ( TextView ) view.findViewById(R.id.tx_timer);&#xD;&#xA;		insertHorario.setOnClickListener( new OnClickListener() {&#xD;&#xA;		&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;				       timeSet();				   	&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;		});&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		deleteRecord = ( Button ) view.findViewById( R.id.bt_excludeRec );&#xD;&#xA;		deleteRecord.setOnClickListener( new OnClickListener()&#xD;&#xA;		{&#xD;&#xA;			View viewTemp = view;&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				listRecord.removeView(viewTemp);&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	public void dataSet(){&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		data.setOnClickListener( new OnClickListener() {&#xD;&#xA;			&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;		    &#xD;&#xA;				showDialog(DATE_DIALOG_ID);&#xD;&#xA;				&#xD;&#xA;				final Calendar cal = Calendar.getInstance();&#xD;&#xA;				cal.getTime();&#xD;&#xA;				&#xD;&#xA;		        pYear = cal.get(Calendar.YEAR);&#xD;&#xA;		        pMonth = cal.get(Calendar.MONTH);&#xD;&#xA;		        pDay = cal.get(Calendar.DAY_OF_MONTH);&#xD;&#xA;		 &#xD;&#xA;		        &#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		});		&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;	private DatePickerDialog.OnDateSetListener pDateSetListener =&#xD;&#xA;			new DatePickerDialog.OnDateSetListener() {&#xD;&#xA;&#xD;&#xA;		public void onDateSet(DatePicker view, int year, &#xD;&#xA;				int monthOfYear, int dayOfMonth) {&#xD;&#xA;			pYear = year;&#xD;&#xA;			pMonth = monthOfYear;&#xD;&#xA;			pDay = dayOfMonth;&#xD;&#xA;			updateDisplay();&#xD;&#xA;&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;	    &#xD;&#xA;	   public void updateDisplay() {&#xD;&#xA;	        data.setText(&#xD;&#xA;	            new StringBuilder()&#xD;&#xA;	                    // Month is 0 based so add 1&#xD;&#xA;	            		.append(pDay).append(""-"")&#xD;&#xA;	                    .append(pMonth + 1).append(""-"")	                    &#xD;&#xA;	                    .append(pYear).append("" ""));&#xD;&#xA;	    }&#xD;&#xA;	     	     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	public void timeSet(){&#xD;&#xA;		&#xD;&#xA;		new TimePickerDialog( RecordTabActivity.this, t, dateTime.get(Calendar.HOUR_OF_DAY), dateTime.get(Calendar.MINUTE), true).show();&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	TimePickerDialog.OnTimeSetListener t=new TimePickerDialog.OnTimeSetListener() {&#xD;&#xA;		public void onTimeSet(TimePicker view, int hourOfDay, int minute) {&#xD;&#xA;&#xD;&#xA;			int hour = hourOfDay;&#xD;&#xA;			int minut = minute;&#xD;&#xA;			&#xD;&#xA;			updateHour(hour, minut);&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	private void updateHour(int hour, int minute) {&#xD;&#xA;		insertHorario.setText( hour+"":""+minute );&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;	private void updateData(int year, int month, int day) {&#xD;&#xA;		data.setText(day+""-""+month+""-""+day);&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;logcat:&#xD;&#xA;&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): FATAL EXCEPTION: main&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): java.lang.RuntimeException: Unable to     start activity     ComponentInfo{com.centeias.nutrirecord/com.centeias.nutrirecord.RecordTabActivity}:     java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1817)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1833)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.access$500(ActivityThread.java:124)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread$H.handleMessage(ActivityThread.java:1026)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Handler.dispatchMessage(Handler.java:99)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Looper.loop(Looper.java:132)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.main(ActivityThread.java:4134)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invoke(Method.java:491)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): Caused by: java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.initRecTag(RecordTabActivity.java:358)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.onCreate(RecordTabActivity.java:254)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Activity.performCreate(Activity.java:4411)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at          android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1781)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	... 11 more&#xD;&#xA;	";;added 1 characters in body
130969861;18730043;4864925;5;9a70c982-85a5-4d36-b0ef-b84223242eb6;2016-11-07 05:40:04.0;"I got a Layout and when press a Button called ""Add"", it add one inflated view inside this Layout and start a method to set all items inside this View (Buttons, ListView..etc).&#xD;&#xA;So, I can make a list, inside the Layout, of my inflated Views and save it on Database.&#xD;&#xA;&#xD;&#xA;My problem is, when i load the data from database, set this data on an ArrayAdapter and insert  it into the Layout,&#xD;&#xA;when i call the method to set the items, i get a ""NullPointerException""&#xD;&#xA;&#xD;&#xA;This is the Activity:&#xD;&#xA;&#xD;&#xA;        public void onCreate(Bundle savedInstanceState){&#xD;&#xA;&#xD;&#xA;		super.onCreate(savedInstanceState);&#xD;&#xA;		setContentView(R.layout.activity_record_tab);&#xD;&#xA;&#xD;&#xA;		user = new UserBean();&#xD;&#xA;		username = ( EditText ) findViewById( R.id.et_username );&#xD;&#xA;		data = ( EditText ) findViewById( R.id.et_data );&#xD;&#xA;&#xD;&#xA;		formatDateTime = DateFormat.getDateTimeInstance();&#xD;&#xA;		dateTime = Calendar.getInstance();&#xD;&#xA;&#xD;&#xA;                //this is the layout&#xD;&#xA;		listRecord = ( LinearLayout ) findViewById( R.id.listRecord );&#xD;&#xA;		initInsertButton();&#xD;&#xA;&#xD;&#xA;      //this is an Intent to get data from other activity and where i call the adapter to add views automatically&#xD;&#xA;		Bundle extras = getIntent().getExtras();&#xD;&#xA;		if (extras != null) {&#xD;&#xA;			user_id = extras.getInt(""id"");&#xD;&#xA;			data_ = extras.getString(""data""); &#xD;&#xA;&#xD;&#xA;			accessObjectUser = new UserDAO( getApplicationContext() );&#xD;&#xA;			UserBean user = accessObjectUser.oneDataById(user_id);			    &#xD;&#xA;&#xD;&#xA;			username.setText(user.getNome()+"" ""+user.getSobrenome());&#xD;&#xA;			data.setText(data_);&#xD;&#xA;&#xD;&#xA;			accessObjectRec = new RecordDAO ( getApplicationContext() );&#xD;&#xA;			recs = accessObjectRec.recDataByUserId(user_id, data_);&#xD;&#xA;&#xD;&#xA;			adapterRec = new RecordTagAdapter( getApplicationContext(),&#xD;&#xA;					R.layout.record_tag,&#xD;&#xA;					rec );&#xD;&#xA;&#xD;&#xA;			//here i set the views from adapter into layout&#xD;&#xA;                        for (int i = 0; i < adapterRec.getCount(); i++) {&#xD;&#xA;				View item = adapterRec.getView(i, null, null);&#xD;&#xA;				listRecord.addView(item);&#xD;&#xA;			}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;        //here the button to add the view manually&#xD;&#xA;&#xD;&#xA;	private void initInsertButton() {&#xD;&#xA;		&#xD;&#xA;				&#xD;&#xA;		insertRecord = ( Button ) findViewById( R.id.buttonInsertRecord );&#xD;&#xA;		insertRecord.setOnClickListener( new OnClickListener(){		&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				LayoutInflater inflate = ( LayoutInflater ) getSystemService( Context.LAYOUT_INFLATER_SERVICE );&#xD;&#xA;				view = inflate.inflate( R.layout.record_tag, null );&#xD;&#xA;&#xD;&#xA;				initRecTag();			&#xD;&#xA;				listRecord.addView( view );&#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	&#xD;&#xA;	}		&#xD;&#xA;	&#xD;&#xA;             //setting all items inside view added&#xD;&#xA;	&#xD;&#xA;              private void initRecTag(){		&#xD;&#xA;		&#xD;&#xA;		final TextView f_id = ( TextView ) view.findViewById(R.id.tx_food_id);&#xD;&#xA;		final TextView m_id = ( TextView ) view.findViewById(R.id.tx_med_id);&#xD;&#xA;		final EditText search_box = ( EditText ) view.findViewById( R.id.food_search );&#xD;&#xA;		&#xD;&#xA;&#xD;&#xA;		final ListView lstAlimentos = ( ListView ) view.findViewById( R.id.listView1 );&#xD;&#xA;	&#xD;&#xA;		search_box.addTextChangedListener(new TextWatcher() {			&#xD;&#xA;	           public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {      	&#xD;&#xA;	        	   &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void beforeTextChanged(CharSequence arg0, int arg1, int arg2,&#xD;&#xA;	                   int arg3) {&#xD;&#xA;	               // TODO Auto-generated method stub    &#xD;&#xA;	           }&#xD;&#xA;	           &#xD;&#xA;	           public void afterTextChanged(Editable arg0) {&#xD;&#xA;	               &#xD;&#xA;	           }&#xD;&#xA;		});&#xD;&#xA;&#xD;&#xA;		lstAlimentos.setOnItemClickListener( new OnItemClickListener() {&#xD;&#xA;&#xD;&#xA;			public void onItemClick( AdapterView<?> parent, View views, int position, long id ){&#xD;&#xA;                ...&#xD;&#xA;		}		&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		insertHorario = ( TextView ) view.findViewById(R.id.tx_timer);&#xD;&#xA;		insertHorario.setOnClickListener( new OnClickListener() {&#xD;&#xA;		&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;				       timeSet();				   	&#xD;&#xA;			}&#xD;&#xA;			&#xD;&#xA;		});&#xD;&#xA;				&#xD;&#xA;		&#xD;&#xA;		deleteRecord = ( Button ) view.findViewById( R.id.bt_excludeRec );&#xD;&#xA;		deleteRecord.setOnClickListener( new OnClickListener()&#xD;&#xA;		{&#xD;&#xA;			View viewTemp = view;&#xD;&#xA;			public void onClick(View v)&#xD;&#xA;			{&#xD;&#xA;				listRecord.removeView(viewTemp);&#xD;&#xA;			}&#xD;&#xA;		} );&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	public void dataSet(){&#xD;&#xA;		&#xD;&#xA;		&#xD;&#xA;		data.setOnClickListener( new OnClickListener() {&#xD;&#xA;			&#xD;&#xA;			public void onClick(View v) {&#xD;&#xA;		    &#xD;&#xA;				showDialog(DATE_DIALOG_ID);&#xD;&#xA;				&#xD;&#xA;				final Calendar cal = Calendar.getInstance();&#xD;&#xA;				cal.getTime();&#xD;&#xA;				&#xD;&#xA;		        pYear = cal.get(Calendar.YEAR);&#xD;&#xA;		        pMonth = cal.get(Calendar.MONTH);&#xD;&#xA;		        pDay = cal.get(Calendar.DAY_OF_MONTH);&#xD;&#xA;		 &#xD;&#xA;		        &#xD;&#xA;				&#xD;&#xA;			}&#xD;&#xA;		});		&#xD;&#xA;	}	&#xD;&#xA;&#xD;&#xA;	private DatePickerDialog.OnDateSetListener pDateSetListener =&#xD;&#xA;			new DatePickerDialog.OnDateSetListener() {&#xD;&#xA;&#xD;&#xA;		public void onDateSet(DatePicker view, int year, &#xD;&#xA;				int monthOfYear, int dayOfMonth) {&#xD;&#xA;			pYear = year;&#xD;&#xA;			pMonth = monthOfYear;&#xD;&#xA;			pDay = dayOfMonth;&#xD;&#xA;			updateDisplay();&#xD;&#xA;&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;&#xD;&#xA;	    &#xD;&#xA;	   public void updateDisplay() {&#xD;&#xA;	        data.setText(&#xD;&#xA;	            new StringBuilder()&#xD;&#xA;	                    // Month is 0 based so add 1&#xD;&#xA;	            		.append(pDay).append(""-"")&#xD;&#xA;	                    .append(pMonth + 1).append(""-"")	                    &#xD;&#xA;	                    .append(pYear).append("" ""));&#xD;&#xA;	    }&#xD;&#xA;	     	     &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;	public void timeSet(){&#xD;&#xA;		&#xD;&#xA;		new TimePickerDialog( RecordTabActivity.this, t, dateTime.get(Calendar.HOUR_OF_DAY), dateTime.get(Calendar.MINUTE), true).show();&#xD;&#xA;		&#xD;&#xA;	}&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	TimePickerDialog.OnTimeSetListener t=new TimePickerDialog.OnTimeSetListener() {&#xD;&#xA;		public void onTimeSet(TimePicker view, int hourOfDay, int minute) {&#xD;&#xA;&#xD;&#xA;			int hour = hourOfDay;&#xD;&#xA;			int minut = minute;&#xD;&#xA;			&#xD;&#xA;			updateHour(hour, minut);&#xD;&#xA;		}&#xD;&#xA;	};&#xD;&#xA;	&#xD;&#xA;	private void updateHour(int hour, int minute) {&#xD;&#xA;		insertHorario.setText( hour+"":""+minute );&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;	&#xD;&#xA;	private void updateData(int year, int month, int day) {&#xD;&#xA;		data.setText(day+""-""+month+""-""+day);&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;logcat:&#xD;&#xA;&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): FATAL EXCEPTION: main&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): java.lang.RuntimeException: Unable to     start activity     ComponentInfo{com.centeias.nutrirecord/com.centeias.nutrirecord.RecordTabActivity}:     java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1817)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1833)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.access$500(ActivityThread.java:124)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread$H.handleMessage(ActivityThread.java:1026)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Handler.dispatchMessage(Handler.java:99)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.os.Looper.loop(Looper.java:132)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.ActivityThread.main(ActivityThread.java:4134)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invokeNative(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     java.lang.reflect.Method.invoke(Method.java:491)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:841)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.android.internal.os.ZygoteInit.main(ZygoteInit.java:599)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     dalvik.system.NativeStart.main(Native Method)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): Caused by: java.lang.NullPointerException&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.initRecTag(RecordTabActivity.java:358)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     com.centeias.nutrirecord.RecordTabActivity.onCreate(RecordTabActivity.java:254)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Activity.performCreate(Activity.java:4411)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at     android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1048)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	at          android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1781)&#xD;&#xA;    09-10 19:34:08.711: E/AndroidRuntime(23643): 	... 11 more&#xD;&#xA;	";;corrected spelling
