Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
111796836;35642184;3835437;2;416bda06-5c36-44b1-a7d0-ccaa698ff205;2016-02-26 02:16:54.0;"ask 1: &#xD;&#xA;It's not leaking memory. JitTable is use for store jni reference. eg,when you call NewGlobalRef Api the JitTable will increase 1 record.&#xD;&#xA;&#xD;&#xA;this logs means JitTable not enough, the VM will auto resize size. so don't worry, you just keep correct release useless reference. it's ok.&#xD;&#xA;&#xD;&#xA;ask 2: &#xD;&#xA;GC_EXTERNAL_ALLOC,when you alloc native memory but memory is not enough, the GC be called. &#xD;&#xA;GC_CONCURRENT,when you alloc object size greater than 384K";;
111811598;35642184;3835437;5;99cb6ebc-d31c-4f3f-bf27-a7f7176fe8e1;2016-02-26 07:34:27.0;"ask 1: &#xD;&#xA;It's not leaking memory. JitTable is use for store jni reference. eg,when you call NewGlobalRef Api the JitTable will increase 1 record.&#xD;&#xA;&#xD;&#xA;this logs means JitTable not enough, the VM will auto resize size. so don't worry, you just keep correct release useless reference. it's ok.&#xD;&#xA;&#xD;&#xA;ask 2: &#xD;&#xA;GC_EXTERNAL_ALLOC,when you alloc native memory but memory is not enough, the GC be called. &#xD;&#xA;GC_CONCURRENT,when you alloc object size greater than 384K&#xD;&#xA;http://developer.android.com/intl/zh-cn/tools/debugging/debugging-memory.html#LogMessages";;added 91 characters in body
