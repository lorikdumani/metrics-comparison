Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
18678821;8343514;278976;2;d08fcf21-14e4-456d-9157-65799b35f27c;2011-12-01 15:07:37.0;"Great question...&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld";;
18679119;8343514;278976;5;360ef5a6-7ea1-4e27-af4f-e92937bbb6ac;2011-12-01 15:13:59.0;"Great question...&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 207 characters in body
18719762;8343514;278976;5;3319daee-361f-4072-a7c0-588b89cfcedc;2011-12-02 16:19:29.0;"Great question...&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE: found some more clues&#xD;&#xA;&#xD;&#xA;In PHP 5.3.8, I found three leads for where the opcodes are executed:&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_execute.c:1270 &#xD;&#xA;    ZEND_API void execute_internal&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend.c:1214:ZEND_API int zend_execute_scripts(int type TSRMLS_DC, zval **retval, int file_count, ...)&#xD;&#xA;    ./Zend/zend.c:1236:                  zend_execute(EG(active_op_array) TSRMLS_CC);&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;I couldn't find the definition for zend_execute(), but I'm guessing it might be generated with ./zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;";;Added references for zend_execute
18721638;8343514;278976;5;3192fbf2-4a64-40c4-8cdd-5b5a62d39ca0;2011-12-02 17:12:28.0;"Great question...&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE: found some more clues&#xD;&#xA;&#xD;&#xA;In PHP 5.3.8, I found three leads for where the opcodes are executed:&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_execute.c:1270 &#xD;&#xA;    ZEND_API void execute_internal&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend.c:1214:ZEND_API int zend_execute_scripts(int type TSRMLS_DC, zval **retval, int file_count, ...)&#xD;&#xA;    ./Zend/zend.c:1236:                  zend_execute(EG(active_op_array) TSRMLS_CC);&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;I couldn't find the definition for zend_execute(), but I'm guessing it might be generated with ./zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;I think I found it...&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_execute.h:42&#xD;&#xA;    ZEND_API void execute(zend_op_array *op_array TSRMLS_DC)&#xD;&#xA;&#xD;&#xA;I could be wrong, but it looks like all of the opcode handlers are defined in ./Zend/zend_vm_execute.h too.&#xD;&#xA;&#xD;&#xA;";;added 91 characters in body
18721892;8343514;278976;5;f8e580d4-4657-4ebd-9294-7b5d530679a7;2011-12-02 17:20:23.0;"Great question...&#xD;&#xA;&#xD;&#xA;UPDATE: it appears that opcodes are executed by the PHP Virtual Machine. It looks as though they're executed by different handler functions defined in ./Zend/zend_vm_execute.h&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE: found some more clues&#xD;&#xA;&#xD;&#xA;In PHP 5.3.8, I found three leads for where the opcodes are executed:&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_execute.c:1270 &#xD;&#xA;    ZEND_API void execute_internal&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend.c:1214:ZEND_API int zend_execute_scripts(int type TSRMLS_DC, zval **retval, int file_count, ...)&#xD;&#xA;    ./Zend/zend.c:1236:                  zend_execute(EG(active_op_array) TSRMLS_CC);&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;I couldn't find the definition for zend_execute(), but I'm guessing it might be generated with ./zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;I think I found it...&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_execute.h:42&#xD;&#xA;    ZEND_API void execute(zend_op_array *op_array TSRMLS_DC)&#xD;&#xA;&#xD;&#xA;I could be wrong, but it looks like all of the opcode handlers are defined in ./Zend/zend_vm_execute.h too.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;See ./Zend/zend_vm_execute.h:2413 for an example of what looks to the be ""integer addition"" opcode.&#xD;&#xA;";;added 103 characters in body
18722033;8343514;278976;5;2cc02814-97f0-43c6-968f-e39aa0bc76e4;2011-12-02 17:26:02.0;"Great question...&#xD;&#xA;&#xD;&#xA;UPDATE: it appears that opcodes are executed by the PHP Virtual Machine. It looks as though they're executed by different handler functions defined in ./Zend/zend_vm_execute.h&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [2]: http://derickrethans.nl/projects.html#vld&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE: found some more clues&#xD;&#xA;&#xD;&#xA;In PHP 5.3.8, I found three leads for where the opcodes are executed:&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_execute.c:1270 &#xD;&#xA;    ZEND_API void execute_internal&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend.c:1214:ZEND_API int zend_execute_scripts(int type TSRMLS_DC, zval **retval, int file_count, ...)&#xD;&#xA;    ./Zend/zend.c:1236:                  zend_execute(EG(active_op_array) TSRMLS_CC);&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;I couldn't find the definition for zend_execute(), but I'm guessing it might be generated with ./zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**I think I found it...**&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_execute.h:42&#xD;&#xA;    ZEND_API void execute(zend_op_array *op_array TSRMLS_DC)&#xD;&#xA;&#xD;&#xA;I could be wrong, but it looks like all of the opcode handlers are defined in ./Zend/zend_vm_execute.h too.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;See ./Zend/zend_vm_execute.h:2413 for an example of what looks to the be ""integer addition"" opcode.&#xD;&#xA;";;added 4 characters in body
18749677;8343514;278976;5;9821f438-9237-4972-83c5-ba1de5868061;2011-12-03 20:30:27.0;"Great question...&#xD;&#xA;&#xD;&#xA;UPDATE: opcodes are executed directly by the PHP Virtual Machine (the Zend Engine). It looks as though they're executed by different handler functions defined in ./Zend/zend_vm_execute.h&#xD;&#xA;&#xD;&#xA;See [the architecture of the Zend Engine][1] for more info on how Zend opcodes are executed.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;These resources might help a bit:&#xD;&#xA;&#xD;&#xA;http://php.net/manual/en/internals2.opcodes.list.php&#xD;&#xA;&#xD;&#xA;[http://www.php.net/manual/en/internals2.opcodes.ops.php][2]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, I'm going to checkout the PECL VLD Source for more clues...&#xD;&#xA;&#xD;&#xA;http://pecl.php.net/package/vld&#xD;&#xA;&#xD;&#xA;[http://derickrethans.nl/projects.html#vld][3]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Also, writing the authors of the VLD Pecl extension may help:&#xD;&#xA;Derick Rethans, Andrei Zmievski or Marcus Börger&#xD;&#xA;&#xD;&#xA;Their email addresses are at the top of srm_oparray.c in the extension source.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;UPDATE: found some more clues&#xD;&#xA;&#xD;&#xA;In PHP 5.3.8, I found three leads for where the opcodes are executed:&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_execute.c:1270 &#xD;&#xA;    ZEND_API void execute_internal&#xD;&#xA;    &#xD;&#xA;    ./Zend/zend.c:1214:ZEND_API int zend_execute_scripts(int type TSRMLS_DC, zval **retval, int file_count, ...)&#xD;&#xA;    ./Zend/zend.c:1236:                  zend_execute(EG(active_op_array) TSRMLS_CC);&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;I couldn't find the definition for zend_execute(), but I'm guessing it might be generated with ./zend_vm_gen.php&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**I think I found it...**&#xD;&#xA;&#xD;&#xA;    ./Zend/zend_vm_execute.h:42&#xD;&#xA;    ZEND_API void execute(zend_op_array *op_array TSRMLS_DC)&#xD;&#xA;&#xD;&#xA;I could be wrong, but it looks like all of the opcode handlers are defined in ./Zend/zend_vm_execute.h too.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;See ./Zend/zend_vm_execute.h:2413 for an example of what looks to the be ""integer addition"" opcode.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://mayurikabhatt.blogspot.com/2007/10/architecture-of-zend-engine.html&#xD;&#xA;  [2]: http://www.php.net/manual/en/internals2.opcodes.ops.php&#xD;&#xA;  [3]: http://derickrethans.nl/projects.html#vld";;added 175 characters in body
