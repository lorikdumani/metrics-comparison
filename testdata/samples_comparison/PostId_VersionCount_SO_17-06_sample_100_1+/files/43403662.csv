Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
143103809;43403662;50902;2;d3373aa8-f262-419a-9d60-4e07cf27637a;2017-04-14 00:33:39.0;"To get accurate day duration even during daylight saving time changes you should try and stick to date arithmetic. Try:&#xD;&#xA;&#xD;&#xA;    setInterval(function time(){&#xD;&#xA;      var d1 = new Date();&#xD;&#xA;      var d2 = new Date(d1.getFullYear(),&#xD;&#xA;                        d1.getMonth(),&#xD;&#xA;                        d1.getDate() + 1);&#xD;&#xA;      var d = Math.floor((d2 - d1) / 1000);&#xD;&#xA;      var hours = Math.floor(d / 3600);&#xD;&#xA;      var dm = d - 3600 * hours;&#xD;&#xA;      var min = Math.floor(dm / 60);&#xD;&#xA;      var sec = dm - 60 * min;&#xD;&#xA;      hours = ('0'+ hours).slice(-2);&#xD;&#xA;      min = ('0' + min).slice(-2);&#xD;&#xA;      sec = ('0' + sec).slice(-2);&#xD;&#xA;      document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }, 1000);&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.";;
143104041;43403662;50902;5;6a84bcf3-5914-4cd4-a3ba-4bc77312975b;2017-04-14 00:41:55.0;"To get accurate day duration even during daylight saving time changes you should try and stick to date arithmetic. Try:&#xD;&#xA;&#xD;&#xA;    setInterval(function time(){&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2;&#xD;&#xA;        if (d1.getHours() < 11) {&#xD;&#xA;            d2 = new Date(d1.getFullYear(),&#xD;&#xA;                          d1.getMonth(),&#xD;&#xA;                          d1.getDate(),&#xD;&#xA;                          11);&#xD;&#xA;        }&#xD;&#xA;        else {&#xD;&#xA;            d2 = new Date(d1.getFullYear(),&#xD;&#xA;                          d1.getMonth(),&#xD;&#xA;                          d1.getDate() + 1,&#xD;&#xA;                          11);&#xD;&#xA;        }&#xD;&#xA;        var d = Math.floor((d2 - d1) / 1000);&#xD;&#xA;        var hours = Math.floor(d / 3600);&#xD;&#xA;        var dm = d - 3600 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60);&#xD;&#xA;        var sec = dm - 60 * min;&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }, 1000);&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.";;Rollover at 11:00
143104242;43403662;50902;5;24f68a78-343a-4b55-ae09-b854eb9976e9;2017-04-14 00:48:37.0;"To get accurate day duration even during daylight saving time changes you should stick to date arithmetic. Try:&#xD;&#xA;&#xD;&#xA;    setInterval(function time(){&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2 = new Date(d1.getFullYear(),&#xD;&#xA;                          d1.getMonth(),&#xD;&#xA;                          d1.getDate() + (d1.getHours() < 11 ? 0 : 1),&#xD;&#xA;                          11);&#xD;&#xA;        var d = Math.floor((d2 - d1) / 1000);&#xD;&#xA;        var hours = Math.floor(d / 3600);&#xD;&#xA;        var dm = d - 3600 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60);&#xD;&#xA;        var sec = dm - 60 * min;&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }, 1000);&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.";;deleted 223 characters in body
143104613;43403662;50902;5;9d7857a7-4c51-4335-a4b1-3cce2d99a662;2017-04-14 01:02:35.0;"To ignore user's time zone you need to work with the UTC version of `Date`. Remember that the time you set for rollover is then also UTC.&#xD;&#xA;&#xD;&#xA;To get accurate day duration even during daylight saving time changes you should stick to date arithmetic.&#xD;&#xA;&#xD;&#xA;    setInterval(function time(){&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2 = Date.UTC(d1.getUTCFullYear(),&#xD;&#xA;                          d1.getUTCMonth(),&#xD;&#xA;                          d1.getUTCDate() + (d1.getUTCHours() < 11 ? 0 : 1),&#xD;&#xA;                          11);&#xD;&#xA;        var d = Math.floor((d2 - d1) / 1000);&#xD;&#xA;        var hours = Math.floor(d / 3600);&#xD;&#xA;        var dm = d - 3600 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60);&#xD;&#xA;        var sec = dm - 60 * min;&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }, 1000);&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.";;Use UTC
143104864;43403662;50902;5;0e86039b-d5d6-44a7-96be-199819aa5329;2017-04-14 01:12:15.0;"To ignore user's time zone you need to work with the UTC version of `Date`. Remember that the time you set for rollover is then also UTC.&#xD;&#xA;&#xD;&#xA;To get accurate day duration even during daylight saving time changes you should stick to date arithmetic.&#xD;&#xA;&#xD;&#xA;    function time() {&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2 = Date.UTC(d1.getUTCFullYear(),&#xD;&#xA;                          d1.getUTCMonth(),&#xD;&#xA;                          d1.getUTCDate() + (d1.getUTCHours() < 11 ? 0 : 1),&#xD;&#xA;                          11);&#xD;&#xA;        var dh = d2 - d1;&#xD;&#xA;        var hours = Math.floor(dh / 3600000);&#xD;&#xA;        var dm = dh - 3600000 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60000);&#xD;&#xA;        var ds = dm - 60000 * min;&#xD;&#xA;        var sec = Math.floor(ds / 1000);&#xD;&#xA;        var d = ds - 1000 * sec;&#xD;&#xA;        setTimeout(time, d);&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }&#xD;&#xA;    time();&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.&#xD;&#xA;&#xD;&#xA;As a bonus this repeatedly calls `setInterval()` so that the countdown ticks at the same time as the wall clock.";;Synchronise with clock hands
143105095;43403662;50902;5;15ad64a0-54af-46e0-9d42-7e99f9c69cd7;2017-04-14 01:22:00.0;"To ignore user's time zone you need to work with the UTC version of `Date`. Remember that the time you set for rollover is then also UTC.&#xD;&#xA;&#xD;&#xA;To get accurate day duration even during daylight saving time changes you should stick to date arithmetic.&#xD;&#xA;&#xD;&#xA;    function time() {&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2 = Date.UTC(d1.getUTCFullYear(),&#xD;&#xA;                          d1.getUTCMonth(),&#xD;&#xA;                          d1.getUTCDate() + (d1.getUTCHours() < 11 ? 0 : 1),&#xD;&#xA;                          11);&#xD;&#xA;        var dh = d2 - d1;&#xD;&#xA;        var hours = Math.floor(dh / 3600000);&#xD;&#xA;        var dm = dh - 3600000 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60000);&#xD;&#xA;        var ds = dm - 60000 * min;&#xD;&#xA;        var sec = Math.floor(ds / 1000);&#xD;&#xA;        var dmilli = ds - 1000 * sec;&#xD;&#xA;        setTimeout(time, dmilli);&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }&#xD;&#xA;    time();&#xD;&#xA;&#xD;&#xA;`d2` is the time the counter will rollover. Adapt accordingly.&#xD;&#xA;&#xD;&#xA;As a bonus this repeatedly calls `setInterval()` so that the countdown ticks at the same time as the wall clock.";;added 4 characters in body
143105231;43403662;50902;5;f565e8c5-73d2-4746-bbe0-96c1aea197eb;2017-04-14 01:27:38.0;"To ignore user's time zone you need to work with the UTC version of `Date`. Remember that the time you set for rollover is then also UTC.&#xD;&#xA;&#xD;&#xA;To get accurate day duration even during daylight saving time changes you should stick to date arithmetic.&#xD;&#xA;&#xD;&#xA;    function time() {&#xD;&#xA;        var d1 = new Date();&#xD;&#xA;        var d2 = Date.UTC(d1.getUTCFullYear(),&#xD;&#xA;                          d1.getUTCMonth(),&#xD;&#xA;                          d1.getUTCDate() + (d1.getUTCHours() < 11 ? 0 : 1),&#xD;&#xA;                          11);&#xD;&#xA;        var dh = d2 - d1;&#xD;&#xA;        var hours = Math.floor(dh / 3600000);&#xD;&#xA;        var dm = dh - 3600000 * hours;&#xD;&#xA;        var min = Math.floor(dm / 60000);&#xD;&#xA;        var ds = dm - 60000 * min;&#xD;&#xA;        var sec = Math.floor(ds / 1000);&#xD;&#xA;        var dmilli = ds - 1000 * sec;&#xD;&#xA;        setTimeout(time, dmilli);&#xD;&#xA;        hours = ('0' + hours).slice(-2);&#xD;&#xA;        min = ('0' + min).slice(-2);&#xD;&#xA;        sec = ('0' + sec).slice(-2);&#xD;&#xA;        document.querySelector('#the-final-countdown p').innerHTML = hours + ':' + min + ':' + sec;&#xD;&#xA;    }&#xD;&#xA;    time();&#xD;&#xA;&#xD;&#xA;`d2` is the `Date` the counter will rollover. Adapt accordingly.&#xD;&#xA;&#xD;&#xA;As a bonus this repeatedly calls `setInterval()` so that the countdown ticks at the same time as the wall clock.";;added 2 characters in body
