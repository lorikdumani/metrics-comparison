Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
23908915;10401935;808804;2;2dcdf140-696e-4aa3-9c57-4407106315ee;2012-05-01 17:53:02.0;"What is the method-wrapper type in Python 3?  If I define a class like so:&#xD;&#xA;&#xD;&#xA;    class Foo(object):&#xD;&#xA;        def __init__(self, val):&#xD;&#xA;            self.val = val&#xD;&#xA;        def __eq__(self, other):&#xD;&#xA;            return self.val == other.val&#xD;&#xA;&#xD;&#xA;And then do:&#xD;&#xA;&#xD;&#xA;    Foo(42).__eq__&#xD;&#xA;&#xD;&#xA;I get:&#xD;&#xA;&#xD;&#xA;    <bound method Foo.__eq__ of <__main__.Foo object at 0x10121d0>>&#xD;&#xA;&#xD;&#xA;But if I do (in Python **3** ):&#xD;&#xA;&#xD;&#xA;    Foo(42).__ne__&#xD;&#xA;&#xD;&#xA;I get:&#xD;&#xA;&#xD;&#xA;    <method-wrapper '__ne__' of Foo object at 0x1073e50>&#xD;&#xA;&#xD;&#xA;What is a ""method-wrapper"" type?";;
23998219;10401935;808804;5;31c87e92-8a1e-4bec-8a4e-66e7cfaf108d;2012-05-03 16:21:17.0;"What is the method-wrapper type in Python 3?  If I define a class like so:&#xD;&#xA;&#xD;&#xA;    class Foo(object):&#xD;&#xA;        def __init__(self, val):&#xD;&#xA;            self.val = val&#xD;&#xA;        def __eq__(self, other):&#xD;&#xA;            return self.val == other.val&#xD;&#xA;&#xD;&#xA;And then do:&#xD;&#xA;&#xD;&#xA;    Foo(42).__eq__&#xD;&#xA;&#xD;&#xA;I get:&#xD;&#xA;&#xD;&#xA;    <bound method Foo.__eq__ of <__main__.Foo object at 0x10121d0>>&#xD;&#xA;&#xD;&#xA;But if I do (in Python **3** ):&#xD;&#xA;&#xD;&#xA;    Foo(42).__ne__&#xD;&#xA;&#xD;&#xA;I get:&#xD;&#xA;&#xD;&#xA;    <method-wrapper '__ne__' of Foo object at 0x1073e50>&#xD;&#xA;&#xD;&#xA;What is a ""method-wrapper"" type?&#xD;&#xA;&#xD;&#xA;Edit: sorry to be more accurate: `class method-wrapper` is the type of `__ne__`, as if I do:&#xD;&#xA;&#xD;&#xA;    >>> type(Foo(42).__ne__)&#xD;&#xA;    <class 'method-wrapper'>&#xD;&#xA;&#xD;&#xA;Whereas the type of `__eq__` is:&#xD;&#xA;&#xD;&#xA;    >>> type(Foo(42).__eq__)&#xD;&#xA;    <class 'method'>&#xD;&#xA;&#xD;&#xA;Furthermore `method-wrapper` seems to be the type of any undefined magic method on a class (so `__le__`, `__repr__`, `__str__` etc if not explicitly defined will also have this type).&#xD;&#xA;&#xD;&#xA;What I am interested in is how the `method-wrapper` class is used by Python.  Are all ""default implementations"" of methods on a class just instances of this type?";;Added clarification.
