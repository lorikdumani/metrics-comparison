Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
26035599;11219315;1484513;2;9a2de7f1-6354-41ef-8890-5217f73709cd;2012-06-27 04:16:06.0;"I arrived here looking for a solution to a similar problem, which was to have a footer bar that spans the width of the window and sits below the (variable height and width) content.  In other words, make it appear that the footer is ""fixed"" with respect to its horizontal position, but retains its normal postion in the document flow with respect to its vertical position.  In my case, I had the footer text right-aligned, so it worked for me to dynamically adjust the width of the footer.  Here is what I came up with:&#xD;&#xA;&#xD;&#xA;### HTML ###&#xD;&#xA;&#xD;&#xA;    <div id=""footer-outer"">&#xD;&#xA;    <div id=""footer"">&#xD;&#xA;        Footer text.&#xD;&#xA;    </div><!-- end footer -->&#xD;&#xA;    </div><!-- end footer-outer -->&#xD;&#xA;&#xD;&#xA;### CSS ###&#xD;&#xA;&#xD;&#xA;    #footer-outer&#xD;&#xA;    {&#xD;&#xA;        width: 100%;&#xD;&#xA;    }&#xD;&#xA;    #footer&#xD;&#xA;    {&#xD;&#xA;        text-align: right;&#xD;&#xA;        background-color: blue;&#xD;&#xA;        /* various style attributes, not important for the example */&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;### CoffeeScript / JavaScript ###&#xD;&#xA;(Using prototype.js).&#xD;&#xA;&#xD;&#xA;    class Footer&#xD;&#xA;    document.observe 'dom:loaded', ->&#xD;&#xA;        Footer.width = $('footer-outer').getDimensions().width&#xD;&#xA;    Event.observe window, 'scroll', ->&#xD;&#xA;        x = document.viewport.getScrollOffsets().left&#xD;&#xA;        $('footer-outer').setStyle( {'width': (Footer.width + x) + ""px""} )&#xD;&#xA;&#xD;&#xA;which compiles into:&#xD;&#xA;&#xD;&#xA;    Footer = (function() {&#xD;&#xA;&#xD;&#xA;      function Footer() {}&#xD;&#xA;&#xD;&#xA;      return Footer;&#xD;&#xA;&#xD;&#xA;    })();&#xD;&#xA;&#xD;&#xA;    document.observe('dom:loaded', function() {&#xD;&#xA;      return Footer.width = $('footer-outer').getDimensions().width;&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Event.observe(window, 'scroll', function() {&#xD;&#xA;      var x;&#xD;&#xA;      x = document.viewport.getScrollOffsets().left;&#xD;&#xA;      return $('footer-outer').setStyle({&#xD;&#xA;        'width': (Footer.width + x) + ""px""&#xD;&#xA;      });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;This works nicely in FireFox, and pretty well in Chrome (it's a little jittery); I haven't tried other browsers.&#xD;&#xA;&#xD;&#xA;I also wanted any spare space below the footer to be a different colour, so I added this `footer-stretch` div:&#xD;&#xA;### HTML ###&#xD;&#xA;&#xD;&#xA;    ...&#xD;&#xA;    </div><!-- end footer -->&#xD;&#xA;    <div id=""footer-stretch""></div>&#xD;&#xA;    </div><!-- end footer-outer -->&#xD;&#xA;&#xD;&#xA;### CSS ###&#xD;&#xA;&#xD;&#xA;    #footer-outer&#xD;&#xA;    {&#xD;&#xA;        height: 100%;&#xD;&#xA;    }&#xD;&#xA;    #footer-stretch&#xD;&#xA;    {&#xD;&#xA;        height: 100%;&#xD;&#xA;        background-color: #2A2A2A;&#xD;&#xA;    }&#xD;&#xA;";;
26384113;11219315;1484513;5;4e026672-c704-4d35-8962-efcb7cfbd16b;2012-07-05 20:53:32.0;"I arrived here looking for a solution to a similar problem, which was to have a footer bar that spans the width of the window and sits below the (variable height and width) content.  In other words, make it appear that the footer is ""fixed"" with respect to its horizontal position, but retains its normal postion in the document flow with respect to its vertical position.  In my case, I had the footer text right-aligned, so it worked for me to dynamically adjust the width of the footer.  Here is what I came up with:&#xD;&#xA;&#xD;&#xA;### HTML ###&#xD;&#xA;&#xD;&#xA;    <div id=""footer-outer"">&#xD;&#xA;    <div id=""footer"">&#xD;&#xA;        Footer text.&#xD;&#xA;    </div><!-- end footer -->&#xD;&#xA;    </div><!-- end footer-outer -->&#xD;&#xA;&#xD;&#xA;### CSS ###&#xD;&#xA;&#xD;&#xA;    #footer-outer&#xD;&#xA;    {&#xD;&#xA;        width: 100%;&#xD;&#xA;    }&#xD;&#xA;    #footer&#xD;&#xA;    {&#xD;&#xA;        text-align: right;&#xD;&#xA;        background-color: blue;&#xD;&#xA;        /* various style attributes, not important for the example */&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;### CoffeeScript / JavaScript ###&#xD;&#xA;(Using prototype.js).&#xD;&#xA;&#xD;&#xA;    class Footer&#xD;&#xA;    document.observe 'dom:loaded', ->&#xD;&#xA;        Footer.width = $('footer-outer').getDimensions().width&#xD;&#xA;    Event.observe window, 'scroll', ->&#xD;&#xA;        x = document.viewport.getScrollOffsets().left&#xD;&#xA;        $('footer-outer').setStyle( {'width': (Footer.width + x) + ""px""} )&#xD;&#xA;&#xD;&#xA;which compiles into:&#xD;&#xA;&#xD;&#xA;    Footer = (function() {&#xD;&#xA;&#xD;&#xA;      function Footer() {}&#xD;&#xA;&#xD;&#xA;      return Footer;&#xD;&#xA;&#xD;&#xA;    })();&#xD;&#xA;&#xD;&#xA;    document.observe('dom:loaded', function() {&#xD;&#xA;      return Footer.width = $('footer-outer').getDimensions().width;&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;    Event.observe(window, 'scroll', function() {&#xD;&#xA;      var x;&#xD;&#xA;      x = document.viewport.getScrollOffsets().left;&#xD;&#xA;      return $('footer-outer').setStyle({&#xD;&#xA;        'width': (Footer.width + x) + ""px""&#xD;&#xA;      });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;This works nicely in FireFox, and pretty well in Chrome (it's a little jittery); I haven't tried other browsers.&#xD;&#xA;&#xD;&#xA;I also wanted any spare space below the footer to be a different colour, so I added this `footer-stretch` div:&#xD;&#xA;### HTML ###&#xD;&#xA;&#xD;&#xA;    ...&#xD;&#xA;    </div><!-- end footer -->&#xD;&#xA;    <div id=""footer-stretch""></div>&#xD;&#xA;    </div><!-- end footer-outer -->&#xD;&#xA;&#xD;&#xA;### CSS ###&#xD;&#xA;&#xD;&#xA;    #footer-outer&#xD;&#xA;    {&#xD;&#xA;        height: 100%;&#xD;&#xA;    }&#xD;&#xA;    #footer-stretch&#xD;&#xA;    {&#xD;&#xA;        height: 100%;&#xD;&#xA;        background-color: #2A2A2A;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Note that for the #footer-stretch div to work, all the parent elements up to the body element (and possibly the html element - not sure) must have a fixed height (in this case, height = 100%).";;Add mention of a necessary condition for the footer-stretch div to work.
