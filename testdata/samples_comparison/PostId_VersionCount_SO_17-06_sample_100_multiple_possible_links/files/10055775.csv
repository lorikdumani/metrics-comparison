Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
23032067;10055775;286217;2;b8cb8cef-3157-41e5-95f7-c60b49b1df1b;2012-04-07 15:35:38.0;"Declare a relation inside your `Entries` model:&#xD;&#xA;&#xD;&#xA;    public function relations() {&#xD;&#xA;        return array(&#xD;&#xA;            'votes' => array(self::HAS_MANY, 'Votings', 'entry_id'),&#xD;&#xA;        );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;And when you create your data provider do it like this:&#xD;&#xA;&#xD;&#xA;    $provider = new CActiveDataProvider('Entries',&#xD;&#xA;        array(&#xD;&#xA;            'criteria' => array(&#xD;&#xA;                'with' => array(&#xD;&#xA;                    'votes'=>array(&#xD;&#xA;                        'joinType' => 'INNER JOIN'&#xD;&#xA;                    )&#xD;&#xA;                )&#xD;&#xA;            )&#xD;&#xA;        )&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;This will not create you the SQL you have written above, but this will do it the right way.&#xD;&#xA;The SQL will look similar to this:&#xD;&#xA;<!-- language: lang-sql -->&#xD;&#xA;&#xD;&#xA;    select * from tbl_entries t INNER JOIN tbl_votings v ON t.id = v.entry_id";;
23032219;10055775;286217;5;a22122bc-1e4f-4c43-ad1e-530739ca0ff3;2012-04-07 15:44:52.0;"**Updated**&#xD;&#xA;&#xD;&#xA;Ok, i missed word ""if"" in your post, and thought you need entries ONLY if users voted for it. Read update below for right code. I leave you the first part just in case you need it in the future. INNER JOIN will take entries ONLY if that entries have at least 1 vote.&#xD;&#xA;&#xD;&#xA;------------------ FIRST PART (wrong) --------------------&#xD;&#xA;&#xD;&#xA;Declare a relation inside your `Entries` model:&#xD;&#xA;&#xD;&#xA;    public function relations() {&#xD;&#xA;        return array(&#xD;&#xA;            'votes' => array(self::HAS_MANY, 'Votings', 'entry_id'),&#xD;&#xA;        );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;And when you create your data provider do it like this:&#xD;&#xA;&#xD;&#xA;    $dataProvider = new CActiveDataProvider('Entries',&#xD;&#xA;        array(&#xD;&#xA;            'criteria' => array(&#xD;&#xA;                'with' => array(&#xD;&#xA;                    'votes'=>array(&#xD;&#xA;                        'joinType' => 'INNER JOIN'&#xD;&#xA;                    )&#xD;&#xA;                )&#xD;&#xA;            )&#xD;&#xA;        )&#xD;&#xA;    );&#xD;&#xA;&#xD;&#xA;This will not create you the SQL you have written above, but this will do it the right way.&#xD;&#xA;The SQL will look similar to this:&#xD;&#xA;<!-- language: lang-sql -->&#xD;&#xA;&#xD;&#xA;    select * from tbl_entries t INNER JOIN tbl_votings v ON t.id = v.entry_id&#xD;&#xA;&#xD;&#xA;----------------- SECOND PART (right) ------------------&#xD;&#xA;&#xD;&#xA;**Update**&#xD;&#xA;&#xD;&#xA;Ok, so if you simply need to get entries and votes for them you do the same relation declaration from first part:&#xD;&#xA;&#xD;&#xA;    public function relations() {&#xD;&#xA;        return array(&#xD;&#xA;            'votes' => array(self::HAS_MANY, 'Votings', 'entry_id'),&#xD;&#xA;        );&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;And you create your data provider like this:&#xD;&#xA;&#xD;&#xA;    $dataProvider = new CActiveDataProvider('Entries',&#xD;&#xA;        array(&#xD;&#xA;            'criteria' => array(&#xD;&#xA;                'with' => array('votes')&#xD;&#xA;            )&#xD;&#xA;        )&#xD;&#xA;    );&#xD;&#xA;";;wrong final solution
