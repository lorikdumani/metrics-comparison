Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
144321095;43707129;5316255;2;28555a54-b8c1-46ef-979b-ed8a0c9a2a39;2017-04-30 13:49:33.0;"As you already mentioned you are just getting `input1` value only and displaying it. If you want to display all of the values in single textbox, you will need to fetch them sepaartely from `localStorage` and then join them together and set the final value to the `textbox`.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    var val1 = localStorage.getItem('input1');&#xD;&#xA;    var val2 = localStorage.getItem('input1');&#xD;&#xA;    var val3 = localStorage.getItem('input1');&#xD;&#xA;    ...&#xD;&#xA;&#xD;&#xA;In a similar manner, get all the values. I am assuming all of them are `string`. In that case you can just `concat` them to make a final value. Like:&#xD;&#xA;&#xD;&#xA;    var finalValue = val1.concat(val2).concat(val3);&#xD;&#xA;&#xD;&#xA;and then &#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This should give you desired results.";;
144321414;43707129;5316255;5;75e156ba-69c5-43e3-815c-19b6c029ec86;2017-04-30 13:57:08.0;"As you already mentioned you are just getting `input1` value only and displaying it. If you want to display all of the values in single textbox, you will need to fetch them sepaartely from `localStorage` and then join them together and set the final value to the `textbox`.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    var val1 = localStorage.getItem('input1');&#xD;&#xA;    var val2 = localStorage.getItem('input1');&#xD;&#xA;    var val3 = localStorage.getItem('input1');&#xD;&#xA;    ...&#xD;&#xA;&#xD;&#xA;In a similar manner, get all the values. I am assuming all of them are `string`. In that case you can just `concat` them to make a final value. Like:&#xD;&#xA;&#xD;&#xA;    var finalValue = val1.concat(val2).concat(val3);&#xD;&#xA;&#xD;&#xA;and then &#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This should give you desired results. Although I am not aware of your use case , but still this doesn't seem a good way of doing things. Rather, if you wish to save all this data, you might want to club the entire data into a single object in few properties. Like:&#xD;&#xA;&#xD;&#xA;    var objToSave = {};&#xD;&#xA;    objToSave.data1 = document.getElementById('eName').value;&#xD;&#xA;    objToSave.data2 = document.getElementById('exercise').value;&#xD;&#xA;    ....&#xD;&#xA;&#xD;&#xA;and finally you can push this entire obj to localStorage like,&#xD;&#xA;&#xD;&#xA;    localStorage.setItem(JSON.stringify(objToSave));  //you need to stringify object before pushing to localStorage&#xD;&#xA;&#xD;&#xA;and when you get it back do something like:&#xD;&#xA;&#xD;&#xA;    var myDataFromLS = JSON.parse(localStorage.getItem(objToSave));&#xD;&#xA;&#xD;&#xA;This will help you keep your code a bit compact.&#xD;&#xA;&#xD;&#xA;P.S. This is just based on your current implementation. Ofcourse there are better way of doing things.&#xD;&#xA;";;added 855 characters in body
144321957;43707129;5316255;5;d3915cbb-f2b8-4ed8-9920-6b08d8d504b6;2017-04-30 14:11:22.0;"As you already mentioned you are just getting `input1` value only and displaying it. If you want to display all of the values in single textbox, you will need to fetch them sepaartely from `localStorage` and then join them together and set the final value to the `textbox`.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    var val1 = localStorage.getItem('input1');&#xD;&#xA;    var val2 = localStorage.getItem('input1');&#xD;&#xA;    var val3 = localStorage.getItem('input1');&#xD;&#xA;    ...&#xD;&#xA;&#xD;&#xA;In a similar manner, get all the values. I am assuming all of them are `string`. In that case you can just `concat` them to make a final value. Like:&#xD;&#xA;&#xD;&#xA;    var finalValue = val1.concat(val2).concat(val3);&#xD;&#xA;&#xD;&#xA;and then &#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This should give you desired results. Although I am not aware of your use case , but still this doesn't seem a good way of doing things. Rather, if you wish to save all this data, you might want to club the entire data into a single object in few properties. Like:&#xD;&#xA;&#xD;&#xA;    var objToSave = {};&#xD;&#xA;    objToSave.data1 = document.getElementById('eName').value;&#xD;&#xA;    objToSave.data2 = document.getElementById('exercise').value;&#xD;&#xA;    ....&#xD;&#xA;&#xD;&#xA;and finally you can push this entire obj to localStorage like,&#xD;&#xA;&#xD;&#xA;    localStorage.setItem(JSON.stringify(objToSave));  //you need to stringify object before pushing to localStorage&#xD;&#xA;&#xD;&#xA;and when you get it back do something like:&#xD;&#xA;&#xD;&#xA;    var myDataFromLS = JSON.parse(localStorage.getItem(objToSave));&#xD;&#xA;&#xD;&#xA;Now this object contains all your input data but in a map kind structure. So you again need to pull different properties and bind them like explained above. The good point here is you can run a loop in the object and concat all values at once.&#xD;&#xA;&#xD;&#xA;    var finalValue= """";&#xD;&#xA;    for( var data in myDataFromLS ){&#xD;&#xA;     finalValue= joinedString.concat(myDataFromLS[data]);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Now you can bind this string to text box using:&#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This will help you keep your code a bit compact.&#xD;&#xA;&#xD;&#xA;P.S. This is just based on your current implementation. Ofcourse there are better way of doing things.&#xD;&#xA;";;added more info
144323849;43707129;5316255;5;343b4225-2fc3-4786-af7e-9551cd88ec04;2017-04-30 14:56:33.0;"As you already mentioned you are just getting `input1` value only and displaying it. If you want to display all of the values in single textbox, you will need to fetch them sepaartely from `localStorage` and then join them together and set the final value to the `textbox`.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    var val1 = localStorage.getItem('input1');&#xD;&#xA;    var val2 = localStorage.getItem('input1');&#xD;&#xA;    var val3 = localStorage.getItem('input1');&#xD;&#xA;    ...&#xD;&#xA;&#xD;&#xA;In a similar manner, get all the values. I am assuming all of them are `string`. In that case you can just `concat` them to make a final value. Like:&#xD;&#xA;&#xD;&#xA;    var finalValue = val1.concat(val2).concat(val3);&#xD;&#xA;&#xD;&#xA;and then &#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This should give you desired results. Although I am not aware of your use case , but still this doesn't seem a good way of doing things. Rather, if you wish to save all this data, you might want to club the entire data into a single object in few properties. Like:&#xD;&#xA;&#xD;&#xA;    var objToSave = {};&#xD;&#xA;    objToSave.data1 = document.getElementById('eName').value;&#xD;&#xA;    objToSave.data2 = document.getElementById('exercise').value;&#xD;&#xA;    ....&#xD;&#xA;&#xD;&#xA;and finally you can push this entire obj to localStorage like,&#xD;&#xA;&#xD;&#xA;    localStorage.setItem('objToSave', JSON.stringify(objToSave));  //you need to stringify object before pushing to localStorage&#xD;&#xA;&#xD;&#xA;and when you get it back do something like:&#xD;&#xA;&#xD;&#xA;    var myDataFromLS = JSON.parse(localStorage.getItem('objToSave'));&#xD;&#xA;&#xD;&#xA;Now this object contains all your input data but in a map kind structure. So you again need to pull different properties and bind them like explained above. The good point here is you can run a loop in the object and concat all values at once.&#xD;&#xA;&#xD;&#xA;    var finalValue= """";&#xD;&#xA;    for( var data in myDataFromLS ){&#xD;&#xA;     finalValue= joinedString.concat(myDataFromLS[data]);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Now you can bind this string to text box using:&#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This will help you keep your code a bit compact.&#xD;&#xA;&#xD;&#xA;P.S. This is just based on your current implementation. Ofcourse there are better way of doing things.&#xD;&#xA;";;added 13 characters in body
144324065;43707129;5316255;5;1691f703-7bad-4921-955e-13f73634a816;2017-04-30 15:02:19.0;"As you already mentioned you are just getting `input1` value only and displaying it. If you want to display all of the values in single textbox, you will need to fetch them sepaartely from `localStorage` and then join them together and set the final value to the `textbox`.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    var val1 = localStorage.getItem('input1');&#xD;&#xA;    var val2 = localStorage.getItem('input1');&#xD;&#xA;    var val3 = localStorage.getItem('input1');&#xD;&#xA;    ...&#xD;&#xA;&#xD;&#xA;In a similar manner, get all the values. I am assuming all of them are `string`. In that case you can just `concat` them to make a final value. Like:&#xD;&#xA;&#xD;&#xA;    var finalValue = val1.concat(val2).concat(val3);&#xD;&#xA;&#xD;&#xA;and then &#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This should give you desired results. Although I am not aware of your use case , but still this doesn't seem a good way of doing things. Rather, if you wish to save all this data, you might want to club the entire data into a single object in few properties and finally you can push this entire obj to localStorage like:&#xD;&#xA;&#xD;&#xA;    <script>&#xD;&#xA;    window.onload = function(){&#xD;&#xA;    &#xD;&#xA;    var objToSave = {};&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    function save(){&#xD;&#xA;        objToSave.data1 = document.getElementById('eName').value;&#xD;&#xA;        objToSave.data2 = document.getElementById('exercise').value;&#xD;&#xA;        ....&#xD;&#xA;    localStorage.setItem('objToSave', JSON.stringify(objToSave));  //you need to stringify object before pushing to localStorage&#xD;&#xA;    &#xD;&#xA;    }&#xD;&#xA;    &#xD;&#xA;    </script>&#xD;&#xA;    &#xD;&#xA;&#xD;&#xA;and when you get it back do something like:&#xD;&#xA;&#xD;&#xA;    var myDataFromLS = JSON.parse(localStorage.getItem('objToSave'));&#xD;&#xA;&#xD;&#xA;Now this object contains all your input data but in a map kind structure. So you again need to pull different properties and bind them like explained above. The good point here is you can run a loop in the object and concat all values at once.&#xD;&#xA;&#xD;&#xA;    var finalValue= """";&#xD;&#xA;    for( var data in myDataFromLS ){&#xD;&#xA;     finalValue= joinedString.concat(myDataFromLS[data]);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Now you can bind this string to text box using:&#xD;&#xA;&#xD;&#xA;    document.getElementById(""textbox"").value = finalValue;&#xD;&#xA;&#xD;&#xA;This will help you keep your code a bit compact.&#xD;&#xA;&#xD;&#xA;P.S. This is just based on your current implementation. Ofcourse there are better way of doing things.&#xD;&#xA;";;orrected local storage methods
