Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
71241065;25248123;3680562;2;a482acd7-b2a9-4031-b2a3-a07d51480b5e;2014-08-11 16:34:28.0;"So I have an instance function that takes in an `NSInteger` as a parameter; and in the function, I have a block.  I need to modify the `NSInteger` that gets passed into the function.  But it isn't a `__block` type.  How should I go about doing that?&#xD;&#xA;The original function is too complicated so I'll just put a simplified version here...&#xD;&#xA;&#xD;&#xA;    //@interface&#xD;&#xA;    @property(nonatomic) NSInteger input; &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    //@implementation&#xD;&#xA;    [self doThis:self.input];&#xD;&#xA;&#xD;&#xA;    -(void)doThis:(NSInteger)integer{&#xD;&#xA;        [API doSomethingWithThisInteger:integer success:^(NSMutableDictionary *data){&#xD;&#xA;            ...&#xD;&#xA;        } failure:^(NSString *error){&#xD;&#xA;            integer--;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I know that I'm supposed to pass in a `__block` type variable but if I initialized a new one in the function (i.e. `__block NSInteger temp = integer`) and put `temp--` instead of `integer--` in the `failure` block, then `self.input` would remain the same since the initialization statement copies the value of `input` instead of referencing to it.  What should I do here?  Thanks!";;
71241487;25248123;3680562;5;82efb00a-f6b9-49a8-b327-63a656544c3c;2014-08-11 16:42:14.0;"So I have an instance function that takes in an `NSInteger` as a parameter; and in the function, I have a block.  I need to modify the `NSInteger` that gets passed into the function.  But it isn't a `__block` type.  How should I go about doing that?&#xD;&#xA;The original function is too complicated so I'll just put a simplified version here...&#xD;&#xA;&#xD;&#xA;    //@interface&#xD;&#xA;    @property(nonatomic) NSInteger input; &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    //@implementation&#xD;&#xA;    [self doThis:self.input];&#xD;&#xA;&#xD;&#xA;    -(void)doThis:(NSInteger)integer{&#xD;&#xA;        [API doSomethingWithThisInteger:integer success:^(NSMutableDictionary *data){&#xD;&#xA;            ...&#xD;&#xA;        } failure:^(NSString *error){&#xD;&#xA;            integer--;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I know that I'm supposed to pass in a `__block` type variable but if I initialized a new one in the function (i.e. `__block NSInteger temp = integer`) and put `temp--` instead of `integer--` in the `failure` block, then `self.input` would remain the same since the initialization statement copies the value of `input` instead of referencing to it.  What should I do here?  Is there a way to make the new variable a reference to the variable I pass into the function?  Thanks!";;added 95 characters in body
71326700;25248123;3680562;5;e6122642-9f9b-4903-b7ed-9b226ca10d03;2014-08-12 18:01:58.0;"So I have an instance function that takes in an `NSInteger` as a parameter; and in the function, I have a block.  I need to modify the `NSInteger` that gets passed into the function.  But it isn't a `__block` type.  How should I go about doing that?&#xD;&#xA;The original function is too complicated so I'll just put a simplified version here...&#xD;&#xA;&#xD;&#xA;    //@interface&#xD;&#xA;    @property(nonatomic) NSInteger input; &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    //@implementation&#xD;&#xA;    [self doThis:self.input];&#xD;&#xA;&#xD;&#xA;    -(void)doThis:(NSInteger)integer{&#xD;&#xA;        [API doSomethingWithThisInteger:integer success:^(NSMutableDictionary *data){&#xD;&#xA;            ...&#xD;&#xA;        } failure:^(NSString *error){&#xD;&#xA;            integer--;&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I know that I'm supposed to pass in a `__block` type variable but if I initialized a new one in the function (i.e. `__block NSInteger temp = integer`) and put `temp--` instead of `integer--` in the `failure` block, then `self.input` would remain the same since the initialization statement copies the value of `input` instead of referencing to it.  What should I do here?  Is there a way to make the new variable a reference to the variable I pass into the function?  Thanks!&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;-------------------------------------------------------------------------------------------&#xD;&#xA;**EDIT: solution to problem -** &#xD;&#xA;Used a global variable instead of a property - &#xD;&#xA;&#xD;&#xA;    @implementation&#xD;&#xA;    NSInteger input;&#xD;&#xA;    ....&#xD;&#xA;    [self doThis:&input]; //sends in the address of the input&#xD;&#xA;    ....&#xD;&#xA;    - (void)doThis:(NSInteger *)integer{ //takes the pointer of the input instead of its actual value so it gets referenced rather than getting copied&#xD;&#xA;        [API doSomethingWithThisInteger:integer success:^(NSMutableDictionary *data){&#xD;&#xA;        ...&#xD;&#xA;    } failure:^(NSString *error){&#xD;&#xA;        *integer = *integer - 1; //dereference the pointer to get the value.&#xD;&#xA;    }&#xD;&#xA;";;code error
