Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
10957827;5144896;396680;2;f58649b2-5f96-4e6c-95e0-d2bb5401f3f7;2011-02-28 16:48:58.0;"Let's say I have a super-class that defines the following abstract method&#xD;&#xA;    public abstract <T extends Interface> Class<T> getMainClass();&#xD;&#xA;&#xD;&#xA;Now if I want to override it in some sub-class&#xD;&#xA;    public Class<Implementation> getMainClass(){&#xD;&#xA;		return Implementation.class;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;I get a warning about type safety and unchecked conversion:&#xD;&#xA;>Type safety: The return type Class<Implementation> for getMainClass() from the type SubFoo needs unchecked conversion to conform to Class<Interface> from the type SuperFoo&#xD;&#xA;&#xD;&#xA;Doesn't Class<Implementation> fall under Class<T> if <T extends Interface>? Is there any way to properly get rid of the warning?&#xD;&#xA;&#xD;&#xA;";;
10957879;5144896;203907;5;649ec3a8-1be5-4737-84ca-df23b4ee75b2;2011-02-28 16:50:30.0;"Let's say I have a super-class that defines the following abstract method&#xD;&#xA;&#xD;&#xA;    public abstract <T extends Interface> Class<T> getMainClass();&#xD;&#xA;&#xD;&#xA;Now if I want to override it in some sub-class&#xD;&#xA;&#xD;&#xA;    public Class<Implementation> getMainClass(){&#xD;&#xA;		return Implementation.class;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;I get a warning about type safety and unchecked conversion:&#xD;&#xA;>Type safety: The return type Class<Implementation> for getMainClass() from the type SubFoo needs unchecked conversion to conform to Class<Interface> from the type SuperFoo&#xD;&#xA;&#xD;&#xA;Doesn't Class<Implementation> fall under Class<T> if <T extends Interface>? Is there any way to properly get rid of the warning?&#xD;&#xA;&#xD;&#xA;";;added 4 characters in body
10957934;5144896;396680;5;9441ab5d-23ff-4d5b-b758-78ed578b7b58;2011-02-28 16:52:37.0;"Let's say I have a super-class that defines the following abstract method&#xD;&#xA;&#xD;&#xA;    public abstract <T extends Interface> Class<T> getMainClass();&#xD;&#xA;&#xD;&#xA;Now if I want to override it in some sub-class&#xD;&#xA;&#xD;&#xA;    public Class<Implementation> getMainClass(){&#xD;&#xA;		return Implementation.class;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;I get a warning about type safety and unchecked conversion:&#xD;&#xA;>Type safety: The return type Class&lt;Implementation&gt; for getMainClass() from the type SubFoo needs unchecked conversion to conform to Class&lt;Interface&gt; from the type SuperFoo&#xD;&#xA;&#xD;&#xA;Doesn't Class&lt;Implementation&gt; fall under Class&lt;T&gt; if &lt;T extends Interface&gt;? Is there any way to properly get rid of the warning?&#xD;&#xA;&#xD;&#xA;";;"added 24 characters in body; added 6 characters in body"
10957937;5144896;40342;5;92e7f8bd-539a-4f80-85d5-4c0a5cbffc2f;2011-02-28 16:53:03.0;"Let's say I have a super-class that defines the following abstract method&#xD;&#xA;&#xD;&#xA;    public abstract <T extends Interface> Class<T> getMainClass();&#xD;&#xA;&#xD;&#xA;Now if I want to override it in some sub-class&#xD;&#xA;&#xD;&#xA;    public Class<Implementation> getMainClass(){&#xD;&#xA;		return Implementation.class;&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;I get a warning about type safety and unchecked conversion:&#xD;&#xA;>Type safety: The return type `Class<Implementation>` for `getMainClass()` from the type `SubFoo` needs unchecked conversion to conform to `Class<Interface>` from the type `SuperFoo`&#xD;&#xA;&#xD;&#xA;Doesn't `Class<Implementation>` fall under `Class<T>` if `<T extends Interface>`? Is there any way to properly get rid of the warning?&#xD;&#xA;&#xD;&#xA;";;fix formatting to show generic type information
