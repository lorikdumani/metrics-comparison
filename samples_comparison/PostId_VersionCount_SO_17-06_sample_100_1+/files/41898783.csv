Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
137002356;41898783;2663863;2;6ad5c1e6-df68-4033-9cc2-0d2d4d4eae93;2017-01-27 16:38:02.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect2 two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The UNION construct is another way of getting data from two seperate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too.";;
137002903;41898783;2663863;5;6ff7a2e1-c86d-4609-8ebd-aa889d08c555;2017-01-27 16:45:38.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;The UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;";;added 379 characters in body
137003755;41898783;2663863;5;bd4d3d1a-9234-4e32-8148-3da291ed8672;2017-01-27 16:56:19.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;You can execute it to try it out in SqlServer Management Studio by using `New Query`, then try pasting it into a TAdoQuery in a Delphi project.&#xD;&#xA;&#xD;&#xA;The UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;";;added 147 characters in body
137008751;41898783;2663863;5;a3f0ff67-99bf-4126-9b8a-de5b442c58d4;2017-01-27 18:11:49.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;You can execute it to try it out in SqlServer Management Studio by using `New Query`, then try pasting it into a TAdoQuery in a Delphi project.&#xD;&#xA;&#xD;&#xA;A good way to visualise the result of a JOIN is to use a TBGrid.  However, a JOIN is not always a good thing to use if you are wanting to edit the contents of one or more of its tables.  For example, a business task might be to edit details of an author's books.  To do that, a more convenient was than a JOIN might be to connect the Authors and Titles tables in your app, using AdoQuerys, by setting up a so-called Master-Detail relationship between them.  There are various ways to do that and maybe you best bet would be to google a Delphi tutorial about how to set up and use them.&#xD;&#xA;&#xD;&#xA;In SQL, the UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;";;added 597 characters in body
137039616;41898783;2663863;5;c67142b3-fa1b-4ab4-9012-78473fe96a9f;2017-01-28 09:02:47.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;You can execute it to try it out in SqlServer Management Studio by using `New Query`, then try pasting it into a TAdoQuery in a Delphi project.&#xD;&#xA;&#xD;&#xA;A good way to visualise the result of a JOIN is to use a TBGrid.  However, a JOIN is not always a good thing to use if you are wanting to edit the contents of one or more of its tables.  For example, a business task might be to edit details of an author's books.  To do that, a more convenient was than a JOIN might be to connect the Authors and Titles tables in your app, using AdoQuerys, by setting up a so-called Master-Detail relationship between them.  There are various ways to do that and maybe you best bet would be to google a Delphi tutorial about how to set up and use them.&#xD;&#xA;&#xD;&#xA;In SQL, the UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;&#xD;&#xA;**Update**  You've said in comments that you want to get data from two servers&#xD;&#xA;to end up in one dataset without using Sql Server's ""linked servers"" method.&#xD;&#xA;&#xD;&#xA;To do this is quite straightforward: it takes a bit of setting up but the merging&#xD;&#xA;of the data can be done in two lines of code.  Here's how:&#xD;&#xA;&#xD;&#xA;1.  For each server, place the following on your form/datamodule:  An AdoConnection,&#xD;&#xA;AdoQuery, DataSetProvider and ClientDataSet. Configure the AdoConnection to connect to&#xD;&#xA;one of the servers, set the AdoQuery to use the AdoConnection, and set the DataSet property&#xD;&#xA;of the DataSetProvider to the AdoQuery.  Set the ProviderName property of the&#xD;&#xA;ClientDataSet to the DataSetProvider.  Add a DataSource and set its DataSet property to&#xD;&#xA;the ClientDataSet and a DBGrid connected to the DataSource.  Give these component's&#xD;&#xA;names A and B suffixes.&#xD;&#xA;&#xD;&#xA;  Using the Pubs database example, set the AdoQuery's SQL.Text property to&#xD;&#xA;&#xD;&#xA;      select&#xD;&#xA;        [Source] = 'ServerA',  -- and ServerB for the other one of course&#xD;&#xA;        *&#xD;&#xA;      from&#xD;&#xA;        authors&#xD;&#xA;&#xD;&#xA;2.  Check that both sets of components are working by setting the two CDS's Active&#xD;&#xA;property to True.  In the Form's FormCreate event, add code to open both CDSs.&#xD;&#xA;&#xD;&#xA;3.  Add a third ClientDataSet, 'cdsMergedData' to the form and give it its own&#xD;&#xA;DataSource and DBGrid.   Set cdsMergedData's IndexFieldNames to 'au_lname;au_fname'.&#xD;&#xA;&#xD;&#xA;4.  Put a TButton 'btnMerge' on the form and add the following code to its OnClick&#xD;&#xA;event&#xD;&#xA;&#xD;&#xA;    cdsMergedData.Data := cdsServerA.Data;&#xD;&#xA;    cdsMergedData.AppendData(cdsServerB.Data, True);&#xD;&#xA;&#xD;&#xA;and that's it.  The `True` argument to `AppendData` tells `cdsMergedData` that&#xD;&#xA;there is no more data to load.  If you wanted to add data from a third server,&#xD;&#xA;you would set it to `False` for `cdsServerB` and `True` for `cdsServerC`.&#xD;&#xA;&#xD;&#xA;There is no code-free way of feeding data changes made in `cdsMergedData` back to&#xD;&#xA;the source server.  You would need to copy the changes to the counterpart row&#xD;&#xA;in the relevant `cdsServer` CDS, and then call `ApplyUpdates` on it.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 2049 characters in body
137039816;41898783;2663863;5;88f88afc-508e-4f2b-ab8c-f682baf239db;2017-01-28 09:07:55.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:http://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;You can execute it to try it out in SqlServer Management Studio by using `New Query`, then try pasting it into a TAdoQuery in a Delphi project.&#xD;&#xA;&#xD;&#xA;A good way to visualise the result of a JOIN is to use a TBGrid.  However, a JOIN is not always a good thing to use if you are wanting to edit the contents of one or more of its tables.  For example, a business task might be to edit details of an author's books.  To do that, a more convenient was than a JOIN might be to connect the Authors and Titles tables in your app, using AdoQuerys, by setting up a so-called Master-Detail relationship between them.  There are various ways to do that and maybe you best bet would be to google a Delphi tutorial about how to set up and use them.&#xD;&#xA;&#xD;&#xA;In SQL, the UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;&#xD;&#xA;**Update**  You've said in comments that you want to get data from two servers&#xD;&#xA;to end up in one dataset without using Sql Server's ""linked servers"" method.&#xD;&#xA;&#xD;&#xA;To do this is quite straightforward: it takes a bit of setting up but the merging&#xD;&#xA;of the data can be done in two lines of code.  Here's how:&#xD;&#xA;&#xD;&#xA;1.  For each server, place the following on your form/datamodule:  An AdoConnection,&#xD;&#xA;AdoQuery, DataSetProvider and ClientDataSet. Configure the AdoConnection to connect to&#xD;&#xA;one of the servers, set the AdoQuery to use the AdoConnection, and set the DataSet property&#xD;&#xA;of the DataSetProvider to the AdoQuery.  Set the ProviderName property of the&#xD;&#xA;ClientDataSet to the DataSetProvider.  Add a DataSource and set its DataSet property to&#xD;&#xA;the ClientDataSet and a DBGrid connected to the DataSource.  Give these component's&#xD;&#xA;names A and B suffixes.&#xD;&#xA;&#xD;&#xA;Using the Pubs database example, set the AdoQuery's SQL.Text property to&#xD;&#xA;&#xD;&#xA;      select&#xD;&#xA;        [Source] = 'ServerA',  -- and ServerB for the other one of course&#xD;&#xA;        *&#xD;&#xA;      from&#xD;&#xA;        authors&#xD;&#xA;&#xD;&#xA;2.  Check that both sets of components are working by setting the two CDS's Active&#xD;&#xA;property to True.  In the Form's FormCreate event, add code to open both CDSs.&#xD;&#xA;&#xD;&#xA;3.  Add a third ClientDataSet, 'cdsMergedData' to the form and give it its own&#xD;&#xA;DataSource and DBGrid.   Set cdsMergedData's IndexFieldNames to 'au_lname;au_fname'.&#xD;&#xA;&#xD;&#xA;4.  Put a TButton 'btnMerge' on the form and add the following code to its OnClick&#xD;&#xA;event&#xD;&#xA;:&#xD;&#xA;&#xD;&#xA;    cdsMergedData.Data := cdsServerA.Data;&#xD;&#xA;    &#xD;&#xA;    cdsMergedData.AppendData(cdsServerB.Data, True);&#xD;&#xA;&#xD;&#xA;and that's it.  The `True` argument to `AppendData` tells `cdsMergedData` that&#xD;&#xA;there is no more data to load.  If you wanted to add data from a third server,&#xD;&#xA;you would set it to `False` for `cdsServerB` and `True` for `cdsServerC`.&#xD;&#xA;&#xD;&#xA;There is no code-free way of feeding data changes made in `cdsMergedData` back to&#xD;&#xA;the source server.  You would need to copy the changes to the counterpart row&#xD;&#xA;in the relevant `cdsServer` CDS, and then call `ApplyUpdates` on it.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 2049 characters in body
146825101;41898783;-1;5;6b133826-bb0e-4a35-8172-0e2024519e6b;2017-05-23 12:01:31.0;"Using Sql Server you can construct a SQL query in its TransactSQL which uses the JOIN construct to ""connect"" two tables together.  See for example this previous answer:https://stackoverflow.com/questions/8758223/sql-server-multiple-table-joins-with-a-where-clause.&#xD;&#xA;&#xD;&#xA;You should take a look at the TransactSQL documentation on MSDN, e.g.&#xD;&#xA;&#xD;&#xA;https://msdn.microsoft.com/en-us/library/zt8wzxy4.aspx.&#xD;&#xA;&#xD;&#xA;The following is an example to retrieve authors and their titles from the&#xD;&#xA;demo Pubs database for Sql Server:&#xD;&#xA;&#xD;&#xA;    use pubs&#xD;&#xA;    select&#xD;&#xA;      a.au_id, &#xD;&#xA;      a.au_fname,&#xD;&#xA;      a.au_lname,&#xD;&#xA;      t.title&#xD;&#xA;    from&#xD;&#xA;      authors a&#xD;&#xA;      join titleauthor x on a.au_id = x.au_id&#xD;&#xA;      join titles t on x.title_id = t.title_id&#xD;&#xA;    order by&#xD;&#xA;      a.au_lname, a.au_fname&#xD;&#xA;&#xD;&#xA;You can execute it to try it out in SqlServer Management Studio by using `New Query`, then try pasting it into a TAdoQuery in a Delphi project.&#xD;&#xA;&#xD;&#xA;A good way to visualise the result of a JOIN is to use a TBGrid.  However, a JOIN is not always a good thing to use if you are wanting to edit the contents of one or more of its tables.  For example, a business task might be to edit details of an author's books.  To do that, a more convenient was than a JOIN might be to connect the Authors and Titles tables in your app, using AdoQuerys, by setting up a so-called Master-Detail relationship between them.  There are various ways to do that and maybe you best bet would be to google a Delphi tutorial about how to set up and use them.&#xD;&#xA;&#xD;&#xA;In SQL, the UNION construct is another way of getting data from two separate tables.&#xD;&#xA;&#xD;&#xA;Btw Ado components, e.g. TAdoQuery, will work fine for what you want to do.  If you have a version of Delphi, you could try that, too, but it's maybe a bit more daunting if you've no done this type of thing before.&#xD;&#xA;&#xD;&#xA;**Update**  You've said in comments that you want to get data from two servers&#xD;&#xA;to end up in one dataset without using Sql Server's ""linked servers"" method.&#xD;&#xA;&#xD;&#xA;To do this is quite straightforward: it takes a bit of setting up but the merging&#xD;&#xA;of the data can be done in two lines of code.  Here's how:&#xD;&#xA;&#xD;&#xA;1.  For each server, place the following on your form/datamodule:  An AdoConnection,&#xD;&#xA;AdoQuery, DataSetProvider and ClientDataSet. Configure the AdoConnection to connect to&#xD;&#xA;one of the servers, set the AdoQuery to use the AdoConnection, and set the DataSet property&#xD;&#xA;of the DataSetProvider to the AdoQuery.  Set the ProviderName property of the&#xD;&#xA;ClientDataSet to the DataSetProvider.  Add a DataSource and set its DataSet property to&#xD;&#xA;the ClientDataSet and a DBGrid connected to the DataSource.  Give these component's&#xD;&#xA;names A and B suffixes.&#xD;&#xA;&#xD;&#xA;Using the Pubs database example, set the AdoQuery's SQL.Text property to&#xD;&#xA;&#xD;&#xA;      select&#xD;&#xA;        [Source] = 'ServerA',  -- and ServerB for the other one of course&#xD;&#xA;        *&#xD;&#xA;      from&#xD;&#xA;        authors&#xD;&#xA;&#xD;&#xA;2.  Check that both sets of components are working by setting the two CDS's Active&#xD;&#xA;property to True.  In the Form's FormCreate event, add code to open both CDSs.&#xD;&#xA;&#xD;&#xA;3.  Add a third ClientDataSet, 'cdsMergedData' to the form and give it its own&#xD;&#xA;DataSource and DBGrid.   Set cdsMergedData's IndexFieldNames to 'au_lname;au_fname'.&#xD;&#xA;&#xD;&#xA;4.  Put a TButton 'btnMerge' on the form and add the following code to its OnClick&#xD;&#xA;event&#xD;&#xA;:&#xD;&#xA;&#xD;&#xA;    cdsMergedData.Data := cdsServerA.Data;&#xD;&#xA;    &#xD;&#xA;    cdsMergedData.AppendData(cdsServerB.Data, True);&#xD;&#xA;&#xD;&#xA;and that's it.  The `True` argument to `AppendData` tells `cdsMergedData` that&#xD;&#xA;there is no more data to load.  If you wanted to add data from a third server,&#xD;&#xA;you would set it to `False` for `cdsServerB` and `True` for `cdsServerC`.&#xD;&#xA;&#xD;&#xA;There is no code-free way of feeding data changes made in `cdsMergedData` back to&#xD;&#xA;the source server.  You would need to copy the changes to the counterpart row&#xD;&#xA;in the relevant `cdsServer` CDS, and then call `ApplyUpdates` on it.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
