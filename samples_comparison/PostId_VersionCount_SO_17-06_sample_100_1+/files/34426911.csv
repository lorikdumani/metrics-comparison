Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
106990891;34426911;5709180;2;ee8bc808-8e41-47d3-826e-28dd8578177a;2015-12-23 00:47:07.0;"I know basics to java programming but I'm new to reverse engineering APKS, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have it below (skipped some lines which were too long):&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if need to see the rest of the file)";;
106991348;34426911;5709180;5;f7207512-d79d-4f29-8626-82a9c1265b11;2015-12-23 01:04:37.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have it below (skipped some lines which were too long):&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)";;added 9 characters in body
106993972;34426911;5709180;5;1a099018-44a1-4a06-87b5-6f486ea511c4;2015-12-23 02:27:56.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have it below (skipped some lines which were too long):&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)&#xD;&#xA;&#xD;&#xA;--------&#xD;&#xA;&#xD;&#xA;Another note: I cannot run the app on my device due to limitations set within the APK. It would say ""The application has stopped.""";;added 146 characters in body
106994508;34426911;5709180;5;ff68f241-cc86-4920-82df-fd2bbde77142;2015-12-23 02:46:54.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have it below (skipped some lines which were too long):&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)&#xD;&#xA;&#xD;&#xA;--------&#xD;&#xA;&#xD;&#xA;Another note: I cannot run the app on my device due to limitations set within the APK. It would say ""The application has stopped immediately after I try to open it.""";;added 35 characters in body
106998060;34426911;5709180;5;0a41b882-8bf4-4788-9bd1-fd8227d9ae9d;2015-12-23 04:33:13.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have ProtectedUtils.java below (skipped some lines which were too long):&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)&#xD;&#xA;&#xD;&#xA;--------&#xD;&#xA;&#xD;&#xA;Another note: I cannot run the app on my device due to limitations set within the APK. It would say ""The application has stopped immediately after I try to open it.""";;for clarity
107034459;34426911;5709180;5;73e28e4e-295a-4b07-9449-6a7d4065cd6e;2015-12-23 14:47:03.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have ProtectedUtils.java below: <a href=""https://www.mediafire.com/?ixy5227hwfpehhy"">Link to full file if anyone is interested</a>&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)&#xD;&#xA;&#xD;&#xA;--------&#xD;&#xA;&#xD;&#xA;Another note: I cannot run the app on my device due to limitations set within the APK. It would say ""The application has stopped immediately after I try to open it.""&#xD;&#xA;&#xD;&#xA;";;Added link to full file
107043031;34426911;5709180;5;16ed98fe-4bf2-4f70-bb27-e3ff6a37f03b;2015-12-23 16:54:34.0;"I know the basics to java programming, but I'm new to reverse engineering APKs, so explanations would be nice!&#xD;&#xA;&#xD;&#xA;------------&#xD;&#xA;I have an APK file file, but not the Java source. After decompiling the APK online:&#xD;&#xA;&#xD;&#xA;the bulk of the application is hidden under&#xD;&#xA;&#xD;&#xA;> assets > classes.dex.dat &#xD;&#xA;&#xD;&#xA;the only java file I found is&#xD;&#xA;&#xD;&#xA;> com > ... > util > ProtectedUtils.java&#xD;&#xA;&#xD;&#xA;I have ProtectedUtils.java below: <a href=""https://www.mediafire.com/?ixy5227hwfpehhy"">Link to full file if anyone is interested</a>&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;       import android.app.Application;&#xD;&#xA;        import android.app.Instrumentation;&#xD;&#xA;        import android.content.Context;&#xD;&#xA;        import android.os.Build.VERSION;&#xD;&#xA;        import java.lang.reflect.Constructor;&#xD;&#xA;        import java.lang.reflect.Field;&#xD;&#xA;        import java.lang.reflect.Method;&#xD;&#xA;        import java.util.List;&#xD;&#xA;        &#xD;&#xA;        public class ProtectedApplicationUtils extends Application {&#xD;&#xA;            private static Application f0d;&#xD;&#xA;            private static boolean f1d;&#xD;&#xA;            private static transient Object[] f2d;&#xD;&#xA;            private static Application dd;&#xD;&#xA;            private static boolean gfgf;&#xD;&#xA;        &#xD;&#xA;            public ProtectedApplicationUtils() {&#xD;&#xA;                dd = this;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int attachBaseContext(int i, int i2) {&#xD;&#xA;                int i3 = (i2 + i) >> 24;&#xD;&#xA;                return (i >>> i2) | (i << (-i2));&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            public static Context attachBaseContext(Context context) {&#xD;&#xA;                attachBaseContext();&#xD;&#xA;                return context == dd ? f0d : context;&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static void attachBaseContext() {&#xD;&#xA;                if (!f1d) {&#xD;&#xA;                    f1d = true;&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u50b3\\uc849\\ue145\\ud010\\udf4f\\u45e5\\u6b13\\u36e0\\u0e7b\\ucae7\\u774e\\uc2b0\\ub84a\\udeeb\\u9071\\u3fd2\\u3dd6\\u3676\\u95ca\\u031b\\udc13\\ufaca\\u3bf1\\u0935\\u75af\\ud3d6""));&#xD;&#xA;                    Class[] clsArr = new Class[0];&#xD;&#xA;                    Object invoke = cls.getMethod(m1d(""\\u50b1\\uc852\\ue153\\ud010\\udf45\\u45e2\\u6b03\\u368f\\u0e79\\ucae3\\u7757\\uc2e8\\ub862\\udefc\\u907c\\u3fef\\u3dc8\\u366d\\u95db\\u0303\\udc23""), clsArr).invoke(null, new Object[0]);&#xD;&#xA;                    Field declaredField = cls.getDeclaredField(m1d(""\\u50bf\\uc866\\ue14d\\ud00e\\udf61\\u45fc\\u6b07\\u36a2\\u0e73\\ucaf4\\u775f\\uc2ea\\ub862\\udee7\\u906b\\u3fc8""));&#xD;&#xA;                    declaredField.setAccessible(true);&#xD;&#xA;                    ((List) declaredField.get(invoke)).add(0, f0d);&#xD;&#xA;                    Field declaredField2 = cls.getDeclaredField(m1d(""\\u50bf\\uc86e\\ue14f\\ud00b\\udf54\\u45e5\\u6b16\\u36a2\\u0e5b\\ucae7\\u774e\\uc2f2\\ub862\\udeeb\\u9064\\u3fcf\\u3dc9\\u3670\\u95d0""));&#xD;&#xA;                    declaredField2.setAccessible(true);&#xD;&#xA;                    declaredField2.set(invoke, f0d);&#xD;&#xA;                    Field declaredField3 = cls.getDeclaredField(m1d(""\\u50bf\\uc865\\ue14e\\ud017\\udf4e\\u45e8\\u6b36\\u36be\\u0e6a\\ucafb\\u7757\\uc2fd\\ub86a\\udefc\\u906c\\u3fd4\\u3dce""));&#xD;&#xA;                    declaredField3.setAccessible(true);&#xD;&#xA;                    Object obj = declaredField3.get(invoke);&#xD;&#xA;                    Field declaredField4 = obj.getClass().getDeclaredField(m1d(""\\u50bb\\uc849\\ue147\\ud00d""));&#xD;&#xA;                    declaredField4.setAccessible(true);&#xD;&#xA;                    Object obj2 = declaredField4.get(obj);&#xD;&#xA;                    Field declaredField5 = obj2.getClass().getDeclaredField(m1d(""\\u50bf\\uc866\\ue151\\ud012\\udf4c\\u45e5\\u6b14\\u36af\\u0e6e\\ucafe\\u7751\\uc2f0""));&#xD;&#xA;                    declaredField5.setAccessible(true);&#xD;&#xA;                    declaredField5.set(obj2, f0d);&#xD;&#xA;                    Context baseContext = f0d.getBaseContext();&#xD;&#xA;                    Field declaredField6 = baseContext.getClass().getDeclaredField(m1d(""\\u50bf\\uc868\\ue154\\ud016\\udf45\\u45fe\\u6b34\\u36a1\\u0e74\\ucae3\\u775b\\uc2e6\\ub87f""));&#xD;&#xA;                    declaredField6.setAccessible(true);&#xD;&#xA;                    declaredField6.set(baseContext, f0d);&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;        &#xD;&#xA;            private static final int m0d(byte[] bArr, int i) {&#xD;&#xA;                Object obj = null;&#xD;&#xA;                int i2 = bArr[14] << 16;&#xD;&#xA;                Object obj2 = null;&#xD;&#xA;                while (obj2 == null) {&#xD;&#xA;                    obj2 = 3;&#xD;&#xA;                    try {&#xD;&#xA;                        return (bArr[(i >> 24) & 255] << 24) | (((bArr[i & 255] & 255) | ((bArr[(i >> 8) & 255] & 255) << 8)) | ((bArr[(i >> 16) & 255] & 255) << 16));&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                while (obj == null) {&#xD;&#xA;                    obj = 2;&#xD;&#xA;                    try {&#xD;&#xA;                        return bArr[i & 127] >> 8;&#xD;&#xA;                    } catch (Exception e2) {&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;                return i2;&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;    static final String m1d(String str) {&#xD;&#xA;            if (f2d == null) {&#xD;&#xA;                mark();&#xD;&#xA;            }&#xD;&#xA;            Object[] objArr = (Object[]) ((Method) f2d[8]).invoke(((Method) f2d[7]).invoke(null, null), null);&#xD;&#xA;            StringBuilder stringBuilder = new StringBuilder();&#xD;&#xA;            stringBuilder.append(((Method) f2d[10]).invoke(objArr[((Integer) f2d[12]).intValue()], null));&#xD;&#xA;            int hashCode = stringBuilder.append(((Method) f2d[11]).invoke(objArr[((Integer) f2d[12]).intValue()], null)).toString().hashCode();&#xD;&#xA;            int[] iArr = (int[]) f2d[6];&#xD;&#xA;            int i = hashCode ^ iArr[0];&#xD;&#xA;            int i2 = hashCode ^ iArr[1];&#xD;&#xA;            int i3 = hashCode ^ iArr[2];&#xD;&#xA;            int i4 = hashCode ^ iArr[3];&#xD;&#xA;            iArr = (int[]) f2d[5];&#xD;&#xA;            int[] iArr2 = (int[]) f2d[1];&#xD;&#xA;            int[] iArr3 = (int[]) f2d[2];&#xD;&#xA;            int[] iArr4 = (int[]) f2d[3];&#xD;&#xA;            int[] iArr5 = (int[]) f2d[4];&#xD;&#xA;            byte[] bArr = (byte[]) f2d[0];&#xD;&#xA;            char[] cArr = (char[]) ((Method) f2d[9]).invoke(str, null);&#xD;&#xA;            int i5 = i3;&#xD;&#xA;            i3 = i2;&#xD;&#xA;            i2 = i;&#xD;&#xA;            i = i4;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                try {&#xD;&#xA;                    int length = cArr.length;&#xD;&#xA;                    for (int i6 = 0; i6 < length; i6++) {&#xD;&#xA;                        if (i6 % 8 == 0) {&#xD;&#xA;                            int i7;&#xD;&#xA;                            int i8;&#xD;&#xA;                            int i9;&#xD;&#xA;                            int i10 = i2 ^ iArr[0];&#xD;&#xA;                            int i11 = i3 ^ iArr[1];&#xD;&#xA;                            int i12 = i5 ^ iArr[2];&#xD;&#xA;                            i4 = iArr[3] ^ i;&#xD;&#xA;                            int i13 = 4;&#xD;&#xA;                            while (i13 < 36) {&#xD;&#xA;                                i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                                i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                                i10 = (((iArr2[i7 & 255] ^ iArr3[(i8 >> 8) & 255]) ^ iArr4[(i9 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                                i11 = iArr[i13 + 1] ^ (((iArr2[i8 & 255] ^ iArr3[(i9 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i7 >>> 24]);&#xD;&#xA;                                i12 = (((iArr2[i9 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i7 >> 16) & 255]) ^ iArr5[i8 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                                i4 = (((iArr2[i4 & 255] ^ iArr3[(i7 >> 8) & 255]) ^ iArr4[(i8 >> 16) & 255]) ^ iArr5[i9 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                                i13 += 4;&#xD;&#xA;                            }&#xD;&#xA;                            i7 = (((iArr2[i10 & 255] ^ iArr3[(i11 >> 8) & 255]) ^ iArr4[(i12 >> 16) & 255]) ^ iArr5[i4 >>> 24]) ^ iArr[i13];&#xD;&#xA;                            i8 = (((iArr2[i11 & 255] ^ iArr3[(i12 >> 8) & 255]) ^ iArr4[(i4 >> 16) & 255]) ^ iArr5[i10 >>> 24]) ^ iArr[i13 + 1];&#xD;&#xA;                            i9 = (((iArr2[i12 & 255] ^ iArr3[(i4 >> 8) & 255]) ^ iArr4[(i10 >> 16) & 255]) ^ iArr5[i11 >>> 24]) ^ iArr[i13 + 2];&#xD;&#xA;                            i4 = (((iArr2[i4 & 255] ^ iArr3[(i10 >> 8) & 255]) ^ iArr4[(i11 >> 16) & 255]) ^ iArr5[i12 >>> 24]) ^ iArr[i13 + 3];&#xD;&#xA;                            i12 = i13 + 4;&#xD;&#xA;                            i2 = iArr[i12 + 0] ^ ((((bArr[i7 & 255] & 255) ^ ((bArr[(i8 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i9 >> 16) & 255] & 255) << 16)) ^ (bArr[i4 >>> 24] << 24));&#xD;&#xA;                            i3 = iArr[i12 + 1] ^ ((((bArr[i8 & 255] & 255) ^ ((bArr[(i9 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i4 >> 16) & 255] & 255) << 16)) ^ (bArr[i7 >>> 24] << 24));&#xD;&#xA;                            i5 = iArr[i12 + 2] ^ ((((bArr[i9 & 255] & 255) ^ ((bArr[(i4 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i7 >> 16) & 255] & 255) << 16)) ^ (bArr[i8 >>> 24] << 24));&#xD;&#xA;                            i = iArr[i12 + 3] ^ ((((bArr[i4 & 255] & 255) ^ ((bArr[(i7 >> 8) & 255] & 255) << 8)) ^ ((bArr[(i8 >> 16) & 255] & 255) << 16)) ^ (bArr[i9 >>> 24] << 24));&#xD;&#xA;                        }&#xD;&#xA;                        obj = null;&#xD;&#xA;                        while (obj == null) {&#xD;&#xA;                            obj = 3;&#xD;&#xA;                            try {&#xD;&#xA;                                switch (i6 % 8) {&#xD;&#xA;                                    case 0:&#xD;&#xA;                                        cArr[i6] = (char) ((i2 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 1:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i2);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 2:&#xD;&#xA;                                        cArr[i6] = (char) ((i3 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 3:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i3);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 4:&#xD;&#xA;                                        cArr[i6] = (char) ((i5 >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 5:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i5);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 6:&#xD;&#xA;                                        cArr[i6] = (char) ((i >> 16) ^ cArr[i6]);&#xD;&#xA;                                        break;&#xD;&#xA;                                    case 7:&#xD;&#xA;                                        cArr[i6] = (char) (cArr[i6] ^ i);&#xD;&#xA;                                        break;&#xD;&#xA;                                    default:&#xD;&#xA;                                        break;&#xD;&#xA;                                }&#xD;&#xA;                            } catch (Throwable th) {&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    return new String(cArr);&#xD;&#xA;                } catch (Throwable th2) {&#xD;&#xA;                    i4 = 1;&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            return new String(cArr);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;         private void eee() {&#xD;&#xA;                if (!gfgf) {&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        ...&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;         byte[] bArr = new byte[length];&#xD;&#xA;                    int i = 0;&#xD;&#xA;                    for (int i2 = 1; i2 < toCharArray.length; i2++) {&#xD;&#xA;                        char c = toCharArray[i2];&#xD;&#xA;                        int i3 = i + 1;&#xD;&#xA;                        bArr[i] = (byte) (c >> 8);&#xD;&#xA;                        i = i3 + 1;&#xD;&#xA;                        bArr[i3] = (byte) c;&#xD;&#xA;                    }&#xD;&#xA;                    length -= toCharArray[0];&#xD;&#xA;                    Class cls = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue12c\\u66ac\\uc08c\\u48ca\\u17b8\\ua701""));&#xD;&#xA;                    Class cls2 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd""));&#xD;&#xA;                    Constructor constructor = cls2.getConstructor(new Class[]{cls2, cls});&#xD;&#xA;                    Method method = Class.forName(m1d(""\\u6af7\\u53e5\\ue9f5\\u77c2\\ueebf\\uac94\\u513c\\ubcfd\\u7971\\uc61b\\ue111\\u66ac\\uc09b\\u48cd\\u17a2\\ua748\\u6dfc\\u8c7c\\ud17e\\u8ccc\\u9348\\ue1fb\\u6b56"")).getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f4\\ueeb9\\uac8f""), new Class[]{cls, Integer.TYPE});&#xD;&#xA;                    Object invoke = method.invoke(this, new Object[]{m1d(""\\u6af2\\u53ee\\ue9e9""), Integer.valueOf(0)});&#xD;&#xA;                    Object invoke2 = method.invoke(this, new Object[]{m1d(""\\u6af9\\u53fe\\ue9e5\\u77d4\\ueeb5\\uac85""), Integer.valueOf(0)});&#xD;&#xA;                    Object newInstance = constructor.newInstance(new Object[]{invoke, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueeb1\\uac8d\\u5133"")});&#xD;&#xA;                    Object newInstance2 = constructor.newInstance(new Object[]{invoke2, m1d(""\\u6af8\\u53ee\\ue9e6\\u779e\\ueebf\\uac99\\u513d\\ubcab"")});&#xD;&#xA;                    Class cls3 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac94\\u5137\\ubcfd\\u7954\\uc61d\\ue113\\u66bd\\uc0b1\\u48d6\\u17a2\\ua716\\u6dca\\u8c67\\ud143\\u8ccc\\u935f\\ue1e6\\u6b43\\u5edf""));&#xD;&#xA;                    Object newInstance3 = cls3.getConstructor(new Class[]{cls2}).newInstance(new Object[]{newInstance});&#xD;&#xA;                    try {&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6ae1\\u53f9\\ue9f8\\u77c4\\ueeb5""), new Class[]{byte[].class, Integer.TYPE, Integer.TYPE}).invoke(newInstance3, new Object[]{bArr, Integer.valueOf(0), Integer.valueOf(length)});&#xD;&#xA;                        Class[] clsArr = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr).invoke(newInstance3, new Object[0]);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method2 = cls2.getMethod(m1d(""\\u6af1\\u53ee\\ue9e5\\u77f3\\ueeb1\\uac93\\u5137\\ubcbd\\u797b\\uc617\\ue11e\\u66b4\\uc0ae\\u48c2\\u17a2\\ua70e""), clsArr);&#xD;&#xA;                        Class cls4 = Class.forName(m1d(""\\u6af2\\u53ea\\ue9fd\\u77c6\\ueeb9\\uac96\\u5176\\ubca0\\u796b\\uc607\\ue10b\\u66bd\\uc093\\u488d\\u1792\\ua703\\u6dc7\\u8c55\\ud179\\u8cd4\\u9348""));&#xD;&#xA;                        Method method3 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee94\\uac98\\u5120""), new Class[]{cls, cls, Integer.TYPE});&#xD;&#xA;                        Object[] objArr = new Object[3];&#xD;&#xA;                        objArr[0] = method2.invoke(newInstance, new Object[0]);&#xD;&#xA;                        objArr[1] = method2.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        objArr[2] = Integer.valueOf(0);&#xD;&#xA;                        Object invoke3 = method3.invoke(null, objArr);&#xD;&#xA;                        clsArr = new Class[0];&#xD;&#xA;                        Method method4 = cls2.getMethod(m1d(""\\u6af2\\u53ee\\ue9fd\\u77d5\\ueea4\\uac98""), clsArr);&#xD;&#xA;                        method4.invoke(newInstance, new Object[0]);&#xD;&#xA;                        method4.invoke(newInstance2, new Object[0]);&#xD;&#xA;                        Method method5 = cls4.getMethod(m1d(""\\u6afa\\u53e4\\ue9f0\\u77d4\\uee93\\uac91\\u5139\\ubca0\\u7961""), new Class[]{cls, Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue13c\\u66b4\\uc09f\\u48d0\\u17a5\\ua72a\\u6dd0\\u8c72\\ud174\\u8cdd\\u935f""))});&#xD;&#xA;                        Class cls5 = Class.forName(m1d(""\\u6afc\\u53ea\\ue9e7\\u77d1\\ueefe\\uac91\\u5139\\ubcbd\\u7975\\uc65a\\ue130\\u66ba\\uc094\\u48c6\\u17b5\\ua712""));&#xD;&#xA;                        ((Class) method5.invoke(invoke3, new Object[]{m1d(""\\u6af5\\u53e4\\ue9fc\\u779e\\ueeba\\uac88\\u512c\\ubcb6\\u7960\\uc615\\ue113\\u66b9\\uc09c\\u48d0\\u17f8\\ua716\\u6dda\\u8c61\\ud17b\\u8ccc\\u935b\\ue1ad\\u6b57\\u5ec6\\uac55\\u9c90\\u04b4\\u6b93\\u02ab\\uabec\\u14eb\\u3f1e\\u589d\\ue4b6\\ubf55\\u7b7b\\u67f0\\ud0e1\\u70f9\\u6f15\\u22d4\\u6219\\u6c03\\u20df\\ua4e9\\ub5ca\\ue4d1\\uee2a\\ubce9\\ua0fc\\u5d07\\u1579\\u6e23\\uf7c8\\u849d\\u10a5\\ucf27\\u8cbd\\ue95c\\u3482\\udec5\\ua61d\\u5956\\u6e32\\u7e60\\ua68a\\u87d6""), getClass().getClassLoader()})).getDeclaredMethod(m1d(""\\u6af3\\u53ee\\ue9f7\\u77d4""), new Class[]{cls5, cls5}).invoke(this, new Object[]{this, invoke3});&#xD;&#xA;                        gfgf = true;&#xD;&#xA;                    } catch (Throwable th) {&#xD;&#xA;                        Class[] clsArr2 = new Class[0];&#xD;&#xA;                        cls3.getMethod(m1d(""\\u6af5\\u53e7\\ue9fe\\u77c3\\ueeb5""), clsArr2).invoke(newInstance3, new Object[0]);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;    &#xD;&#xA;     private static final void mark() {&#xD;&#xA;            int i;&#xD;&#xA;            byte[] bArr;&#xD;&#xA;            byte[] bArr2;&#xD;&#xA;            byte[] bArr3;&#xD;&#xA;            int[] iArr;&#xD;&#xA;            int[] iArr2;&#xD;&#xA;            Object[] objArr;&#xD;&#xA;            char[] cArr;&#xD;&#xA;            String str;&#xD;&#xA;            int[] iArr3 = new int[256];&#xD;&#xA;            byte[] bArr4 = new byte[256];&#xD;&#xA;            int[] iArr4 = new int[256];&#xD;&#xA;            int[] iArr5 = new int[256];&#xD;&#xA;            int[] iArr6 = new int[256];&#xD;&#xA;            int[] iArr7 = new int[256];&#xD;&#xA;            int[] iArr8 = new int[30];&#xD;&#xA;            int i2 = 1;&#xD;&#xA;            for (i = 0; i < 256; i++) {&#xD;&#xA;                iArr3[i] = i2;&#xD;&#xA;                i2 ^= (i2 << 1) ^ ((i2 >>> 7) * 283);&#xD;&#xA;            }&#xD;&#xA;            bArr4[0] = (byte) 99;&#xD;&#xA;            Object obj = null;&#xD;&#xA;            while (obj == null) {&#xD;&#xA;                i2 = 0;&#xD;&#xA;                while (i2 < 255) {&#xD;&#xA;                    try {&#xD;&#xA;                        i = iArr3[255 - i2];&#xD;&#xA;                        i |= i << 8;&#xD;&#xA;                        bArr4[iArr3[i2]] = (byte) ((i ^ ((((i >> 4) ^ (i >> 5)) ^ (i >> 6)) ^ (i >> 7))) ^ 99);&#xD;&#xA;                        i2++;&#xD;&#xA;                    } catch (Exception e) {&#xD;&#xA;                        i2 = 2;&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;    &#xD;&#xA;    ...&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;            for (i2 = 0; i2 < cArr.length; i2++) {&#xD;&#xA;                cArr[i2] = (char) (cArr[i2] - bArr2[i2 % bArr2.length]);&#xD;&#xA;            }&#xD;&#xA;            objArr[7] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 16, 13), null);&#xD;&#xA;            objArr[8] = Class.forName(String.valueOf(cArr, 0, 16)).getMethod(String.valueOf(cArr, 29, 13), null);&#xD;&#xA;            objArr[9] = Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 58, 11), null);&#xD;&#xA;            objArr[10] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 96, 12), null);&#xD;&#xA;            objArr[11] = Class.forName(String.valueOf(cArr, 69, 27)).getMethod(String.valueOf(cArr, 108, 13), null);&#xD;&#xA;            str = (String) Class.forName(String.valueOf(cArr, 121, 27)).getMethod(String.valueOf(cArr, 148, 3), new Class[]{Class.forName(String.valueOf(cArr, 42, 16))}).invoke(null, new Object[]{String.valueOf(cArr, 151, 25)});&#xD;&#xA;            if (str != null) {&#xD;&#xA;                i2 = str.hashCode();&#xD;&#xA;                i2 = 4;&#xD;&#xA;                objArr[12] = Integer.valueOf(i2);&#xD;&#xA;                f2d = objArr;&#xD;&#xA;                i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;                iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;                iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;                iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;                iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;            }&#xD;&#xA;            i2 = 5;&#xD;&#xA;            objArr[12] = Integer.valueOf(i2);&#xD;&#xA;            f2d = objArr;&#xD;&#xA;            i2 = ((Integer) Class.forName(String.valueOf(cArr, 42, 16)).getMethod(String.valueOf(cArr, 214, 8), new Class[0]).invoke(Class.forName(String.valueOf(cArr, 176, 16)).getField(String.valueOf(cArr, 192, 6)).get(null), new Object[0])).intValue();&#xD;&#xA;            iArr2[0] = iArr2[0] ^ i2;&#xD;&#xA;            iArr2[1] = iArr2[1] ^ i2;&#xD;&#xA;            iArr2[2] = iArr2[2] ^ i2;&#xD;&#xA;            iArr2[3] = i2 ^ iArr2[3];&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;        protected void m2attachBaseContext(Context context) {&#xD;&#xA;            super.attachBaseContext(context);&#xD;&#xA;            eee();&#xD;&#xA;            f0d = Instrumentation.newApplication(Class.forName(m1d(""\\u50b1\\uc848\\ue14c\\ud04c\\udf4a\\u45f9\\u6b03\\u36ab\\u0e68\\ucaf6\\u7752\\uc2ff\\ub869\\udefb\\u902b\\u3fcb\\u3dc5\\u366d\\u95d5\\u0316\\udc31\\ufa8c\\u3bf6\\u0924\\u75a7\\ud3de\\u453b\\ub730\\u0b09\\uc6ea\\u8620\\u607e\\u1f4d\\u7ca3\\uc9e9\\uf8a9\\ucc9e\\u7f5a\\ued21\\u3a2a\\ub4e4\\u9bb3\\uf59c\\u075d"")), context);&#xD;&#xA;        }&#xD;&#xA;    &#xD;&#xA;        public void onCreate() {&#xD;&#xA;            super.onCreate();&#xD;&#xA;            attachBaseContext();&#xD;&#xA;            f0d.onCreate();&#xD;&#xA;        }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;I think it is using some kind of encryption as well as the Java.Reflection API. It would be great if you could explain what this file is doing.&#xD;&#xA;&#xD;&#xA;If I wanted to analyze how the application worked and then later modify its behavior, recompile, and run it, what is the best way to begin?&#xD;&#xA;&#xD;&#xA;Do I try to rebuild the decryption methods and try to decrypt all the strings and the dex?&#xD;&#xA;&#xD;&#xA;Are there any good tools to use?&#xD;&#xA;&#xD;&#xA;(Let me know if you need to see the rest of the file)&#xD;&#xA;&#xD;&#xA;--------&#xD;&#xA;&#xD;&#xA;Another note: I cannot run the app on my device due to limitations set within the APK. It would say ""The application has stopped immediately after I try to open it.""&#xD;&#xA;&#xD;&#xA;----&#xD;&#xA;Edit:&#xD;&#xA;&#xD;&#xA;I've been trying to test the individual methods:&#xD;&#xA;&#xD;&#xA;I pasted `mark()` and the methods/variables it depends on (eg. `m0d()`, `attachBaseContext()`, `f2d`, and `apkversion`) in a new java class.&#xD;&#xA;&#xD;&#xA;When I try to run it is stuck at ""running"" with the progress bar frozen at 0.&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 300 characters in body
