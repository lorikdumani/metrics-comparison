Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
7209838;3460514;380371;2;9be73146-cdb4-4b10-80b6-0132d5ed46af;2010-08-11 16:17:51.0;"I have a custom control called MyControl that derives from UserControl.  I have defined a default control template and style in Generic.xaml, and the style's resources include a resource dictionary MyDictionary.xaml.  Within MyDictionary.xaml I have a line similar to the following, where Scheme is a custom dependency property in MyControl.cs, the code file for my control.&#xD;&#xA;&#xD;&#xA;    <GradientStop Color=""{Binding Scheme, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"" Offset=""0""/>&#xD;&#xA;&#xD;&#xA;This line fails to fetch the dependency property, and I know this because the color defined by the default value of the dependency property does not show up in my gradient. I believe it has something to do with how I have written my source, because I don't understand sources that well.  I tried to change ""x:Type UserControl"" to ""x:Type MyControl"", but it tells me that the type 'MyControl' was not found.  What is the appropriate way to bind to a dependency property of a custom control from a resource dictionary that's not in Generic.xaml?  It's something simple, but I'm unable to think at the moment.&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;
7209930;3460514;380371;5;42677eb1-2f89-4078-8039-435bed1d4f01;2010-08-11 16:22:55.0;"I have a custom control called MyControl that derives from UserControl.  I have defined a default control template and style in Generic.xaml, and the style's resources include a resource dictionary MyDictionary.xaml.  Within MyDictionary.xaml I have a line similar to the following, where Scheme is a custom dependency property of MyControl.&#xD;&#xA;&#xD;&#xA;    <GradientStop Color=""{Binding Scheme, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"" Offset=""0""/>&#xD;&#xA;&#xD;&#xA;This line fails to fetch the dependency property, and I know this because the color defined by the default value of the dependency property does not show up in my gradient. I believe it has something to do with how I have written my source, because I don't understand sources that well.  I tried to change ""x:Type UserControl"" to ""x:Type MyControl"", but it tells me that the type 'MyControl' was not found.  What is the appropriate way to bind to a dependency property of a custom control from a resource dictionary?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;"edited title; deleted 27 characters in body; deleted 63 characters in body; deleted 33 characters in body"
7210052;3460514;380371;5;e37280e2-07b8-4cad-b75f-69b9df34a30c;2010-08-11 16:29:37.0;"I have a custom control called MyControl that derives from UserControl.  I have defined a default control template and style in Generic.xaml, and the style's resources include a resource dictionary MyDictionary.xaml.  Within MyDictionary.xaml I have a line similar to the following, where Scheme is a custom dependency property of MyControl.&#xD;&#xA;&#xD;&#xA;    <GradientStop Color=""{Binding Scheme, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"" Offset=""0""/>&#xD;&#xA;&#xD;&#xA;This line fails to fetch the dependency property, and I know this because the color defined by the default value of the dependency property does not show up in my gradient. I believe it has something to do with how I have written my source, because I don't understand binding too well.  I tried to change ""x:Type UserControl"" to ""x:Type MyControl"", but it tells me that the type 'MyControl' was not found.  What is the appropriate way to bind to a dependency property of a custom control from a resource dictionary?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;deleted 1 characters in body
7211142;3460514;380371;5;83c7cae5-e9bb-460d-a9f4-bece5f4a953b;2010-08-11 17:29:28.0;"I have a custom control called MyControl that derives from UserControl.  I have defined a default control template and style in Generic.xaml, and the style's resources include a resource dictionary MyDictionary.xaml.  Within MyDictionary.xaml I have a line similar to the following, where Scheme is a custom dependency property of MyControl.&#xD;&#xA;&#xD;&#xA;    <GradientStop Color=""{Binding Scheme, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"" Offset=""0""/>&#xD;&#xA;&#xD;&#xA;This line fails to fetch the dependency property, and I know this because the color defined by the default value of the dependency property does not show up in my gradient. I believe it has something to do with how I have written my source, because I don't understand binding too well.  I tried to change ""x:Type UserControl"" to ""x:Type MyControl"", but it tells me that the type 'MyControl' was not found.  What is the appropriate way to bind to a dependency property of a custom control from a resource dictionary?&#xD;&#xA;&#xD;&#xA;NOTE: I am trying to convert my UserControl to a custom control that is derived from UserControl.  They seem to be practically the same thing, but with the custom control, all my XAML is in Generic.xaml and MyDictionary.xaml.  The point is that in my UserControl, the binding to my GradientStop was WORKING perfectly.  &#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;added 323 characters in body
7215008;3460514;380371;5;9f6c56a7-d5a9-46c6-b81b-da2a9fb95906;2010-08-11 21:21:45.0;"EDIT: I made the question a lot simpler and more general&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary.  In this resource dictionary, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;"deleted 759 characters in body; edited title; deleted 5 characters in body; added 55 characters in body"
7215165;3460514;380371;5;78d42cfa-ceb2-41ca-80cd-52a5739e4c32;2010-08-11 21:33:34.0;"EDIT: I rephrased the entire question.&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary It's a resource dictionary within the outer dictionary, defined like so:&#xD;&#xA;&#xD;&#xA;    <ResourceDictionary&#xD;&#xA;    xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;    xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;    xmlns:local=""clr-namespace:MyNamespace"">&#xD;&#xA;    &#xD;&#xA;       <!-- This is the dictionary-->&#xD;&#xA;       <ResourceDictionary x:Name=""TheDictionaryImTalkingAbout"" . . . >&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       </ResourceDictionary>&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;&#xD;&#xA;    </ResourceDictionary>&#xD;&#xA;&#xD;&#xA;In this resource dictionary, TheDictionaryImTalkingAbout, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary that's within Generic.xaml?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;added 553 characters in body
7235493;3460514;380371;5;7e263372-f280-4758-9259-4f61621aa035;2010-08-12 21:13:20.0;"EDIT: I created a new project and replicated the problem as follows, you can download the test project here: http://www.megaupload.com/?d=J1GLXXHY&#xD;&#xA;&#xD;&#xA;<b> Window1.xaml </b>&#xD;&#xA;&#xD;&#xA;	<Window x:Class=""TestApplication.Window1""&#xD;&#xA;		xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;		xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;		xmlns:local=""clr-namespace:TestControl;assembly=TestControl""&#xD;&#xA;		Title=""Window1"" Height=""300"" Width=""300"">&#xD;&#xA;		<Grid>&#xD;&#xA;			<local:CustomControl1 Name=""IWantThisTextToAlsoShowAbove"" Background=""LightGray""/>&#xD;&#xA;		</Grid>&#xD;&#xA;	</Window>&#xD;&#xA;&#xD;&#xA;<b> Generic.xaml</b>&#xD;&#xA;&#xD;&#xA;	<ResourceDictionary&#xD;&#xA;		xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;		xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;		xmlns:local=""clr-namespace:TestControl"">&#xD;&#xA;	    &#xD;&#xA;	    &#xD;&#xA;		<Style TargetType=""{x:Type local:CustomControl1}"">&#xD;&#xA;			<Style.Resources>&#xD;&#xA;					<TextBlock x:Key=""text1"" Text=""{Binding Path=Name, RelativeSource={RelativeSource TemplatedParent}}"" Foreground=""White""/>&#xD;&#xA;					<TextBlock x:Key=""text2"" Text=""This text will show""/>&#xD;&#xA;			</Style.Resources>&#xD;&#xA;			&#xD;&#xA;			<Setter Property=""Template"">&#xD;&#xA;				<Setter.Value>&#xD;&#xA;					<ControlTemplate TargetType=""{x:Type local:CustomControl1}"">&#xD;&#xA;						<Border Background=""{TemplateBinding Background}""&#xD;&#xA;								BorderBrush=""{TemplateBinding BorderBrush}""&#xD;&#xA;								BorderThickness=""{TemplateBinding BorderThickness}"">&#xD;&#xA;	                            &#xD;&#xA;								<StackPanel>&#xD;&#xA;									<Label Content=""{DynamicResource text1}""/>&#xD;&#xA;									<Label Content=""{DynamicResource text2}""/>&#xD;&#xA;									<Label Content=""{TemplateBinding Name}""/>&#xD;&#xA;								</StackPanel>&#xD;&#xA;		&#xD;&#xA;						</Border>&#xD;&#xA;					</ControlTemplate>&#xD;&#xA;				</Setter.Value>&#xD;&#xA;			</Setter>&#xD;&#xA;		</Style>&#xD;&#xA;	</ResourceDictionary>&#xD;&#xA;&#xD;&#xA;Because Style.Resources is a ResourceDictionary, I cannot bind to dependency properties of the parent control using that syntax.  The first label in the control template should say ""IWantThisTextToAlsoShowAbove"", but only the last label shows the text because the binding works there.  The second label shows ""This text will show"", so it's not a problem with accessing the resources.  I just want to know a simple way to get the Name property of the control to show in the label.  How can I get this binding to work?&#xD;&#xA;&#xD;&#xA;Once again, you can download the test project here:&#xD;&#xA;http://www.megaupload.com/?d=J1GLXXHY&#xD;&#xA;&#xD;&#xA;Thank you so much,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;added 1183 characters in body
7235574;3460514;380371;5;a1751d42-01a2-4b7f-92f8-e76ba562e61f;2010-08-12 21:18:26.0;"EDIT: I created a new project and replicated the problem as follows, you can download the project here: http://www.megaupload.com/?d=J1GLXXHY&#xD;&#xA;&#xD;&#xA;<b> Window1.xaml </b>&#xD;&#xA;&#xD;&#xA;	<Window x:Class=""TestApplication.Window1""&#xD;&#xA;		xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;		xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;		xmlns:local=""clr-namespace:TestControl;assembly=TestControl""&#xD;&#xA;		Title=""Window1"" Height=""300"" Width=""300"">&#xD;&#xA;		<Grid>&#xD;&#xA;			<local:CustomControl1 Name=""IWantThisTextToAlsoShowAbove"" Background=""LightGray""/>&#xD;&#xA;		</Grid>&#xD;&#xA;	</Window>&#xD;&#xA;&#xD;&#xA;<b> Generic.xaml</b>&#xD;&#xA;&#xD;&#xA;	<ResourceDictionary&#xD;&#xA;		xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;		xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;		xmlns:local=""clr-namespace:TestControl"">&#xD;&#xA;	    &#xD;&#xA;	    &#xD;&#xA;		<Style TargetType=""{x:Type local:CustomControl1}"">&#xD;&#xA;			<Style.Resources>&#xD;&#xA;					<TextBlock x:Key=""text1"" Text=""{Binding Path=Name, RelativeSource={RelativeSource TemplatedParent}}"" Foreground=""White""/>&#xD;&#xA;					<TextBlock x:Key=""text2"" Text=""This text will show""/>&#xD;&#xA;			</Style.Resources>&#xD;&#xA;			&#xD;&#xA;			<Setter Property=""Template"">&#xD;&#xA;				<Setter.Value>&#xD;&#xA;					<ControlTemplate TargetType=""{x:Type local:CustomControl1}"">&#xD;&#xA;						<Border Background=""{TemplateBinding Background}""&#xD;&#xA;								BorderBrush=""{TemplateBinding BorderBrush}""&#xD;&#xA;								BorderThickness=""{TemplateBinding BorderThickness}"">&#xD;&#xA;	                            &#xD;&#xA;								<StackPanel>&#xD;&#xA;									<Label Content=""{DynamicResource text1}""/>&#xD;&#xA;									<Label Content=""{DynamicResource text2}""/>&#xD;&#xA;									<Label Content=""{TemplateBinding Name}""/>&#xD;&#xA;								</StackPanel>&#xD;&#xA;		&#xD;&#xA;						</Border>&#xD;&#xA;					</ControlTemplate>&#xD;&#xA;				</Setter.Value>&#xD;&#xA;			</Setter>&#xD;&#xA;		</Style>&#xD;&#xA;	</ResourceDictionary>&#xD;&#xA;&#xD;&#xA;Because Style.Resources is a ResourceDictionary, I cannot bind to dependency properties of the parent control using that syntax.  The first label in the control template should say ""IWantThisTextToAlsoShowAbove"", but only the last label shows the text because the binding works there.  The second label shows ""This text will show"", so it's not a problem with accessing the resources.  I just want to know a simple way to get the Name property of the control to show in the label.  How can I get this binding to work?&#xD;&#xA;&#xD;&#xA;Once again, you can download the project here:&#xD;&#xA;http://www.megaupload.com/?d=J1GLXXHY&#xD;&#xA;&#xD;&#xA;Thank you so much,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;";;deleted 10 characters in body
7235709;3460514;380371;8;e49e1aab-b6fb-4a2e-91bc-d81b3db9367f;2010-08-12 21:27:01.0;"EDIT: I made the question a lot simpler and more general&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary.  In this resource dictionary, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;Rollback to [9f6c56a7-d5a9-46c6-b81b-da2a9fb95906]
7236371;3460514;380371;8;3384178c-572f-424f-9355-9cd58ca7007f;2010-08-12 22:23:50.0;"EDIT: I rephrased the entire question.&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary It's a resource dictionary within the outer dictionary, defined like so:&#xD;&#xA;&#xD;&#xA;    <ResourceDictionary&#xD;&#xA;    xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;    xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;    xmlns:local=""clr-namespace:MyNamespace"">&#xD;&#xA;    &#xD;&#xA;       <!-- This is the dictionary-->&#xD;&#xA;       <ResourceDictionary x:Name=""TheDictionaryImTalkingAbout"" . . . >&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       </ResourceDictionary>&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;&#xD;&#xA;    </ResourceDictionary>&#xD;&#xA;&#xD;&#xA;In this resource dictionary, TheDictionaryImTalkingAbout, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary that's within Generic.xaml?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;Rollback to [78d42cfa-ceb2-41ca-80cd-52a5739e4c32]
7236379;3460514;380371;5;b0c1fe31-1d98-4b42-bb27-55a341b6a01d;2010-08-12 22:24:24.0;"EDIT: I rephrased the entire question.&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary. It's a resource dictionary within the outer dictionary, defined like so:&#xD;&#xA;&#xD;&#xA;    <ResourceDictionary&#xD;&#xA;    xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;    xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;    xmlns:local=""clr-namespace:MyNamespace"">&#xD;&#xA;    &#xD;&#xA;       <!-- This is the dictionary-->&#xD;&#xA;       <ResourceDictionary x:Name=""TheDictionaryImTalkingAbout"" . . . >&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       </ResourceDictionary>&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;&#xD;&#xA;    </ResourceDictionary>&#xD;&#xA;&#xD;&#xA;In this resource dictionary, TheDictionaryImTalkingAbout, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary that's within Generic.xaml?&#xD;&#xA;&#xD;&#xA;Thanks,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;added 1 characters in body
7237466;3460514;380371;5;a260f076-652d-4295-9033-2cfdbf590233;2010-08-13 00:07:06.0;"EDIT: I rephrased the entire question.&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary. It's a resource dictionary within the outer dictionary, defined like so:&#xD;&#xA;&#xD;&#xA;    <ResourceDictionary&#xD;&#xA;    xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;    xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;    xmlns:local=""clr-namespace:MyNamespace"">&#xD;&#xA;    &#xD;&#xA;       <!-- This is the dictionary-->&#xD;&#xA;       <ResourceDictionary x:Name=""TheDictionaryImTalkingAbout"" . . . >&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       </ResourceDictionary>&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;&#xD;&#xA;    </ResourceDictionary>&#xD;&#xA;&#xD;&#xA;In this resource dictionary, TheDictionaryImTalkingAbout, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary that's within Generic.xaml?&#xD;&#xA;&#xD;&#xA;EDIT: This binding DOES work, but only for certain properties.  I am unable to bind GradientStop Color to a dependency property of type color.  It USED to work when this was a UserControl, but it doesn't work anymore now that I created a custom control.  I don't know why, but if you're interested, I asked this question here:&#xD;&#xA;&#xD;&#xA;http://stackoverflow.com/questions/3472932/why-can-i-no-longer-bind-gradientstop-color-to-a-dependency-property-of-my-contro&#xD;&#xA;&#xD;&#xA;Thanks everybody who helped,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;added 479 characters in body
146980493;3460514;-1;5;0b870a2f-abca-4af9-9a8d-9e9e2cb9fbc4;2017-05-23 12:07:09.0;"EDIT: I rephrased the entire question.&#xD;&#xA;&#xD;&#xA;Hello everybody,&#xD;&#xA;&#xD;&#xA;I have a custom control with dependency properties.  In the Generic.xaml file I have a resource dictionary. It's a resource dictionary within the outer dictionary, defined like so:&#xD;&#xA;&#xD;&#xA;    <ResourceDictionary&#xD;&#xA;    xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""&#xD;&#xA;    xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""&#xD;&#xA;    xmlns:local=""clr-namespace:MyNamespace"">&#xD;&#xA;    &#xD;&#xA;       <!-- This is the dictionary-->&#xD;&#xA;       <ResourceDictionary x:Name=""TheDictionaryImTalkingAbout"" . . . >&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       </ResourceDictionary>&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;       .&#xD;&#xA;&#xD;&#xA;    </ResourceDictionary>&#xD;&#xA;&#xD;&#xA;In this resource dictionary, TheDictionaryImTalkingAbout, I want to bind to a dependency property of my control.  I tried the following XAML :&#xD;&#xA;&#xD;&#xA;    <Object x:Key=""MyObject"" SomeProperty=""{Binding MyDependencyProperty, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MyNamespace:MyControl}}}""/>&#xD;&#xA;&#xD;&#xA;The binding returns no errors, however, it doesn't work.  Can anyone tell me how I'm supposed to bind to my parent control from within a resource dictionary that's within Generic.xaml?&#xD;&#xA;&#xD;&#xA;EDIT: This binding DOES work, but only for certain properties.  I am unable to bind GradientStop Color to a dependency property of type color.  It USED to work when this was a UserControl, but it doesn't work anymore now that I created a custom control.  I don't know why, but if you're interested, I asked this question here:&#xD;&#xA;&#xD;&#xA;https://stackoverflow.com/questions/3472932/why-can-i-no-longer-bind-gradientstop-color-to-a-dependency-property-of-my-contro&#xD;&#xA;&#xD;&#xA;Thanks everybody who helped,&#xD;&#xA;&#xD;&#xA;Dalal&#xD;&#xA;&#xD;&#xA;";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
