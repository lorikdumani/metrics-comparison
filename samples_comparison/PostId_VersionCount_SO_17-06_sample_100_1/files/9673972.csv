Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
22083700;9673972;499922;2;546ae16a-14c6-487d-9e4d-3be3ac860ee5;2012-03-12 20:01:47.0;"Background&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;I am working on a browser-based UI that needs to fill the entire screen without any scrolling. The basic layout is like this:&#xD;&#xA;&#xD;&#xA;![layout sketch][1]&#xD;&#xA;[1]: http://i.stack.imgur.com/fJzBE.png&#xD;&#xA;&#xD;&#xA;What I want to achieve&#xD;&#xA;==&#xD;&#xA;The title div should has a fixed height (2em) and the rest 4 divs/panels should devide the remaining space of the screen according to percentages I set.&#xD;&#xA;&#xD;&#xA;What I've tried&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;The best solution I've found is "" http://stackoverflow.com/questions/7778306/css-how-to-force-elements-to-100-of-remaining-available-space-of-parent-eleme "", which involves using a container div with `position:absolute`. This works across all browsers, but requires some additional DIVs to be created. Also, panel 2 can sometimes be forced to start on the next line due to [inaccuracies in percentage widths](http://stackoverflow.com/questions/8197708/html-css-can-percentage-width-divs-always-completely-fill-their-parent-containe).&#xD;&#xA;&#xD;&#xA;My previous solution was based on CSS3 [Flexbox](http://www.html5rocks.com/en/tutorials/flexbox/quick/), but the model is flawed as it does not resize child elements that have a percentage height after stretching the container boxes (at least Chrome doesn't). (The newer flex-* attributes are only implemented in Chrome and the standard is still changing.)&#xD;&#xA;&#xD;&#xA;I have also tried the [calc()](https://developer.mozilla.org/en/CSS/calc) function; however, it's not yet implemented in Chrome. Also, it requires hard-coding the height of the title element in two places, which I've been trying to avoid.&#xD;&#xA;  ";;
22114858;9673972;499922;5;c1c7efd9-de38-430f-b809-8bcb0bee1c71;2012-03-13 14:58:04.0;"Background&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;I am working on a browser-based UI that needs to fill the entire screen without any scrolling. The basic layout is like this:&#xD;&#xA;&#xD;&#xA;![layout sketch][1]&#xD;&#xA;[1]: http://i.stack.imgur.com/fJzBE.png&#xD;&#xA;&#xD;&#xA;What I want to achieve&#xD;&#xA;==&#xD;&#xA;The title div should has a fixed height (2em) and the rest 4 divs/panels should devide the remaining space of the screen according to percentages I set.&#xD;&#xA;&#xD;&#xA;What I've tried&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;The best solution I've found is "" http://stackoverflow.com/questions/7778306/css-how-to-force-elements-to-100-of-remaining-available-space-of-parent-eleme "", which involves using a container div with `position:absolute`. This works across all browsers, but requires some additional DIVs to be created. Also, panel 2 can sometimes be forced to start on the next line due to [inaccuracies in percentage widths](http://stackoverflow.com/questions/8197708/html-css-can-percentage-width-divs-always-completely-fill-their-parent-containe).&#xD;&#xA;&#xD;&#xA;My previous solution was based on CSS3 [Flexbox](http://www.html5rocks.com/en/tutorials/flexbox/quick/), but the model is flawed as it does not resize child elements that have a percentage height after stretching the container boxes (at least Chrome doesn't). (The newer flex-* attributes are only implemented in Chrome and the standard is still changing.)&#xD;&#xA;&#xD;&#xA;I have also tried the [calc()](https://developer.mozilla.org/en/CSS/calc) function; however, it's not yet implemented in Chrome. Also, it requires hard-coding the height of the title element in two places, which I've been trying to avoid.&#xD;&#xA;&#xD;&#xA;**Edit:**&#xD;&#xA;&#xD;&#xA;What am I looking for&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;Just to be clear, I am not asking for a perfect/pure-CSS solution (as none seems to exist). If anyone can suggest any jQuery plug-in or open-source framework that can do this, it would be good enough for me.&#xD;&#xA;&#xD;&#xA;In addition, I don't require any backwards compatibility with browser releases before 2012. (As long as the solution uses technology that is implemented in some browser and is going to be implemented by Firefox and Chrome in the near future, it's good enough for me.)";;added 519 characters in body
146194179;9673972;-1;5;4be55541-d8a4-4626-9d57-970bb9266fcd;2017-05-23 10:30:23.0;"Background&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;I am working on a browser-based UI that needs to fill the entire screen without any scrolling. The basic layout is like this:&#xD;&#xA;&#xD;&#xA;![layout sketch][1]&#xD;&#xA;[1]: http://i.stack.imgur.com/fJzBE.png&#xD;&#xA;&#xD;&#xA;What I want to achieve&#xD;&#xA;==&#xD;&#xA;The title div should has a fixed height (2em) and the rest 4 divs/panels should devide the remaining space of the screen according to percentages I set.&#xD;&#xA;&#xD;&#xA;What I've tried&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;The best solution I've found is "" https://stackoverflow.com/questions/7778306/css-how-to-force-elements-to-100-of-remaining-available-space-of-parent-eleme "", which involves using a container div with `position:absolute`. This works across all browsers, but requires some additional DIVs to be created. Also, panel 2 can sometimes be forced to start on the next line due to [inaccuracies in percentage widths](https://stackoverflow.com/questions/8197708/html-css-can-percentage-width-divs-always-completely-fill-their-parent-containe).&#xD;&#xA;&#xD;&#xA;My previous solution was based on CSS3 [Flexbox](http://www.html5rocks.com/en/tutorials/flexbox/quick/), but the model is flawed as it does not resize child elements that have a percentage height after stretching the container boxes (at least Chrome doesn't). (The newer flex-* attributes are only implemented in Chrome and the standard is still changing.)&#xD;&#xA;&#xD;&#xA;I have also tried the [calc()](https://developer.mozilla.org/en/CSS/calc) function; however, it's not yet implemented in Chrome. Also, it requires hard-coding the height of the title element in two places, which I've been trying to avoid.&#xD;&#xA;&#xD;&#xA;**Edit:**&#xD;&#xA;&#xD;&#xA;What am I looking for&#xD;&#xA;=&#xD;&#xA;&#xD;&#xA;Just to be clear, I am not asking for a perfect/pure-CSS solution (as none seems to exist). If anyone can suggest any jQuery plug-in or open-source framework that can do this, it would be good enough for me.&#xD;&#xA;&#xD;&#xA;In addition, I don't require any backwards compatibility with browser releases before 2012. (As long as the solution uses technology that is implemented in some browser and is going to be implemented by Firefox and Chrome in the near future, it's good enough for me.)";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
