Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
144484341;43748135;5719837;2;82682a49-44a0-4b17-aebe-ff08e0300198;2017-05-02 22:19:38.0;"GitHub Repo: https://github.com/CodeBradley/contact-form-7-rest-api/blob/master/lib/endpoints/class-wp-rest-contact-form-7-controller.php&#xD;&#xA;&#xD;&#xA;I'm working on an extension to the WordPress Rest API for Contact Form 7 but I'm not sure how to structure their mail objects in my JSON Schema. For anyone who has used the Contact Form 7 plugin, you may have noticed that they have the regular mail object (which is where you add form values, recipients, etc) and they have a mail_2 object for people who want to send a copy of the email to the end user.&#xD;&#xA;&#xD;&#xA;Both of the objects mail and mail_2 offer the same properties as you can see in the schema below:&#xD;&#xA;&#xD;&#xA;    public function get_item_schema() {&#xD;&#xA;        $schema = array(&#xD;&#xA;            '$schema'    => 'http://json-schema.org/draft-04/schema#',&#xD;&#xA;            'title'      => 'form',&#xD;&#xA;            'type'       => 'object',&#xD;&#xA;            'properties' => array(&#xD;&#xA;                'id'          => array(&#xD;&#xA;                    'description' => __( 'Unique identifier for the form.' ),&#xD;&#xA;                    'type'        => 'integer',&#xD;&#xA;                    'context'     => array( 'embed', 'view' ),&#xD;&#xA;                    'readonly'    => true,&#xD;&#xA;                ),&#xD;&#xA;                'title'       => array(&#xD;&#xA;                    'description' => __( 'Display name for the form.' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'name'        => array(&#xD;&#xA;                    'description' => __( 'An alphanumeric identifier for the object unique to its type.' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'locale'      => array(&#xD;&#xA;                    'description' => __( 'The locale setting of the form' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'properties'  => array(&#xD;&#xA;                    'description' => __('The properties of the form'),&#xD;&#xA;                    'type'        => 'object',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'properties'  => array(&#xD;&#xA;                        'form'  => array(&#xD;&#xA;                            'description' => __('The content for the form'),&#xD;&#xA;                            'type'        => 'string',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                        ),&#xD;&#xA;                        'mail'  => array(&#xD;&#xA;                            'type'        => 'object',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                            'properties'  => array(&#xD;&#xA;                                'mail-subject' => array(&#xD;&#xA;                                    'description' => __('Subject of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-sender' => array(&#xD;&#xA;                                    'description' => __('Sending email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-recipient' => array(&#xD;&#xA;                                    'description' => __('Recipient email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-additional-headers' => array(&#xD;&#xA;                                    'description' => __('Additional form headers'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-attachment' => array(&#xD;&#xA;                                    'description' => __('Attachments to include with form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-use-html' => array(&#xD;&#xA;                                    'description' => __('Send emails using HTML formatting'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-exclude-blank' => array(&#xD;&#xA;                                    'description' => __('Exclude lines with blank mail-tags from output'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                            ),&#xD;&#xA;                        ),&#xD;&#xA;                        'mail-2'  => array(&#xD;&#xA;                            'type'        => 'object',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                            'properties'  => array(&#xD;&#xA;                                'mail-2-subject' => array(&#xD;&#xA;                                    'description' => __('Subject of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-sender' => array(&#xD;&#xA;                                    'description' => __('Sending email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-recipient' => array(&#xD;&#xA;                                    'description' => __('Recipient email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-additional-headers' => array(&#xD;&#xA;                                    'description' => __('Additional form headers'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-attachment' => array(&#xD;&#xA;                                    'description' => __('Files to attach to the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-use-html' => array(&#xD;&#xA;                                    'description' => __('Send emails using HTML formatting'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-exclude-blank' => array(&#xD;&#xA;                                    'description' => __('Exclude lines with blank mail-tags from output'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                            ),&#xD;&#xA;                        ),&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;            )&#xD;&#xA;        );&#xD;&#xA;&#xD;&#xA;Currently I'm appending mail properties with mail- and mail-2 properties with mail-2 so that the post values don't get overridden when trying to edit either object. Is this the best way to handle this situation?&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;**Code that currently uses the schema:**&#xD;&#xA;&#xD;&#xA;prepare_item_for_response() code:&#xD;&#xA;(The returned $data['properties'] key values do not currently map to the defined schema, I'm assuming this need to be fixed? $data['properties'] houses the mail objects)&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * The returned $data['properties'] values do not currently conform to the defined schema&#xD;&#xA;     */&#xD;&#xA;    public function prepare_item_for_response($form, $request)&#xD;&#xA;    {&#xD;&#xA;        $data = array();&#xD;&#xA;        $data['id'] = $form->id();&#xD;&#xA;        $data['name'] = $form->name();&#xD;&#xA;        $data['title'] = $form->title();&#xD;&#xA;        $data['locale'] = $form->locale;&#xD;&#xA;        $data['properties'] = $form->get_properties(); &#xD;&#xA;        $data = $this->add_additional_fields_to_object($data, $request);&#xD;&#xA;        $response = rest_ensure_response($data);&#xD;&#xA;        $response = apply_filters('rest_api_prepare_wpcf7', $response, $form, $request);&#xD;&#xA;        return $response;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;prepare_item_for_database() code:&#xD;&#xA;&#xD;&#xA;    protected function prepare_item_for_database($request) {&#xD;&#xA;&#xD;&#xA;        $id  = $request->get_param('id');&#xD;&#xA;        $prepared_form = WPCF7_ContactForm::get_instance( $id );&#xD;&#xA;&#xD;&#xA;        /**&#xD;&#xA;         * update_item ensures the form ID exists before calling this method to prevent non-existant forms from being created accidentally.&#xD;&#xA;         */&#xD;&#xA;        if(empty($prepared_form)) {&#xD;&#xA;            $prepared_form = WPCF7_ContactForm::get_template();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['post-title'] ) ) {&#xD;&#xA;            $prepared_form->set_title( $request['post-title'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['locale'] ) ) {&#xD;&#xA;            $locale = trim( $request['locale'] );&#xD;&#xA;&#xD;&#xA;            if ( wpcf7_is_valid_locale( $locale ) ) {&#xD;&#xA;                $prepared_form->set_locale($locale);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $properties = $prepared_form->get_properties();&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['form'] ) ) {&#xD;&#xA;            $properties['form'] = trim( $request['form'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail = $properties['mail'];&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-subject'] ) ) {&#xD;&#xA;            $mail['subject'] = trim( $request['mail-subject'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-sender'] ) ) {&#xD;&#xA;            $mail['sender'] = trim( $request['mail-sender'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-body'] ) ) {&#xD;&#xA;            $mail['body'] = trim( $request['mail-body'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-recipient'] ) ) {&#xD;&#xA;            $mail['recipient'] = trim( $request['mail-recipient'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-additional-headers'] ) ) {&#xD;&#xA;            $headers = '';&#xD;&#xA;            $tempheaders = str_replace(&#xD;&#xA;                ""\\r\\n"", ""\\n"", $request['mail-additional-headers'] );&#xD;&#xA;            $tempheaders = explode( ""\\n"", $tempheaders );&#xD;&#xA;&#xD;&#xA;            foreach ( $tempheaders as $header ) {&#xD;&#xA;                $header = trim( $header );&#xD;&#xA;&#xD;&#xA;                if ( '' !== $header ) {&#xD;&#xA;                    $headers .= $header . ""\\n"";&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            $mail['additional_headers'] = trim( $headers );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-attachments'] ) ) {&#xD;&#xA;            $mail['attachments'] = trim( $request['mail-attachments'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail['use_html'] = ! empty( $request['mail-use-html'] );&#xD;&#xA;        $mail['exclude_blank'] = ! empty( $request['mail-exclude-blank'] );&#xD;&#xA;&#xD;&#xA;        $properties['mail'] = $mail;&#xD;&#xA;&#xD;&#xA;        $mail_2 = $properties['mail_2'];&#xD;&#xA;&#xD;&#xA;        $mail_2['active'] = ! empty( $request['mail-2-active'] );&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-subject'] ) ) {&#xD;&#xA;            $mail_2['subject'] = trim( $request['mail-2-subject'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-sender'] ) ) {&#xD;&#xA;            $mail_2['sender'] = trim( $request['mail-2-sender'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-body'] ) ) {&#xD;&#xA;            $mail_2['body'] = trim( $request['mail-2-body'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-recipient'] ) ) {&#xD;&#xA;            $mail_2['recipient'] = trim( $request['mail-2-recipient'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-additional-headers'] ) ) {&#xD;&#xA;            $headers = '';&#xD;&#xA;            $tempheaders = str_replace(&#xD;&#xA;                ""\\r\\n"", ""\\n"", $request['mail-2-additional-headers'] );&#xD;&#xA;            $tempheaders = explode( ""\\n"", $tempheaders );&#xD;&#xA;&#xD;&#xA;            foreach ( $tempheaders as $header ) {&#xD;&#xA;                $header = trim( $header );&#xD;&#xA;&#xD;&#xA;                if ( '' !== $header ) {&#xD;&#xA;                    $headers .= $header . ""\\n"";&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            $mail_2['additional_headers'] = trim( $headers );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-attachments'] ) ) {&#xD;&#xA;            $mail_2['attachments'] = trim( $request['mail-2-attachments'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail_2['use_html'] = ! empty( $request['mail-2-use-html'] );&#xD;&#xA;        $mail_2['exclude_blank'] = ! empty( $request['mail-2-exclude-blank'] );&#xD;&#xA;&#xD;&#xA;        $properties['mail_2'] = $mail_2;&#xD;&#xA;&#xD;&#xA;        // For setting/updating confirmation/error messages&#xD;&#xA;        foreach ( wpcf7_messages() as $key => $arr ) {&#xD;&#xA;            $field_name = 'message-' . strtr( $key, '_', '-' );&#xD;&#xA;&#xD;&#xA;            if ( isset( $request[$field_name] ) ) {&#xD;&#xA;                $properties['messages'][$key] = trim( $request[$field_name] );&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['additional-settings'] ) ) {&#xD;&#xA;            $properties['additional_settings'] = trim( $request['additional-settings'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $prepared_form->set_properties( $properties );&#xD;&#xA;&#xD;&#xA;        //Preceded original with rest_api_&#xD;&#xA;        do_action( 'rest_api_wpcf7_save_contact_form', $prepared_form );&#xD;&#xA;&#xD;&#xA;        if ( wpcf7_validate_configuration() ) {&#xD;&#xA;            $config_validator = new WPCF7_ConfigValidator( $prepared_form );&#xD;&#xA;            $config_validator->validate();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        return $prepared_form;&#xD;&#xA;&#xD;&#xA;    }";;
144544319;43748135;5719837;5;db832890-a7e9-4f63-be46-5212dc662821;2017-05-03 14:58:06.0;"sgfsdfdsf sdfdsf sdfdsf sdfdsf sgfsdfdsf sdfdsf sdfdsf sdfdsf sgfsdfdsf sdfdsf sdfdsf sdfdsf sgfsdfdsf sdfdsf sdfdsf sdfdsf.&#xD;&#xA;&#xD;&#xA;sgfsdfdsf sdfdsf sdfdsf sdfdsf sgfsdfdsf sdfdsf sdfdsf sdfdsf sgfsdfdsf sgfsdfdsf sgfsdfdsf sgfsdfdsf sgfsdfdsf .";;"deleted 14259 characters in body; edited tags; edited title"
144544366;43748135;5292302;8;98adbc1d-57a9-4b70-af73-85800e5b5776;2017-05-03 14:58:36.0;"GitHub Repo: https://github.com/CodeBradley/contact-form-7-rest-api/blob/master/lib/endpoints/class-wp-rest-contact-form-7-controller.php&#xD;&#xA;&#xD;&#xA;I'm working on an extension to the WordPress Rest API for Contact Form 7 but I'm not sure how to structure their mail objects in my JSON Schema. For anyone who has used the Contact Form 7 plugin, you may have noticed that they have the regular mail object (which is where you add form values, recipients, etc) and they have a mail_2 object for people who want to send a copy of the email to the end user.&#xD;&#xA;&#xD;&#xA;Both of the objects mail and mail_2 offer the same properties as you can see in the schema below:&#xD;&#xA;&#xD;&#xA;    public function get_item_schema() {&#xD;&#xA;        $schema = array(&#xD;&#xA;            '$schema'    => 'http://json-schema.org/draft-04/schema#',&#xD;&#xA;            'title'      => 'form',&#xD;&#xA;            'type'       => 'object',&#xD;&#xA;            'properties' => array(&#xD;&#xA;                'id'          => array(&#xD;&#xA;                    'description' => __( 'Unique identifier for the form.' ),&#xD;&#xA;                    'type'        => 'integer',&#xD;&#xA;                    'context'     => array( 'embed', 'view' ),&#xD;&#xA;                    'readonly'    => true,&#xD;&#xA;                ),&#xD;&#xA;                'title'       => array(&#xD;&#xA;                    'description' => __( 'Display name for the form.' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'name'        => array(&#xD;&#xA;                    'description' => __( 'An alphanumeric identifier for the object unique to its type.' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'locale'      => array(&#xD;&#xA;                    'description' => __( 'The locale setting of the form' ),&#xD;&#xA;                    'type'        => 'string',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'arg_options' => array(&#xD;&#xA;                        'sanitize_callback' => 'sanitize_text_field',&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;                'properties'  => array(&#xD;&#xA;                    'description' => __('The properties of the form'),&#xD;&#xA;                    'type'        => 'object',&#xD;&#xA;                    'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                    'properties'  => array(&#xD;&#xA;                        'form'  => array(&#xD;&#xA;                            'description' => __('The content for the form'),&#xD;&#xA;                            'type'        => 'string',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                        ),&#xD;&#xA;                        'mail'  => array(&#xD;&#xA;                            'type'        => 'object',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                            'properties'  => array(&#xD;&#xA;                                'mail-subject' => array(&#xD;&#xA;                                    'description' => __('Subject of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-sender' => array(&#xD;&#xA;                                    'description' => __('Sending email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-recipient' => array(&#xD;&#xA;                                    'description' => __('Recipient email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-additional-headers' => array(&#xD;&#xA;                                    'description' => __('Additional form headers'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-attachment' => array(&#xD;&#xA;                                    'description' => __('Attachments to include with form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-use-html' => array(&#xD;&#xA;                                    'description' => __('Send emails using HTML formatting'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-exclude-blank' => array(&#xD;&#xA;                                    'description' => __('Exclude lines with blank mail-tags from output'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                            ),&#xD;&#xA;                        ),&#xD;&#xA;                        'mail-2'  => array(&#xD;&#xA;                            'type'        => 'object',&#xD;&#xA;                            'context'     => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                            'properties'  => array(&#xD;&#xA;                                'mail-2-subject' => array(&#xD;&#xA;                                    'description' => __('Subject of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-sender' => array(&#xD;&#xA;                                    'description' => __('Sending email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-recipient' => array(&#xD;&#xA;                                    'description' => __('Recipient email address of the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-additional-headers' => array(&#xD;&#xA;                                    'description' => __('Additional form headers'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-attachment' => array(&#xD;&#xA;                                    'description' => __('Files to attach to the form'),&#xD;&#xA;                                    'type'      => 'string',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-use-html' => array(&#xD;&#xA;                                    'description' => __('Send emails using HTML formatting'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                                'mail-2-exclude-blank' => array(&#xD;&#xA;                                    'description' => __('Exclude lines with blank mail-tags from output'),&#xD;&#xA;                                    'type'      => 'boolean',&#xD;&#xA;                                    'context'   => array( 'embed', 'view', 'edit' ),&#xD;&#xA;                                ),&#xD;&#xA;                            ),&#xD;&#xA;                        ),&#xD;&#xA;                    ),&#xD;&#xA;                ),&#xD;&#xA;            )&#xD;&#xA;        );&#xD;&#xA;&#xD;&#xA;Currently I'm appending mail properties with mail- and mail-2 properties with mail-2 so that the post values don't get overridden when trying to edit either object. Is this the best way to handle this situation?&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;**Code that currently uses the schema:**&#xD;&#xA;&#xD;&#xA;prepare_item_for_response() code:&#xD;&#xA;(The returned $data['properties'] key values do not currently map to the defined schema, I'm assuming this need to be fixed? $data['properties'] houses the mail objects)&#xD;&#xA;&#xD;&#xA;    /**&#xD;&#xA;     * The returned $data['properties'] values do not currently conform to the defined schema&#xD;&#xA;     */&#xD;&#xA;    public function prepare_item_for_response($form, $request)&#xD;&#xA;    {&#xD;&#xA;        $data = array();&#xD;&#xA;        $data['id'] = $form->id();&#xD;&#xA;        $data['name'] = $form->name();&#xD;&#xA;        $data['title'] = $form->title();&#xD;&#xA;        $data['locale'] = $form->locale;&#xD;&#xA;        $data['properties'] = $form->get_properties(); &#xD;&#xA;        $data = $this->add_additional_fields_to_object($data, $request);&#xD;&#xA;        $response = rest_ensure_response($data);&#xD;&#xA;        $response = apply_filters('rest_api_prepare_wpcf7', $response, $form, $request);&#xD;&#xA;        return $response;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;prepare_item_for_database() code:&#xD;&#xA;&#xD;&#xA;    protected function prepare_item_for_database($request) {&#xD;&#xA;&#xD;&#xA;        $id  = $request->get_param('id');&#xD;&#xA;        $prepared_form = WPCF7_ContactForm::get_instance( $id );&#xD;&#xA;&#xD;&#xA;        /**&#xD;&#xA;         * update_item ensures the form ID exists before calling this method to prevent non-existant forms from being created accidentally.&#xD;&#xA;         */&#xD;&#xA;        if(empty($prepared_form)) {&#xD;&#xA;            $prepared_form = WPCF7_ContactForm::get_template();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['post-title'] ) ) {&#xD;&#xA;            $prepared_form->set_title( $request['post-title'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['locale'] ) ) {&#xD;&#xA;            $locale = trim( $request['locale'] );&#xD;&#xA;&#xD;&#xA;            if ( wpcf7_is_valid_locale( $locale ) ) {&#xD;&#xA;                $prepared_form->set_locale($locale);&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $properties = $prepared_form->get_properties();&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['form'] ) ) {&#xD;&#xA;            $properties['form'] = trim( $request['form'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail = $properties['mail'];&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-subject'] ) ) {&#xD;&#xA;            $mail['subject'] = trim( $request['mail-subject'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-sender'] ) ) {&#xD;&#xA;            $mail['sender'] = trim( $request['mail-sender'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-body'] ) ) {&#xD;&#xA;            $mail['body'] = trim( $request['mail-body'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-recipient'] ) ) {&#xD;&#xA;            $mail['recipient'] = trim( $request['mail-recipient'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-additional-headers'] ) ) {&#xD;&#xA;            $headers = '';&#xD;&#xA;            $tempheaders = str_replace(&#xD;&#xA;                ""\\r\\n"", ""\\n"", $request['mail-additional-headers'] );&#xD;&#xA;            $tempheaders = explode( ""\\n"", $tempheaders );&#xD;&#xA;&#xD;&#xA;            foreach ( $tempheaders as $header ) {&#xD;&#xA;                $header = trim( $header );&#xD;&#xA;&#xD;&#xA;                if ( '' !== $header ) {&#xD;&#xA;                    $headers .= $header . ""\\n"";&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            $mail['additional_headers'] = trim( $headers );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-attachments'] ) ) {&#xD;&#xA;            $mail['attachments'] = trim( $request['mail-attachments'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail['use_html'] = ! empty( $request['mail-use-html'] );&#xD;&#xA;        $mail['exclude_blank'] = ! empty( $request['mail-exclude-blank'] );&#xD;&#xA;&#xD;&#xA;        $properties['mail'] = $mail;&#xD;&#xA;&#xD;&#xA;        $mail_2 = $properties['mail_2'];&#xD;&#xA;&#xD;&#xA;        $mail_2['active'] = ! empty( $request['mail-2-active'] );&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-subject'] ) ) {&#xD;&#xA;            $mail_2['subject'] = trim( $request['mail-2-subject'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-sender'] ) ) {&#xD;&#xA;            $mail_2['sender'] = trim( $request['mail-2-sender'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-body'] ) ) {&#xD;&#xA;            $mail_2['body'] = trim( $request['mail-2-body'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-recipient'] ) ) {&#xD;&#xA;            $mail_2['recipient'] = trim( $request['mail-2-recipient'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-additional-headers'] ) ) {&#xD;&#xA;            $headers = '';&#xD;&#xA;            $tempheaders = str_replace(&#xD;&#xA;                ""\\r\\n"", ""\\n"", $request['mail-2-additional-headers'] );&#xD;&#xA;            $tempheaders = explode( ""\\n"", $tempheaders );&#xD;&#xA;&#xD;&#xA;            foreach ( $tempheaders as $header ) {&#xD;&#xA;                $header = trim( $header );&#xD;&#xA;&#xD;&#xA;                if ( '' !== $header ) {&#xD;&#xA;                    $headers .= $header . ""\\n"";&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            $mail_2['additional_headers'] = trim( $headers );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['mail-2-attachments'] ) ) {&#xD;&#xA;            $mail_2['attachments'] = trim( $request['mail-2-attachments'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $mail_2['use_html'] = ! empty( $request['mail-2-use-html'] );&#xD;&#xA;        $mail_2['exclude_blank'] = ! empty( $request['mail-2-exclude-blank'] );&#xD;&#xA;&#xD;&#xA;        $properties['mail_2'] = $mail_2;&#xD;&#xA;&#xD;&#xA;        // For setting/updating confirmation/error messages&#xD;&#xA;        foreach ( wpcf7_messages() as $key => $arr ) {&#xD;&#xA;            $field_name = 'message-' . strtr( $key, '_', '-' );&#xD;&#xA;&#xD;&#xA;            if ( isset( $request[$field_name] ) ) {&#xD;&#xA;                $properties['messages'][$key] = trim( $request[$field_name] );&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        if ( isset( $request['additional-settings'] ) ) {&#xD;&#xA;            $properties['additional_settings'] = trim( $request['additional-settings'] );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        $prepared_form->set_properties( $properties );&#xD;&#xA;&#xD;&#xA;        //Preceded original with rest_api_&#xD;&#xA;        do_action( 'rest_api_wpcf7_save_contact_form', $prepared_form );&#xD;&#xA;&#xD;&#xA;        if ( wpcf7_validate_configuration() ) {&#xD;&#xA;            $config_validator = new WPCF7_ConfigValidator( $prepared_form );&#xD;&#xA;            $config_validator->validate();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        return $prepared_form;&#xD;&#xA;&#xD;&#xA;    }";;Rollback to [82682a49-44a0-4b17-aebe-ff08e0300198]
