Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
61245759;22635390;3370690;2;6e0cd855-7053-47e5-a743-8e5d3fdb4eeb;2014-03-25 12:58:44.0;"I have an app that scans qr code. The app returns the url in a string named value. I want to open the url in a webview. How can I call the WebViewActivity in CameraTestActivity? There are comments in the code for the things I want to do but I do not know how. Can you please help me? &#xD;&#xA;&#xD;&#xA;CameraTestActivity.java&#xD;&#xA;	&#xD;&#xA;	import net.sourceforge.zbar.Config;&#xD;&#xA;	import net.sourceforge.zbar.Image;&#xD;&#xA;	import net.sourceforge.zbar.ImageScanner;&#xD;&#xA;	import net.sourceforge.zbar.Symbol;&#xD;&#xA;	import net.sourceforge.zbar.SymbolSet;&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.content.Intent;&#xD;&#xA;	import android.content.pm.ActivityInfo;&#xD;&#xA;	import android.hardware.Camera;&#xD;&#xA;	import android.hardware.Camera.AutoFocusCallback;&#xD;&#xA;	import android.hardware.Camera.PreviewCallback;&#xD;&#xA;	import android.hardware.Camera.Size;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.os.Handler;&#xD;&#xA;	import android.text.method.LinkMovementMethod;&#xD;&#xA;	import android.view.View;&#xD;&#xA;	import android.view.View.OnClickListener;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.widget.Button;&#xD;&#xA;	import android.widget.FrameLayout;&#xD;&#xA;	import android.widget.TextView;&#xD;&#xA;	/* Import ZBar Class files */&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;	public class CameraTestActivity extends Activity&#xD;&#xA;	{&#xD;&#xA;	    private Camera mCamera;&#xD;&#xA;	    private CameraPreview mPreview;&#xD;&#xA;	    private Handler autoFocusHandler;&#xD;&#xA;	&#xD;&#xA;	    TextView scanText;&#xD;&#xA;	    Button scanButton;&#xD;&#xA;	    Button exitButton;&#xD;&#xA;	    WebView web;&#xD;&#xA;	&#xD;&#xA;	    ImageScanner scanner;&#xD;&#xA;	&#xD;&#xA;	    private boolean barcodeScanned = false;&#xD;&#xA;	    private boolean previewing = true;&#xD;&#xA;	&#xD;&#xA;	    static {&#xD;&#xA;	        System.loadLibrary(""iconv"");&#xD;&#xA;	    } &#xD;&#xA;	&#xD;&#xA;	    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;	        super.onCreate(savedInstanceState);&#xD;&#xA;	&#xD;&#xA;	        setContentView(R.layout.main);&#xD;&#xA;	&#xD;&#xA;	        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);&#xD;&#xA;	&#xD;&#xA;	        autoFocusHandler = new Handler();&#xD;&#xA;	        mCamera = getCameraInstance();&#xD;&#xA;	&#xD;&#xA;	        /* Instance barcode scanner */&#xD;&#xA;	        scanner = new ImageScanner();&#xD;&#xA;	        scanner.setConfig(0, Config.X_DENSITY, 3);&#xD;&#xA;	        scanner.setConfig(0, Config.Y_DENSITY, 3);&#xD;&#xA;	&#xD;&#xA;	        mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	        FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	        preview.addView(mPreview);&#xD;&#xA;	        &#xD;&#xA;	       &#xD;&#xA;	&#xD;&#xA;	        scanText = (TextView)findViewById(R.id.scanText);&#xD;&#xA;	&#xD;&#xA;	        scanButton = (Button)findViewById(R.id.ScanButton);&#xD;&#xA;	&#xD;&#xA;	        scanButton.setOnClickListener(new OnClickListener() {&#xD;&#xA;	                public void onClick(View v) {&#xD;&#xA;	                    if (barcodeScanned) {&#xD;&#xA;	                        barcodeScanned = false;&#xD;&#xA;	                        scanText.setText(""Place code inside the square to scan"");&#xD;&#xA;	                        mCamera.setPreviewCallback(previewCb);                       &#xD;&#xA;	                        mCamera.startPreview();&#xD;&#xA;	                        previewing = true;&#xD;&#xA;	                        mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	                }&#xD;&#xA;	            });&#xD;&#xA;	        &#xD;&#xA;	        exitButton = (Button)findViewById(R.id.ExitButton);&#xD;&#xA;	&#xD;&#xA;	        exitButton.setOnClickListener(new OnClickListener(){&#xD;&#xA;	        @Override&#xD;&#xA;	        public void onClick(View v) {&#xD;&#xA;	            // TODO Auto-generated method stub&#xD;&#xA;	            finish();&#xD;&#xA;	            System.exit(0);&#xD;&#xA;	        }&#xD;&#xA;	    });&#xD;&#xA;	       &#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	    public void onPause() {&#xD;&#xA;		        super.onPause();&#xD;&#xA;		&#xD;&#xA;		        if (mCamera != null) {&#xD;&#xA;		            mCamera.setPreviewCallback(null);&#xD;&#xA;		            mPreview.getHolder().removeCallback(mPreview);   // you need this line&#xD;&#xA;		            releaseCamera();&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    @Override&#xD;&#xA;	    public void onResume() {&#xD;&#xA;	        super.onResume();  &#xD;&#xA;	        // Get the Camera instance as the activity achieves full user focus&#xD;&#xA;	        try {       &#xD;&#xA;	            mCamera = Camera.open();          &#xD;&#xA;	            mCamera.setPreviewCallback(null);      &#xD;&#xA;	            mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	            FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	            preview.addView(mPreview); &#xD;&#xA;	            mCamera.startPreview();              &#xD;&#xA;	        } catch (Exception e) {      &#xD;&#xA;	           &#xD;&#xA;	        }      &#xD;&#xA;	        &#xD;&#xA;	}&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	    /** A safe way to get an instance of the Camera object. */&#xD;&#xA;	    public static Camera getCameraInstance(){&#xD;&#xA;	        Camera c = null;&#xD;&#xA;	        try {&#xD;&#xA;	            c = Camera.open();&#xD;&#xA;	        } catch (Exception e){&#xD;&#xA;	        }&#xD;&#xA;	        return c;&#xD;&#xA;	    }&#xD;&#xA;	&#xD;&#xA;	    private Runnable doAutoFocus = new Runnable() {&#xD;&#xA;	            public void run() {&#xD;&#xA;	                if (previewing)&#xD;&#xA;	                    mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	       &#xD;&#xA;	      &#xD;&#xA;	    PreviewCallback previewCb = new PreviewCallback() {&#xD;&#xA;	            public void onPreviewFrame(byte[] data, Camera camera) {&#xD;&#xA;	                Camera.Parameters parameters = camera.getParameters();&#xD;&#xA;	                Size size = parameters.getPreviewSize();&#xD;&#xA;	&#xD;&#xA;	                Image barcode = new Image(size.width, size.height, ""Y800"");&#xD;&#xA;	                barcode.setData(data);&#xD;&#xA;	&#xD;&#xA;	                int result = scanner.scanImage(barcode);&#xD;&#xA;	                &#xD;&#xA;	                if (result != 0) {&#xD;&#xA;	                    previewing = false;&#xD;&#xA;	                    mCamera.setPreviewCallback(null);&#xD;&#xA;	                    mCamera.stopPreview();&#xD;&#xA;	                   &#xD;&#xA;	                    SymbolSet syms = scanner.getResults();&#xD;&#xA;	                    for (Symbol sym : syms) {&#xD;&#xA;	                        &#xD;&#xA;	                      String value = new String(sym.getData()); //url scanned from the qr code &#xD;&#xA;	                      if(value.startsWith(""http://192.168.1.6"")){ //if the url starts with &#xD;&#xA;	                  &#xD;&#xA;	                      scanText.setText(""QR Code result: "" + value);&#xD;&#xA;	                        barcodeScanned = true;&#xD;&#xA;	                        //intent for WebViewActivty.java &#xD;&#xA;	                        //The WebViewActivty.java should load the string value which contains the the url &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                      }&#xD;&#xA;	                      else{&#xD;&#xA;	                    	  scanText.setText(""QR Code result 2: "" + value);&#xD;&#xA;	                          barcodeScanned = true;&#xD;&#xA;	                          }&#xD;&#xA;	                       TextView tv = (TextView) findViewById(R.id.scanText);&#xD;&#xA;	                        tv.setMovementMethod(LinkMovementMethod.getInstance());&#xD;&#xA;	                        	&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	           &#xD;&#xA;	                }&#xD;&#xA;	                &#xD;&#xA;	                &#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	&#xD;&#xA;	    // Mimic continuous auto-focusing&#xD;&#xA;	    AutoFocusCallback autoFocusCB = new AutoFocusCallback() {&#xD;&#xA;	            public void onAutoFocus(boolean success, Camera camera) {&#xD;&#xA;	                autoFocusHandler.postDelayed(doAutoFocus, 1000);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	        &#xD;&#xA;	        private void releaseCamera(){&#xD;&#xA;	            if (mCamera != null){&#xD;&#xA;	                mCamera.release();        // release the camera for other applications&#xD;&#xA;	                mCamera = null;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;WebViewActivity.java&#xD;&#xA;&#xD;&#xA;    	package net.sourceforge.zbar.android.CameraTest;&#xD;&#xA;	&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.graphics.Bitmap;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.webkit.WebViewClient;&#xD;&#xA;	&#xD;&#xA;	 &#xD;&#xA;	public class WebViewActivity extends Activity {&#xD;&#xA;	 &#xD;&#xA;		private WebView webView;&#xD;&#xA;	 &#xD;&#xA;		@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;		public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;			super.onCreate(savedInstanceState);&#xD;&#xA;			setContentView(R.layout.webview);&#xD;&#xA;	 &#xD;&#xA;			&#xD;&#xA;			webView = (WebView) findViewById(R.id.web_engine);&#xD;&#xA;			webView.setWebViewClient(new MyWebClient()); &#xD;&#xA;			webView.getSettings().setJavaScriptEnabled(true);&#xD;&#xA;			webView.loadUrl(""http://192.168.1.6/sp/products.php"");//the link should be from the CameraTestActivity&#xD;&#xA;			&#xD;&#xA;	 &#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;	 class MyWebClient extends WebViewClient {&#xD;&#xA;		 @Override&#xD;&#xA;		    public void onPageStarted(WebView view, String url, Bitmap favicon) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;		        super.onPageStarted(view, url, favicon);&#xD;&#xA;		    }&#xD;&#xA;	&#xD;&#xA;		    @Override&#xD;&#xA;		    public boolean shouldOverrideUrlLoading(WebView view, String url) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;	&#xD;&#xA;		        return false;&#xD;&#xA;	&#xD;&#xA;		    }&#xD;&#xA;	 }&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;		&#xD;&#xA;	&#xD;&#xA;		";;
61246418;22635390;3370690;5;d3a47e73-94cb-4aec-ac9b-6c9fdfc1de31;2014-03-25 13:06:04.0;"I have an app that scans qr code. The app returns the url in a string named value. I want to open the url in a webview. How can I call the WebViewActivity in CameraTestActivity? There are comments in the code for the things I want to do but I do not know how. How can I also pass the url from CameraTestActivity to WebViewActivity? Can you please help me? Q&#xD;&#xA;&#xD;&#xA;CameraTestActivity.java&#xD;&#xA;	&#xD;&#xA;	import net.sourceforge.zbar.Config;&#xD;&#xA;	import net.sourceforge.zbar.Image;&#xD;&#xA;	import net.sourceforge.zbar.ImageScanner;&#xD;&#xA;	import net.sourceforge.zbar.Symbol;&#xD;&#xA;	import net.sourceforge.zbar.SymbolSet;&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.content.Intent;&#xD;&#xA;	import android.content.pm.ActivityInfo;&#xD;&#xA;	import android.hardware.Camera;&#xD;&#xA;	import android.hardware.Camera.AutoFocusCallback;&#xD;&#xA;	import android.hardware.Camera.PreviewCallback;&#xD;&#xA;	import android.hardware.Camera.Size;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.os.Handler;&#xD;&#xA;	import android.text.method.LinkMovementMethod;&#xD;&#xA;	import android.view.View;&#xD;&#xA;	import android.view.View.OnClickListener;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.widget.Button;&#xD;&#xA;	import android.widget.FrameLayout;&#xD;&#xA;	import android.widget.TextView;&#xD;&#xA;	/* Import ZBar Class files */&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;	public class CameraTestActivity extends Activity&#xD;&#xA;	{&#xD;&#xA;	    private Camera mCamera;&#xD;&#xA;	    private CameraPreview mPreview;&#xD;&#xA;	    private Handler autoFocusHandler;&#xD;&#xA;	&#xD;&#xA;	    TextView scanText;&#xD;&#xA;	    Button scanButton;&#xD;&#xA;	    Button exitButton;&#xD;&#xA;	    WebView web;&#xD;&#xA;	&#xD;&#xA;	    ImageScanner scanner;&#xD;&#xA;	&#xD;&#xA;	    private boolean barcodeScanned = false;&#xD;&#xA;	    private boolean previewing = true;&#xD;&#xA;	&#xD;&#xA;	    static {&#xD;&#xA;	        System.loadLibrary(""iconv"");&#xD;&#xA;	    } &#xD;&#xA;	&#xD;&#xA;	    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;	        super.onCreate(savedInstanceState);&#xD;&#xA;	&#xD;&#xA;	        setContentView(R.layout.main);&#xD;&#xA;	&#xD;&#xA;	        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);&#xD;&#xA;	&#xD;&#xA;	        autoFocusHandler = new Handler();&#xD;&#xA;	        mCamera = getCameraInstance();&#xD;&#xA;	&#xD;&#xA;	        /* Instance barcode scanner */&#xD;&#xA;	        scanner = new ImageScanner();&#xD;&#xA;	        scanner.setConfig(0, Config.X_DENSITY, 3);&#xD;&#xA;	        scanner.setConfig(0, Config.Y_DENSITY, 3);&#xD;&#xA;	&#xD;&#xA;	        mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	        FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	        preview.addView(mPreview);&#xD;&#xA;	        &#xD;&#xA;	       &#xD;&#xA;	&#xD;&#xA;	        scanText = (TextView)findViewById(R.id.scanText);&#xD;&#xA;	&#xD;&#xA;	        scanButton = (Button)findViewById(R.id.ScanButton);&#xD;&#xA;	&#xD;&#xA;	        scanButton.setOnClickListener(new OnClickListener() {&#xD;&#xA;	                public void onClick(View v) {&#xD;&#xA;	                    if (barcodeScanned) {&#xD;&#xA;	                        barcodeScanned = false;&#xD;&#xA;	                        scanText.setText(""Place code inside the square to scan"");&#xD;&#xA;	                        mCamera.setPreviewCallback(previewCb);                       &#xD;&#xA;	                        mCamera.startPreview();&#xD;&#xA;	                        previewing = true;&#xD;&#xA;	                        mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	                }&#xD;&#xA;	            });&#xD;&#xA;	        &#xD;&#xA;	        exitButton = (Button)findViewById(R.id.ExitButton);&#xD;&#xA;	&#xD;&#xA;	        exitButton.setOnClickListener(new OnClickListener(){&#xD;&#xA;	        @Override&#xD;&#xA;	        public void onClick(View v) {&#xD;&#xA;	            // TODO Auto-generated method stub&#xD;&#xA;	            finish();&#xD;&#xA;	            System.exit(0);&#xD;&#xA;	        }&#xD;&#xA;	    });&#xD;&#xA;	       &#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	    public void onPause() {&#xD;&#xA;		        super.onPause();&#xD;&#xA;		&#xD;&#xA;		        if (mCamera != null) {&#xD;&#xA;		            mCamera.setPreviewCallback(null);&#xD;&#xA;		            mPreview.getHolder().removeCallback(mPreview);   // you need this line&#xD;&#xA;		            releaseCamera();&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    @Override&#xD;&#xA;	    public void onResume() {&#xD;&#xA;	        super.onResume();  &#xD;&#xA;	        // Get the Camera instance as the activity achieves full user focus&#xD;&#xA;	        try {       &#xD;&#xA;	            mCamera = Camera.open();          &#xD;&#xA;	            mCamera.setPreviewCallback(null);      &#xD;&#xA;	            mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	            FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	            preview.addView(mPreview); &#xD;&#xA;	            mCamera.startPreview();              &#xD;&#xA;	        } catch (Exception e) {      &#xD;&#xA;	           &#xD;&#xA;	        }      &#xD;&#xA;	        &#xD;&#xA;	}&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	    /** A safe way to get an instance of the Camera object. */&#xD;&#xA;	    public static Camera getCameraInstance(){&#xD;&#xA;	        Camera c = null;&#xD;&#xA;	        try {&#xD;&#xA;	            c = Camera.open();&#xD;&#xA;	        } catch (Exception e){&#xD;&#xA;	        }&#xD;&#xA;	        return c;&#xD;&#xA;	    }&#xD;&#xA;	&#xD;&#xA;	    private Runnable doAutoFocus = new Runnable() {&#xD;&#xA;	            public void run() {&#xD;&#xA;	                if (previewing)&#xD;&#xA;	                    mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	       &#xD;&#xA;	      &#xD;&#xA;	    PreviewCallback previewCb = new PreviewCallback() {&#xD;&#xA;	            public void onPreviewFrame(byte[] data, Camera camera) {&#xD;&#xA;	                Camera.Parameters parameters = camera.getParameters();&#xD;&#xA;	                Size size = parameters.getPreviewSize();&#xD;&#xA;	&#xD;&#xA;	                Image barcode = new Image(size.width, size.height, ""Y800"");&#xD;&#xA;	                barcode.setData(data);&#xD;&#xA;	&#xD;&#xA;	                int result = scanner.scanImage(barcode);&#xD;&#xA;	                &#xD;&#xA;	                if (result != 0) {&#xD;&#xA;	                    previewing = false;&#xD;&#xA;	                    mCamera.setPreviewCallback(null);&#xD;&#xA;	                    mCamera.stopPreview();&#xD;&#xA;	                   &#xD;&#xA;	                    SymbolSet syms = scanner.getResults();&#xD;&#xA;	                    for (Symbol sym : syms) {&#xD;&#xA;	                        &#xD;&#xA;	                      String value = new String(sym.getData()); //url scanned from the qr code &#xD;&#xA;	                      if(value.startsWith(""http://192.168.1.6"")){ //if the url starts with &#xD;&#xA;	                  &#xD;&#xA;	                      scanText.setText(""QR Code result: "" + value);&#xD;&#xA;	                        barcodeScanned = true;&#xD;&#xA;	                        //intent for WebViewActivty.java &#xD;&#xA;	                        //The WebViewActivty.java should load the string value which contains the the url &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                      }&#xD;&#xA;	                      else{&#xD;&#xA;	                    	  scanText.setText(""QR Code result 2: "" + value);&#xD;&#xA;	                          barcodeScanned = true;&#xD;&#xA;	                          }&#xD;&#xA;	                       TextView tv = (TextView) findViewById(R.id.scanText);&#xD;&#xA;	                        tv.setMovementMethod(LinkMovementMethod.getInstance());&#xD;&#xA;	                        	&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	           &#xD;&#xA;	                }&#xD;&#xA;	                &#xD;&#xA;	                &#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	&#xD;&#xA;	    // Mimic continuous auto-focusing&#xD;&#xA;	    AutoFocusCallback autoFocusCB = new AutoFocusCallback() {&#xD;&#xA;	            public void onAutoFocus(boolean success, Camera camera) {&#xD;&#xA;	                autoFocusHandler.postDelayed(doAutoFocus, 1000);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	        &#xD;&#xA;	        private void releaseCamera(){&#xD;&#xA;	            if (mCamera != null){&#xD;&#xA;	                mCamera.release();        // release the camera for other applications&#xD;&#xA;	                mCamera = null;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;WebViewActivity.java&#xD;&#xA;&#xD;&#xA;    	package net.sourceforge.zbar.android.CameraTest;&#xD;&#xA;	&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.graphics.Bitmap;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.webkit.WebViewClient;&#xD;&#xA;	&#xD;&#xA;	 &#xD;&#xA;	public class WebViewActivity extends Activity {&#xD;&#xA;	 &#xD;&#xA;		private WebView webView;&#xD;&#xA;	 &#xD;&#xA;		@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;		public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;			super.onCreate(savedInstanceState);&#xD;&#xA;			setContentView(R.layout.webview);&#xD;&#xA;	 &#xD;&#xA;			&#xD;&#xA;			webView = (WebView) findViewById(R.id.web_engine);&#xD;&#xA;			webView.setWebViewClient(new MyWebClient()); &#xD;&#xA;			webView.getSettings().setJavaScriptEnabled(true);&#xD;&#xA;			webView.loadUrl(""http://192.168.1.6/sp/products.php"");//the link should be from the CameraTestActivity&#xD;&#xA;			&#xD;&#xA;	 &#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;	 class MyWebClient extends WebViewClient {&#xD;&#xA;		 @Override&#xD;&#xA;		    public void onPageStarted(WebView view, String url, Bitmap favicon) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;		        super.onPageStarted(view, url, favicon);&#xD;&#xA;		    }&#xD;&#xA;	&#xD;&#xA;		    @Override&#xD;&#xA;		    public boolean shouldOverrideUrlLoading(WebView view, String url) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;	&#xD;&#xA;		        return false;&#xD;&#xA;	&#xD;&#xA;		    }&#xD;&#xA;	 }&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;		&#xD;&#xA;	&#xD;&#xA;		";;"added 73 characters in body; edited title"
61246916;22635390;3370690;5;7f82b533-daa5-4b99-9076-9f8dc64a277a;2014-03-25 13:11:33.0;"I have an app that scans qr code. The app returns the url in a string named value. I want to open the url in a webview. How can I call the WebViewActivity in CameraTestActivity? There are comments in the code for the things I want to do but I do not know how. How can I also pass the url from CameraTestActivity to WebViewActivity? Can you please help me? I may be not able to graduate because of this problem? I've been doing this for days. &#xD;&#xA;CameraTestActivity.java&#xD;&#xA;	&#xD;&#xA;	import net.sourceforge.zbar.Config;&#xD;&#xA;	import net.sourceforge.zbar.Image;&#xD;&#xA;	import net.sourceforge.zbar.ImageScanner;&#xD;&#xA;	import net.sourceforge.zbar.Symbol;&#xD;&#xA;	import net.sourceforge.zbar.SymbolSet;&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.content.Intent;&#xD;&#xA;	import android.content.pm.ActivityInfo;&#xD;&#xA;	import android.hardware.Camera;&#xD;&#xA;	import android.hardware.Camera.AutoFocusCallback;&#xD;&#xA;	import android.hardware.Camera.PreviewCallback;&#xD;&#xA;	import android.hardware.Camera.Size;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.os.Handler;&#xD;&#xA;	import android.text.method.LinkMovementMethod;&#xD;&#xA;	import android.view.View;&#xD;&#xA;	import android.view.View.OnClickListener;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.widget.Button;&#xD;&#xA;	import android.widget.FrameLayout;&#xD;&#xA;	import android.widget.TextView;&#xD;&#xA;	/* Import ZBar Class files */&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;	public class CameraTestActivity extends Activity&#xD;&#xA;	{&#xD;&#xA;	    private Camera mCamera;&#xD;&#xA;	    private CameraPreview mPreview;&#xD;&#xA;	    private Handler autoFocusHandler;&#xD;&#xA;	&#xD;&#xA;	    TextView scanText;&#xD;&#xA;	    Button scanButton;&#xD;&#xA;	    Button exitButton;&#xD;&#xA;	    WebView web;&#xD;&#xA;	&#xD;&#xA;	    ImageScanner scanner;&#xD;&#xA;	&#xD;&#xA;	    private boolean barcodeScanned = false;&#xD;&#xA;	    private boolean previewing = true;&#xD;&#xA;	&#xD;&#xA;	    static {&#xD;&#xA;	        System.loadLibrary(""iconv"");&#xD;&#xA;	    } &#xD;&#xA;	&#xD;&#xA;	    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;	        super.onCreate(savedInstanceState);&#xD;&#xA;	&#xD;&#xA;	        setContentView(R.layout.main);&#xD;&#xA;	&#xD;&#xA;	        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);&#xD;&#xA;	&#xD;&#xA;	        autoFocusHandler = new Handler();&#xD;&#xA;	        mCamera = getCameraInstance();&#xD;&#xA;	&#xD;&#xA;	        /* Instance barcode scanner */&#xD;&#xA;	        scanner = new ImageScanner();&#xD;&#xA;	        scanner.setConfig(0, Config.X_DENSITY, 3);&#xD;&#xA;	        scanner.setConfig(0, Config.Y_DENSITY, 3);&#xD;&#xA;	&#xD;&#xA;	        mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	        FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	        preview.addView(mPreview);&#xD;&#xA;	        &#xD;&#xA;	       &#xD;&#xA;	&#xD;&#xA;	        scanText = (TextView)findViewById(R.id.scanText);&#xD;&#xA;	&#xD;&#xA;	        scanButton = (Button)findViewById(R.id.ScanButton);&#xD;&#xA;	&#xD;&#xA;	        scanButton.setOnClickListener(new OnClickListener() {&#xD;&#xA;	                public void onClick(View v) {&#xD;&#xA;	                    if (barcodeScanned) {&#xD;&#xA;	                        barcodeScanned = false;&#xD;&#xA;	                        scanText.setText(""Place code inside the square to scan"");&#xD;&#xA;	                        mCamera.setPreviewCallback(previewCb);                       &#xD;&#xA;	                        mCamera.startPreview();&#xD;&#xA;	                        previewing = true;&#xD;&#xA;	                        mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	                }&#xD;&#xA;	            });&#xD;&#xA;	        &#xD;&#xA;	        exitButton = (Button)findViewById(R.id.ExitButton);&#xD;&#xA;	&#xD;&#xA;	        exitButton.setOnClickListener(new OnClickListener(){&#xD;&#xA;	        @Override&#xD;&#xA;	        public void onClick(View v) {&#xD;&#xA;	            // TODO Auto-generated method stub&#xD;&#xA;	            finish();&#xD;&#xA;	            System.exit(0);&#xD;&#xA;	        }&#xD;&#xA;	    });&#xD;&#xA;	       &#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	    public void onPause() {&#xD;&#xA;		        super.onPause();&#xD;&#xA;		&#xD;&#xA;		        if (mCamera != null) {&#xD;&#xA;		            mCamera.setPreviewCallback(null);&#xD;&#xA;		            mPreview.getHolder().removeCallback(mPreview);   // you need this line&#xD;&#xA;		            releaseCamera();&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    @Override&#xD;&#xA;	    public void onResume() {&#xD;&#xA;	        super.onResume();  &#xD;&#xA;	        // Get the Camera instance as the activity achieves full user focus&#xD;&#xA;	        try {       &#xD;&#xA;	            mCamera = Camera.open();          &#xD;&#xA;	            mCamera.setPreviewCallback(null);      &#xD;&#xA;	            mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	            FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	            preview.addView(mPreview); &#xD;&#xA;	            mCamera.startPreview();              &#xD;&#xA;	        } catch (Exception e) {      &#xD;&#xA;	           &#xD;&#xA;	        }      &#xD;&#xA;	        &#xD;&#xA;	}&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	    /** A safe way to get an instance of the Camera object. */&#xD;&#xA;	    public static Camera getCameraInstance(){&#xD;&#xA;	        Camera c = null;&#xD;&#xA;	        try {&#xD;&#xA;	            c = Camera.open();&#xD;&#xA;	        } catch (Exception e){&#xD;&#xA;	        }&#xD;&#xA;	        return c;&#xD;&#xA;	    }&#xD;&#xA;	&#xD;&#xA;	    private Runnable doAutoFocus = new Runnable() {&#xD;&#xA;	            public void run() {&#xD;&#xA;	                if (previewing)&#xD;&#xA;	                    mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	       &#xD;&#xA;	      &#xD;&#xA;	    PreviewCallback previewCb = new PreviewCallback() {&#xD;&#xA;	            public void onPreviewFrame(byte[] data, Camera camera) {&#xD;&#xA;	                Camera.Parameters parameters = camera.getParameters();&#xD;&#xA;	                Size size = parameters.getPreviewSize();&#xD;&#xA;	&#xD;&#xA;	                Image barcode = new Image(size.width, size.height, ""Y800"");&#xD;&#xA;	                barcode.setData(data);&#xD;&#xA;	&#xD;&#xA;	                int result = scanner.scanImage(barcode);&#xD;&#xA;	                &#xD;&#xA;	                if (result != 0) {&#xD;&#xA;	                    previewing = false;&#xD;&#xA;	                    mCamera.setPreviewCallback(null);&#xD;&#xA;	                    mCamera.stopPreview();&#xD;&#xA;	                   &#xD;&#xA;	                    SymbolSet syms = scanner.getResults();&#xD;&#xA;	                    for (Symbol sym : syms) {&#xD;&#xA;	                        &#xD;&#xA;	                      String value = new String(sym.getData()); //url scanned from the qr code &#xD;&#xA;	                      if(value.startsWith(""http://192.168.1.6"")){ //if the url starts with &#xD;&#xA;	                  &#xD;&#xA;	                      scanText.setText(""QR Code result: "" + value);&#xD;&#xA;	                        barcodeScanned = true;&#xD;&#xA;	                        //intent for WebViewActivty.java &#xD;&#xA;	                        //The WebViewActivty.java should load the string value which contains the the url &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                      }&#xD;&#xA;	                      else{&#xD;&#xA;	                    	  scanText.setText(""QR Code result 2: "" + value);&#xD;&#xA;	                          barcodeScanned = true;&#xD;&#xA;	                          }&#xD;&#xA;	                       TextView tv = (TextView) findViewById(R.id.scanText);&#xD;&#xA;	                        tv.setMovementMethod(LinkMovementMethod.getInstance());&#xD;&#xA;	                        	&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	           &#xD;&#xA;	                }&#xD;&#xA;	                &#xD;&#xA;	                &#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	&#xD;&#xA;	    // Mimic continuous auto-focusing&#xD;&#xA;	    AutoFocusCallback autoFocusCB = new AutoFocusCallback() {&#xD;&#xA;	            public void onAutoFocus(boolean success, Camera camera) {&#xD;&#xA;	                autoFocusHandler.postDelayed(doAutoFocus, 1000);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	        &#xD;&#xA;	        private void releaseCamera(){&#xD;&#xA;	            if (mCamera != null){&#xD;&#xA;	                mCamera.release();        // release the camera for other applications&#xD;&#xA;	                mCamera = null;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;WebViewActivity.java&#xD;&#xA;&#xD;&#xA;    	package net.sourceforge.zbar.android.CameraTest;&#xD;&#xA;	&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.graphics.Bitmap;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.webkit.WebViewClient;&#xD;&#xA;	&#xD;&#xA;	 &#xD;&#xA;	public class WebViewActivity extends Activity {&#xD;&#xA;	 &#xD;&#xA;		private WebView webView;&#xD;&#xA;	 &#xD;&#xA;		@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;		public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;			super.onCreate(savedInstanceState);&#xD;&#xA;			setContentView(R.layout.webview);&#xD;&#xA;	 &#xD;&#xA;			&#xD;&#xA;			webView = (WebView) findViewById(R.id.web_engine);&#xD;&#xA;			webView.setWebViewClient(new MyWebClient()); &#xD;&#xA;			webView.getSettings().setJavaScriptEnabled(true);&#xD;&#xA;			webView.loadUrl(""http://192.168.1.6/sp/products.php"");//the link should be from the CameraTestActivity&#xD;&#xA;			&#xD;&#xA;	 &#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;	 class MyWebClient extends WebViewClient {&#xD;&#xA;		 @Override&#xD;&#xA;		    public void onPageStarted(WebView view, String url, Bitmap favicon) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;		        super.onPageStarted(view, url, favicon);&#xD;&#xA;		    }&#xD;&#xA;	&#xD;&#xA;		    @Override&#xD;&#xA;		    public boolean shouldOverrideUrlLoading(WebView view, String url) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;	&#xD;&#xA;		        return false;&#xD;&#xA;	&#xD;&#xA;		    }&#xD;&#xA;	 }&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;		&#xD;&#xA;	&#xD;&#xA;		";;"added 73 characters in body; edited title"
61249680;22635390;3370690;5;f652c166-f604-4c37-89be-bdd51706456d;2014-03-25 13:43:29.0;"I have an app that scans qr code. The app returns the url in a string named value. I want to open the url in a webview. How can I call the WebViewActivity in CameraTestActivity the the WebViewActivity uses the url from the CameraTestActvity for loading the website. There are comments in the code for the things I want to do but I do not know how.  Can you please help me? I may be not able to graduate because of this problem? I've been doing this for days. &#xD;&#xA;&#xD;&#xA;CameraTestActivity.java&#xD;&#xA;	&#xD;&#xA;	import net.sourceforge.zbar.Config;&#xD;&#xA;	import net.sourceforge.zbar.Image;&#xD;&#xA;	import net.sourceforge.zbar.ImageScanner;&#xD;&#xA;	import net.sourceforge.zbar.Symbol;&#xD;&#xA;	import net.sourceforge.zbar.SymbolSet;&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.content.Intent;&#xD;&#xA;	import android.content.pm.ActivityInfo;&#xD;&#xA;	import android.hardware.Camera;&#xD;&#xA;	import android.hardware.Camera.AutoFocusCallback;&#xD;&#xA;	import android.hardware.Camera.PreviewCallback;&#xD;&#xA;	import android.hardware.Camera.Size;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.os.Handler;&#xD;&#xA;	import android.text.method.LinkMovementMethod;&#xD;&#xA;	import android.view.View;&#xD;&#xA;	import android.view.View.OnClickListener;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.widget.Button;&#xD;&#xA;	import android.widget.FrameLayout;&#xD;&#xA;	import android.widget.TextView;&#xD;&#xA;	/* Import ZBar Class files */&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;	public class CameraTestActivity extends Activity&#xD;&#xA;	{&#xD;&#xA;	    private Camera mCamera;&#xD;&#xA;	    private CameraPreview mPreview;&#xD;&#xA;	    private Handler autoFocusHandler;&#xD;&#xA;	&#xD;&#xA;	    TextView scanText;&#xD;&#xA;	    Button scanButton;&#xD;&#xA;	    Button exitButton;&#xD;&#xA;	    WebView web;&#xD;&#xA;	&#xD;&#xA;	    ImageScanner scanner;&#xD;&#xA;	&#xD;&#xA;	    private boolean barcodeScanned = false;&#xD;&#xA;	    private boolean previewing = true;&#xD;&#xA;	&#xD;&#xA;	    static {&#xD;&#xA;	        System.loadLibrary(""iconv"");&#xD;&#xA;	    } &#xD;&#xA;	&#xD;&#xA;	    public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;	        super.onCreate(savedInstanceState);&#xD;&#xA;	&#xD;&#xA;	        setContentView(R.layout.main);&#xD;&#xA;	&#xD;&#xA;	        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);&#xD;&#xA;	&#xD;&#xA;	        autoFocusHandler = new Handler();&#xD;&#xA;	        mCamera = getCameraInstance();&#xD;&#xA;	&#xD;&#xA;	        /* Instance barcode scanner */&#xD;&#xA;	        scanner = new ImageScanner();&#xD;&#xA;	        scanner.setConfig(0, Config.X_DENSITY, 3);&#xD;&#xA;	        scanner.setConfig(0, Config.Y_DENSITY, 3);&#xD;&#xA;	&#xD;&#xA;	        mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	        FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	        preview.addView(mPreview);&#xD;&#xA;	        &#xD;&#xA;	       &#xD;&#xA;	&#xD;&#xA;	        scanText = (TextView)findViewById(R.id.scanText);&#xD;&#xA;	&#xD;&#xA;	        scanButton = (Button)findViewById(R.id.ScanButton);&#xD;&#xA;	&#xD;&#xA;	        scanButton.setOnClickListener(new OnClickListener() {&#xD;&#xA;	                public void onClick(View v) {&#xD;&#xA;	                    if (barcodeScanned) {&#xD;&#xA;	                        barcodeScanned = false;&#xD;&#xA;	                        scanText.setText(""Place code inside the square to scan"");&#xD;&#xA;	                        mCamera.setPreviewCallback(previewCb);                       &#xD;&#xA;	                        mCamera.startPreview();&#xD;&#xA;	                        previewing = true;&#xD;&#xA;	                        mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	                }&#xD;&#xA;	            });&#xD;&#xA;	        &#xD;&#xA;	        exitButton = (Button)findViewById(R.id.ExitButton);&#xD;&#xA;	&#xD;&#xA;	        exitButton.setOnClickListener(new OnClickListener(){&#xD;&#xA;	        @Override&#xD;&#xA;	        public void onClick(View v) {&#xD;&#xA;	            // TODO Auto-generated method stub&#xD;&#xA;	            finish();&#xD;&#xA;	            System.exit(0);&#xD;&#xA;	        }&#xD;&#xA;	    });&#xD;&#xA;	       &#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	    public void onPause() {&#xD;&#xA;		        super.onPause();&#xD;&#xA;		&#xD;&#xA;		        if (mCamera != null) {&#xD;&#xA;		            mCamera.setPreviewCallback(null);&#xD;&#xA;		            mPreview.getHolder().removeCallback(mPreview);   // you need this line&#xD;&#xA;		            releaseCamera();&#xD;&#xA;	        }&#xD;&#xA;	    }&#xD;&#xA;	    &#xD;&#xA;	    @Override&#xD;&#xA;	    public void onResume() {&#xD;&#xA;	        super.onResume();  &#xD;&#xA;	        // Get the Camera instance as the activity achieves full user focus&#xD;&#xA;	        try {       &#xD;&#xA;	            mCamera = Camera.open();          &#xD;&#xA;	            mCamera.setPreviewCallback(null);      &#xD;&#xA;	            mPreview = new CameraPreview(this, mCamera, previewCb, autoFocusCB);&#xD;&#xA;	            FrameLayout preview = (FrameLayout)findViewById(R.id.cameraPreview);&#xD;&#xA;	            preview.addView(mPreview); &#xD;&#xA;	            mCamera.startPreview();              &#xD;&#xA;	        } catch (Exception e) {      &#xD;&#xA;	           &#xD;&#xA;	        }      &#xD;&#xA;	        &#xD;&#xA;	}&#xD;&#xA;	    &#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;	    /** A safe way to get an instance of the Camera object. */&#xD;&#xA;	    public static Camera getCameraInstance(){&#xD;&#xA;	        Camera c = null;&#xD;&#xA;	        try {&#xD;&#xA;	            c = Camera.open();&#xD;&#xA;	        } catch (Exception e){&#xD;&#xA;	        }&#xD;&#xA;	        return c;&#xD;&#xA;	    }&#xD;&#xA;	&#xD;&#xA;	    private Runnable doAutoFocus = new Runnable() {&#xD;&#xA;	            public void run() {&#xD;&#xA;	                if (previewing)&#xD;&#xA;	                    mCamera.autoFocus(autoFocusCB);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	       &#xD;&#xA;	      &#xD;&#xA;	    PreviewCallback previewCb = new PreviewCallback() {&#xD;&#xA;	            public void onPreviewFrame(byte[] data, Camera camera) {&#xD;&#xA;	                Camera.Parameters parameters = camera.getParameters();&#xD;&#xA;	                Size size = parameters.getPreviewSize();&#xD;&#xA;	&#xD;&#xA;	                Image barcode = new Image(size.width, size.height, ""Y800"");&#xD;&#xA;	                barcode.setData(data);&#xD;&#xA;	&#xD;&#xA;	                int result = scanner.scanImage(barcode);&#xD;&#xA;	                &#xD;&#xA;	                if (result != 0) {&#xD;&#xA;	                    previewing = false;&#xD;&#xA;	                    mCamera.setPreviewCallback(null);&#xD;&#xA;	                    mCamera.stopPreview();&#xD;&#xA;	                   &#xD;&#xA;	                    SymbolSet syms = scanner.getResults();&#xD;&#xA;	                    for (Symbol sym : syms) {&#xD;&#xA;	                        &#xD;&#xA;	                      String value = new String(sym.getData()); //url scanned from the qr code &#xD;&#xA;	                      if(value.startsWith(""http://192.168.1.6"")){ //if the url starts with &#xD;&#xA;	                  &#xD;&#xA;	                      scanText.setText(""QR Code result: "" + value);&#xD;&#xA;	                        barcodeScanned = true;&#xD;&#xA;	                        //intent for WebViewActivty.java &#xD;&#xA;	                        //The WebViewActivty.java should load the string value which contains the the url &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                        &#xD;&#xA;	                      }&#xD;&#xA;	                      else{&#xD;&#xA;	                    	  scanText.setText(""QR Code result 2: "" + value);&#xD;&#xA;	                          barcodeScanned = true;&#xD;&#xA;	                          }&#xD;&#xA;	                       TextView tv = (TextView) findViewById(R.id.scanText);&#xD;&#xA;	                        tv.setMovementMethod(LinkMovementMethod.getInstance());&#xD;&#xA;	                        	&#xD;&#xA;	                        &#xD;&#xA;	                    }&#xD;&#xA;	           &#xD;&#xA;	                }&#xD;&#xA;	                &#xD;&#xA;	                &#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	&#xD;&#xA;	    // Mimic continuous auto-focusing&#xD;&#xA;	    AutoFocusCallback autoFocusCB = new AutoFocusCallback() {&#xD;&#xA;	            public void onAutoFocus(boolean success, Camera camera) {&#xD;&#xA;	                autoFocusHandler.postDelayed(doAutoFocus, 1000);&#xD;&#xA;	            }&#xD;&#xA;	        };&#xD;&#xA;	        &#xD;&#xA;	        private void releaseCamera(){&#xD;&#xA;	            if (mCamera != null){&#xD;&#xA;	                mCamera.release();        // release the camera for other applications&#xD;&#xA;	                mCamera = null;&#xD;&#xA;	            }&#xD;&#xA;	        }&#xD;&#xA;	}&#xD;&#xA;&#xD;&#xA;WebViewActivity.java&#xD;&#xA;&#xD;&#xA;    	package net.sourceforge.zbar.android.CameraTest;&#xD;&#xA;	&#xD;&#xA;	import android.annotation.SuppressLint;&#xD;&#xA;	import android.app.Activity;&#xD;&#xA;	import android.graphics.Bitmap;&#xD;&#xA;	import android.os.Bundle;&#xD;&#xA;	import android.webkit.WebView;&#xD;&#xA;	import android.webkit.WebViewClient;&#xD;&#xA;	&#xD;&#xA;	 &#xD;&#xA;	public class WebViewActivity extends Activity {&#xD;&#xA;	 &#xD;&#xA;		private WebView webView;&#xD;&#xA;	 &#xD;&#xA;		@SuppressLint(""SetJavaScriptEnabled"")&#xD;&#xA;		public void onCreate(Bundle savedInstanceState) {&#xD;&#xA;			super.onCreate(savedInstanceState);&#xD;&#xA;			setContentView(R.layout.webview);&#xD;&#xA;	 &#xD;&#xA;			&#xD;&#xA;			webView = (WebView) findViewById(R.id.web_engine);&#xD;&#xA;			webView.setWebViewClient(new MyWebClient()); &#xD;&#xA;			webView.getSettings().setJavaScriptEnabled(true);&#xD;&#xA;			webView.loadUrl(""http://192.168.1.6/sp/products.php"");//the link should be from the CameraTestActivity&#xD;&#xA;			&#xD;&#xA;	 &#xD;&#xA;		}&#xD;&#xA;	}	&#xD;&#xA;	 class MyWebClient extends WebViewClient {&#xD;&#xA;		 @Override&#xD;&#xA;		    public void onPageStarted(WebView view, String url, Bitmap favicon) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;		        super.onPageStarted(view, url, favicon);&#xD;&#xA;		    }&#xD;&#xA;	&#xD;&#xA;		    @Override&#xD;&#xA;		    public boolean shouldOverrideUrlLoading(WebView view, String url) {&#xD;&#xA;		        // TODO Auto-generated method stub&#xD;&#xA;	&#xD;&#xA;		        return false;&#xD;&#xA;	&#xD;&#xA;		    }&#xD;&#xA;	 }&#xD;&#xA;	&#xD;&#xA;	&#xD;&#xA;		&#xD;&#xA;	&#xD;&#xA;		";;added 19 characters in body
