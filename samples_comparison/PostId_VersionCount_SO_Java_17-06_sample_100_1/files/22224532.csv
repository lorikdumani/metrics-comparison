Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
59701960;22224532;1795530;2;486dd9bd-c85f-4816-b701-9d315f5f9ea1;2014-03-06 12:28:07.0;"> Is it possible to align the column for labels of the two panels?&#xD;&#xA;&#xD;&#xA;No it's not because [DesignGridLayout](https://designgridlayout.java.net/usage.html) works with grids ***within*** the same container. So if your components are placed in different panels there's nothing `DesignGridLayout` can do to ensure the alignment of cross-panels components.&#xD;&#xA;&#xD;&#xA;In this context you can only look for workarounds (if any). Be aware of this: [Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?](http://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi) Yes, we should. So setting a fixed labels size is not an option either. &#xD;&#xA;&#xD;&#xA;";;
59734727;22224532;1795530;5;f88a4b96-612c-4938-81f0-27d593b57774;2014-03-06 18:51:32.0;"> Is it possible to align the column for labels of the two panels?&#xD;&#xA;&#xD;&#xA;No it's not because [DesignGridLayout](https://designgridlayout.java.net/usage.html) works with grids ***within*** the same container. So if your components are placed in different panels there's nothing `DesignGridLayout` can do to ensure the alignment of cross-panels components.&#xD;&#xA;&#xD;&#xA;In this context you can only look for workarounds (if any). Be aware of this: [Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?](http://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi) Yes, we should. So setting a fixed labels size is not an option either.&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;## Some thoughts ###&#xD;&#xA;&#xD;&#xA;I was thinking about this matter and it's not a `DesignGridLayout` *limitation* but this is about how layout managers work. If you take a look to [How Layout Managers work](http://docs.oracle.com/javase/tutorial/uiswing/layout/howLayoutWorks.html) section of [Laying Out Components Within a Container](http://docs.oracle.com/javase/tutorial/uiswing/layout/index.html) lesson, it states this:&#xD;&#xA;&#xD;&#xA;>  1. Layout managers basically do two things:    &#xD;&#xA;> &#xD;&#xA;>  - Calculate the minimum/preferred/maximum sizes for a container.&#xD;&#xA;>  - Lay out the container's children.&#xD;&#xA;> &#xD;&#xA;> Layout managers do this based on the provided constraints, the&#xD;&#xA;> container's properties (such as insets) and on the children's&#xD;&#xA;> minimum/preferred/maximum sizes. If a child is itself a container then&#xD;&#xA;> its own layout manger is used to get its minimum/preferred/maximum&#xD;&#xA;> sizes and to lay it out.&#xD;&#xA;&#xD;&#xA;This means if a child itself is a container then it may have its own layout manager to lay out its own children. This property makes this children independent of its ancestor (about laying out components). If you had a ""global"" (just to name it somehow) layout manager that aligns components ***within*** two separate containers, then it would be breaking the aforementioned contract because children containers wouldn't be independent of their ancestors.&#xD;&#xA;&#xD;&#xA;I'm relatively new to this layout managers stuff but I don't know any layout manager that allows you do what you need (or you feel you need), because they don't have to, actually. IMHO you should reconsider if you really need all those panels or you can manage all your components in a single container. Maybe there's a more suitable layout manager to your needs in this list:&#xD;&#xA;&#xD;&#xA; - [MiG Layout](http://www.miglayout.com/)&#xD;&#xA; - [FormLayout](http://www.jgoodies.com/freeware/libraries/forms/)&#xD;&#xA; - [GridBagLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html) (not my favorite at all but it might work)&#xD;&#xA;&#xD;&#xA;";;Added some thoughts
59735066;22224532;1795530;5;51543e0b-2e1b-4ea0-a839-3eb6713b9f8f;2014-03-06 18:56:43.0;"> Is it possible to align the column for labels of the two panels?&#xD;&#xA;&#xD;&#xA;No it's not because [DesignGridLayout](https://designgridlayout.java.net/usage.html) works with grids ***within*** the same container. So if your components are placed in different panels there's nothing `DesignGridLayout` can do to ensure the alignment of cross-panels components.&#xD;&#xA;&#xD;&#xA;In this context you can only look for workarounds (if any). Be aware of this: [Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?](http://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi) Yes, we should. So setting a fixed labels size is not an option either.&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;## Some thoughts ###&#xD;&#xA;&#xD;&#xA;I was thinking about this matter and it's not a `DesignGridLayout` *limitation* but this is about how layout managers work. If you take a look to [How Layout Managers work](http://docs.oracle.com/javase/tutorial/uiswing/layout/howLayoutWorks.html) section of [Laying Out Components Within a Container](http://docs.oracle.com/javase/tutorial/uiswing/layout/index.html) lesson, it states this:&#xD;&#xA;&#xD;&#xA;>  1. Layout managers basically do two things:    &#xD;&#xA;> &#xD;&#xA;>  - Calculate the minimum/preferred/maximum sizes for a container.&#xD;&#xA;>  - Lay out the container's children.&#xD;&#xA;> &#xD;&#xA;> Layout managers do this based on the provided constraints, the&#xD;&#xA;> container's properties (such as insets) and on the children's&#xD;&#xA;> minimum/preferred/maximum sizes. If a child is itself a container then&#xD;&#xA;> its own layout manger is used to get its minimum/preferred/maximum&#xD;&#xA;> sizes and to lay it out.&#xD;&#xA;&#xD;&#xA;This means if a child itself is a container then it may have its own layout manager to lay out its own children components. This property makes this container independent of its ancestor (about laying out components). If you had a ""global"" (just to name it somehow) layout manager that aligns components ***within*** two separate containers, then it would be breaking the aforementioned contract because children containers wouldn't be independent of their ancestors.&#xD;&#xA;&#xD;&#xA;I'm relatively new to this layout managers stuff but I don't know any layout manager that allows you do what you need (or you feel you need), because they don't have to, actually. IMHO you should reconsider if you really need all those panels or you can manage all your components in a single container. Maybe there's a more suitable layout manager to your needs in this list:&#xD;&#xA;&#xD;&#xA; - [MiG Layout](http://www.miglayout.com/)&#xD;&#xA; - [FormLayout](http://www.jgoodies.com/freeware/libraries/forms/)&#xD;&#xA; - [GridBagLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html) (not my favorite at all but it might work)&#xD;&#xA;&#xD;&#xA;";;Added some thoughts
146728392;22224532;-1;5;c24e80d8-c170-4605-affa-b8a36446d67c;2017-05-23 11:57:49.0;"> Is it possible to align the column for labels of the two panels?&#xD;&#xA;&#xD;&#xA;No it's not because [DesignGridLayout](https://designgridlayout.java.net/usage.html) works with grids ***within*** the same container. So if your components are placed in different panels there's nothing `DesignGridLayout` can do to ensure the alignment of cross-panels components.&#xD;&#xA;&#xD;&#xA;In this context you can only look for workarounds (if any). Be aware of this: [Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?](https://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi) Yes, we should. So setting a fixed labels size is not an option either.&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;## Some thoughts ###&#xD;&#xA;&#xD;&#xA;I was thinking about this matter and it's not a `DesignGridLayout` *limitation* but this is about how layout managers work. If you take a look to [How Layout Managers work](http://docs.oracle.com/javase/tutorial/uiswing/layout/howLayoutWorks.html) section of [Laying Out Components Within a Container](http://docs.oracle.com/javase/tutorial/uiswing/layout/index.html) lesson, it states this:&#xD;&#xA;&#xD;&#xA;>  1. Layout managers basically do two things:    &#xD;&#xA;> &#xD;&#xA;>  - Calculate the minimum/preferred/maximum sizes for a container.&#xD;&#xA;>  - Lay out the container's children.&#xD;&#xA;> &#xD;&#xA;> Layout managers do this based on the provided constraints, the&#xD;&#xA;> container's properties (such as insets) and on the children's&#xD;&#xA;> minimum/preferred/maximum sizes. If a child is itself a container then&#xD;&#xA;> its own layout manger is used to get its minimum/preferred/maximum&#xD;&#xA;> sizes and to lay it out.&#xD;&#xA;&#xD;&#xA;This means if a child itself is a container then it may have its own layout manager to lay out its own children components. This property makes this container independent of its ancestor (about laying out components). If you had a ""global"" (just to name it somehow) layout manager that aligns components ***within*** two separate containers, then it would be breaking the aforementioned contract because children containers wouldn't be independent of their ancestors.&#xD;&#xA;&#xD;&#xA;I'm relatively new to this layout managers stuff but I don't know any layout manager that allows you do what you need (or you feel you need), because they don't have to, actually. IMHO you should reconsider if you really need all those panels or you can manage all your components in a single container. Maybe there's a more suitable layout manager to your needs in this list:&#xD;&#xA;&#xD;&#xA; - [MiG Layout](http://www.miglayout.com/)&#xD;&#xA; - [FormLayout](http://www.jgoodies.com/freeware/libraries/forms/)&#xD;&#xA; - [GridBagLayout](http://docs.oracle.com/javase/tutorial/uiswing/layout/gridbag.html) (not my favorite at all but it might work)&#xD;&#xA;&#xD;&#xA;";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
