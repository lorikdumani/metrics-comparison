Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
50075290;19587418;1570523;2;12743ae0-a069-43a4-bb55-9163f6494df2;2013-10-25 10:31:24.0;"Define `RedirectAttributes` method parameter in the the `handler` method that handles `form submission` from first page:&#xD;&#xA;&#xD;&#xA;        @RequestMapping(""/sendDataToNextPage"", method = RequestMethod.POST)&#xD;&#xA;        public String submitForm(@ModelAttribute(""formBackingObj"") @Valid &#xD;&#xA;        FormBackingObj formBackingObj,BindingResult result, &#xD;&#xA;        RedirectAttributes redirectAttributes) {&#xD;&#xA;        ...&#xD;&#xA;        DataObject data = new DataObject();&#xD;&#xA;        redirectAttributes.addFlashAttribute(""dataForNextPage"", data);&#xD;&#xA;        ...&#xD;&#xA;        return ""redirect:/secondPageURL"";&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;The flash attributes are saved temporarily before the redirect (typically in the session) and are available to the request after the redirect and removed immediately.&#xD;&#xA;&#xD;&#xA;The above redirect will cause the client (browser) to send a request to `/secondPageURL`. So you need to have a handler method to handle this request, and there you can get access to the `DataObject data` set in the `submitForm` handler method:&#xD;&#xA;&#xD;&#xA;    @RequestMapping(value = ""/secondPageURL"", method = RequestMethod.GET)&#xD;&#xA;    public String gotoCountrySavePage(&#xD;&#xA;    			@ModelAttribute(""dataForNextPage"") DataObject data,&#xD;&#xA;    			ModelMap model) {&#xD;&#xA;    ...&#xD;&#xA;    //data is the DataObject that was set to redirectAttributes in submitForm method&#xD;&#xA;    return ""pageToBeShown"";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Here `DataObject data` is the object that contains data from the `submitForm` method.";;
111207980;19587418;2893903;5;bc50a4e7-dedd-4fdc-8f26-d44ef021e2f1;2016-02-18 22:01:41.0;"Define `RedirectAttributes` method parameter in the the `handler` method that handles `form submission` from first page:&#xD;&#xA;&#xD;&#xA;    @RequestMapping(""/sendDataToNextPage"", method = RequestMethod.POST)&#xD;&#xA;    public String submitForm(&#xD;&#xA;                @ModelAttribute(""formBackingObj"") @Valid FormBackingObj formBackingObj,&#xD;&#xA;                BindingResult result, &#xD;&#xA;                RedirectAttributes redirectAttributes) {&#xD;&#xA;        ...&#xD;&#xA;        DataObject data = new DataObject();&#xD;&#xA;        redirectAttributes.addFlashAttribute(""dataForNextPage"", data);&#xD;&#xA;        ...&#xD;&#xA;        return ""redirect:/secondPageURL"";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;The flash attributes are saved temporarily before the redirect (typically in the session) and are available to the request after the redirect and removed immediately.&#xD;&#xA;&#xD;&#xA;The above redirect will cause the client (browser) to send a request to `/secondPageURL`. So you need to have a handler method to handle this request, and there you can get access to the `DataObject data` set in the `submitForm` handler method:&#xD;&#xA;&#xD;&#xA;    @RequestMapping(value = ""/secondPageURL"", method = RequestMethod.GET)&#xD;&#xA;    public String gotoCountrySavePage(&#xD;&#xA;    			@ModelAttribute(""dataForNextPage"") DataObject data,&#xD;&#xA;    			ModelMap model) {&#xD;&#xA;        ...&#xD;&#xA;        //data is the DataObject that was set to redirectAttributes in submitForm method&#xD;&#xA;        return ""pageToBeShown"";&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;Here `DataObject data` is the object that contains data from the `submitForm` method.";;fix formatting
