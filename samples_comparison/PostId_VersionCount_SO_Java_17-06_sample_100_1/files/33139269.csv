Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
101853162;33139269;3462681;2;7f587c9b-f685-4b49-9c8d-3bc25c6e3f83;2015-10-15 03:19:52.0;" try to do like this:&#xD;&#xA;&#xD;&#xA;    import java.util.Comparator;&#xD;&#xA;        public class LastNameComparator implements Comparator<Person>{    &#xD;&#xA;    	@Override&#xD;&#xA;    	public int compare(Person o1, Person o2) {&#xD;&#xA;    		&#xD;&#xA;    		return o1.lastname.compareTo(o2.lastname);&#xD;&#xA;    	}&#xD;&#xA;        }";;
101853396;33139269;3462681;5;3288f059-44ac-4b23-930e-b4e066262d6f;2015-10-15 03:27:47.0;"first you have to remove `comparable interface` from the `person class` and its all implementations: &#xD;&#xA;try to do like this:&#xD;&#xA;&#xD;&#xA;    import java.util.Comparator;&#xD;&#xA;        public class LastNameComparator implements Comparator<Person>{    &#xD;&#xA;    	@Override&#xD;&#xA;    	public int compare(Person o1, Person o2) {&#xD;&#xA;    		&#xD;&#xA;    		return o1.lastname.compareTo(o2.lastname);&#xD;&#xA;    	}&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;And in `main method` do the following for sort by Last Name:&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA; &#xD;&#xA;&#xD;&#xA;    Collections.sort(pers,new LastNameComparator());&#xD;&#xA;    	Iterator<Person> it = pers.iterator();&#xD;&#xA;    	while(it.hasNext()){&#xD;&#xA;    		System.out.println(it.next());&#xD;&#xA;    	   }";;added more  content
