Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
56833731;21450993;1450389;2;6a22446d-0492-4bc9-983e-19650baa28c8;2014-01-30 08:14:54.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and updates the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem. And how can I fix it?**&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(params)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""My Subscription""&#xD;&#xA;&#xD;&#xA;        ###For some reason it's passing an empty string&#xD;&#xA;        customer.card = params[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params)  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: http://railscasts.com/episodes/288-billing-with-stripe";;
56834174;21450993;1450389;5;3a44e72d-0bb6-404d-a55d-5b846acef74f;2014-01-30 08:23:17.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and creates the token to update the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(params)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""My Subscription""&#xD;&#xA;&#xD;&#xA;        ###For some reason it's passing an empty string&#xD;&#xA;        customer.card = params[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params)  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer";;deleted 4 characters in body
56841201;21450993;1450389;5;4018b05c-3bb7-4d15-8718-62eb0af62bb7;2014-01-30 09:57:10.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and creates the token to update the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(params)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""My Subscription""&#xD;&#xA;&#xD;&#xA;        ###For some reason it's passing an empty string&#xD;&#xA;        customer.card = params[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params)  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 01:53:35 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;&#xD;&#xA;      Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", ""stripe_card_token""=>""""}, &#xD;&#xA;    ""commit""=>""Update My Credit Card"", ""id""=>""5""}&#xD;&#xA;&#xD;&#xA;    User Load (1.0ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Stripe Error: You passed an empty string for 'card'. We assume empty values&#xD;&#xA;    are an attempt to unset a parameter; however 'card' cannot be unset. You &#xD;&#xA;    should remove 'card' from your request or supply a non-empty value";;added 881 characters in body
56876084;21450993;1450389;5;f5beea46-4e13-41ff-bdf2-f9f3800d4ba0;2014-01-30 17:07:07.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and creates the token to update the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(params)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""My Subscription""&#xD;&#xA;&#xD;&#xA;        ###For some reason it's passing an empty string&#xD;&#xA;        customer.card = params[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params)  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 01:53:35 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;&#xD;&#xA;      Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", ""stripe_card_token""=>""""}, &#xD;&#xA;    ""commit""=>""Update My Credit Card"", ""id""=>""5""}&#xD;&#xA;&#xD;&#xA;    User Load (1.0ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Stripe Error: You passed an empty string for 'card'. We assume empty values&#xD;&#xA;    are an attempt to unset a parameter; however 'card' cannot be unset. You &#xD;&#xA;    should remove 'card' from your request or supply a non-empty value";;deleted 4 characters in body
56876825;21450993;1450389;5;eac03be4-3115-405d-92c2-4c374bd4af63;2014-01-30 17:16:45.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and creates the token to update the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;      changecard.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(params)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""My Subscription""&#xD;&#xA;&#xD;&#xA;        ###For some reason it's passing an empty string&#xD;&#xA;        customer.card = params[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;    end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params)  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 01:53:35 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;&#xD;&#xA;      Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", ""stripe_card_token""=>""tok_103PCo26f8kAprmwHCPjZ6T5""}, &#xD;&#xA;    ""commit""=>""Update My Credit Card"", ""id""=>""5""}&#xD;&#xA;&#xD;&#xA;    User Load (1.0ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Stripe Error: You passed an empty string for 'card'. We assume empty values&#xD;&#xA;    are an attempt to unset a parameter; however 'card' cannot be unset. You &#xD;&#xA;    should remove 'card' from your request or supply a non-empty value";;added 60 characters in body
56901905;21450993;1450389;5;bc312505-114e-4821-a540-303e5fc64555;2014-01-31 00:06:50.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button in my #new_subscription form creates and sends credit card data to Stripe.&#xD;&#xA;&#xD;&#xA;I'd like to make this work for the Submit Button in the EDIT form as well. **How do I write the coffeescript so it captures the Edit Form ID and creates the token to update the credit card data?** &#xD;&#xA;&#xD;&#xA;I have tried using a class or id in my edit form, but now I am getting this error. &#xD;&#xA;&#xD;&#xA;    You passed an empty string for 'card'. We assume empty values are an attempt to &#xD;&#xA;    unset a parameter; however 'card' cannot be unset. You should remove 'card' from &#xD;&#xA;    your request or supply a non-empty value.&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;      changecard.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(attrs)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""Subscription""&#xD;&#xA;        &#xD;&#xA;        ###This is being used for the credit card data&#xD;&#xA;        customer.card = attrs[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params[:subscription])  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 01:53:35 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;&#xD;&#xA;      Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", ""stripe_card_token""=>""tok_103PCo26f8kAprmwHCPjZ6T5""}, &#xD;&#xA;    ""commit""=>""Update My Credit Card"", ""id""=>""5""}&#xD;&#xA;&#xD;&#xA;    User Load (1.0ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Stripe Error: You passed an empty string for 'card'. We assume empty values&#xD;&#xA;    are an attempt to unset a parameter; however 'card' cannot be unset. You &#xD;&#xA;    should remove 'card' from your request or supply a non-empty value";;deleted 38 characters in body
56902686;21450993;1450389;5;35e7d086-c7ff-4abe-8952-c29ebd0331c2;2014-01-31 00:26:01.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button for both my #new_subscription form and edit form creates and sends credit card data to Stripe. &#xD;&#xA;&#xD;&#xA;**But for some reason I keep getting this error now.**&#xD;&#xA;    &#xD;&#xA;    can't convert Symbol into String&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;      changecard.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(attrs)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""Subscription""&#xD;&#xA;        &#xD;&#xA;        ###This is being used for the credit card data&#xD;&#xA;        customer.card = attrs[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params[:subscription])  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.'  ###Line 38&#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 16:23:20 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;      &#xD;&#xA;    Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", &#xD;&#xA;    ""stripe_card_token""=>""tok_103PJj26f8kAprmwvAtoZFRq""}, ""id""=>""5""}&#xD;&#xA;  &#xD;&#xA;    User Load (0.8ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;&#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Redirected to &#xD;&#xA;    Completed 500 Internal Server Error in 1283ms&#xD;&#xA;&#xD;&#xA;    TypeError (can't convert Symbol into String):&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;";;deleted 323 characters in body
56903080;21450993;1450389;5;7a03bf67-77c7-421f-aa27-e8aaaa73597a;2014-01-31 00:38:49.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button for both my #new_subscription form and edit form creates and sends credit card data to Stripe. &#xD;&#xA;&#xD;&#xA;**But for some reason I keep getting this error when I update the Credit Card**&#xD;&#xA;    &#xD;&#xA;    can't convert Symbol into String&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;      changecard.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(attrs)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""Subscription""&#xD;&#xA;        &#xD;&#xA;        ###This is being used for the credit card data&#xD;&#xA;        customer.card = attrs[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params[:subscription])  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, :success => 'Updated Card.'  ###Line 38&#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 16:23:20 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;      &#xD;&#xA;    Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", &#xD;&#xA;    ""stripe_card_token""=>""tok_103PJj26f8kAprmwvAtoZFRq""}, ""id""=>""5""}&#xD;&#xA;  &#xD;&#xA;    User Load (0.8ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;&#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Redirected to &#xD;&#xA;    Completed 500 Internal Server Error in 1283ms&#xD;&#xA;&#xD;&#xA;    TypeError (can't convert Symbol into String):&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;";;added 25 characters in body
57041418;21450993;1450389;5;a024280a-9ce9-47c6-bc79-ba51f50d0788;2014-02-02 04:16:55.0;"I finally figured out how to implement Stripes Monthly Billing using this [tutorial][1]&#xD;&#xA;&#xD;&#xA;Currently my Submit Button for both my #new_subscription form and edit form creates and sends credit card data to Stripe. &#xD;&#xA;&#xD;&#xA;**But for some reason I keep getting this error when I update the Credit Card**&#xD;&#xA;    &#xD;&#xA;    can't convert Symbol into String&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;&#xD;&#xA;**Question: Is this error due to the coffeescript, or is my update_card method in my model causing this problem?**&#xD;&#xA;&#xD;&#xA;EDIT FORM&#xD;&#xA;&#xD;&#xA;    <%= form_for @subscription, :html => { :id => ""update_card"" } do |f| %>&#xD;&#xA;      <%= render 'shared/error_messages', object: f.object %>&#xD;&#xA;  &#xD;&#xA;      <%= f.hidden_field :plan_id %>&#xD;&#xA;      <%= f.hidden_field :user_id %>&#xD;&#xA;      <%= f.hidden_field :stripe_card_token %>&#xD;&#xA;  &#xD;&#xA;      <h4>Change Credit Card</h4>&#xD;&#xA;     &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_number, ""Credit Card Number"" %>&#xD;&#xA;         <%= text_field_tag :card_number, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_code, ""Security Code on Card (CVV)"" %>&#xD;&#xA;         <%= text_field_tag :card_code, nil, name: nil %>&#xD;&#xA;       </div>&#xD;&#xA;       &#xD;&#xA;       <div class=""field"">&#xD;&#xA;         <%= label_tag :card_month, ""Card Expiration"" %>&#xD;&#xA;         <%= select_month nil, {add_month_numbers: true}, {name: nil, id: ""card_month""} %>&#xD;&#xA;         <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: ""card_year""} %>&#xD;&#xA;       </div>&#xD;&#xA;     &#xD;&#xA;       <%= f.submit ""Change Credit Card"", :class => ""btn btn-primary"" %>&#xD;&#xA;     &#xD;&#xA;    <% end %>&#xD;&#xA;&#xD;&#xA;JS.COFFEE&#xD;&#xA;&#xD;&#xA;    jQuery ->&#xD;&#xA;      Stripe.setPublishableKey($('meta[name=""stripe-key""]').attr('content'))&#xD;&#xA;      subscription.setupForm()&#xD;&#xA;      changecard.setupForm()&#xD;&#xA;&#xD;&#xA;    ###That part is working great in the coffee script.&#xD;&#xA;&#xD;&#xA;    subscription =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#new_subscription').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            subscription.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;  &#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;        Stripe.createToken(card, subscription.handleStripeResponse)&#xD;&#xA;  &#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#new_subscription')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;    &#xD;&#xA;    ###This is the Coffee for my Edit Form..&#xD;&#xA;    changecard =&#xD;&#xA;      setupForm: ->&#xD;&#xA;        $('#update_card').submit ->&#xD;&#xA;          $('input[type=submit]').attr('disabled', true)&#xD;&#xA;          if $('#card_number').length&#xD;&#xA;            changecard.processCard()&#xD;&#xA;            false&#xD;&#xA;          else&#xD;&#xA;            true&#xD;&#xA;&#xD;&#xA;      processCard: ->&#xD;&#xA;        card =&#xD;&#xA;          {number: $('#card_number').val(),&#xD;&#xA;          cvc: $('#card_code').val(),&#xD;&#xA;          expMonth: $('#card_month').val(),&#xD;&#xA;          expYear: $('#card_year').val()}&#xD;&#xA;&#xD;&#xA;         Stripe.createToken(card, changecard.handleStripeResponse)&#xD;&#xA;&#xD;&#xA;      handleStripeResponse: (status, response) ->&#xD;&#xA;        if status == 200&#xD;&#xA;          $('#subscription_stripe_card_token').val(response.id)&#xD;&#xA;          $('#update_card')[0].submit()&#xD;&#xA;        else&#xD;&#xA;          $('#stripe_error').text(response.error.message)&#xD;&#xA;          $('input[type=submit]').attr('disabled', false)&#xD;&#xA;&#xD;&#xA;MODEL&#xD;&#xA;&#xD;&#xA;    class Subscription < ActiveRecord::Base&#xD;&#xA;      attr_accessible :plan_id, :user_id, :email, :stripe_customer_token, :last_4_digits,&#xD;&#xA;                  :card_token, :card_name, :exp_month, :exp_year, :stripe_card_token&#xD;&#xA;                  &#xD;&#xA;      attr_accessor :stripe_card_token&#xD;&#xA;&#xD;&#xA;      def update_card(attrs)&#xD;&#xA;        customer = Stripe::Customer.retrieve(stripe_customer_token)&#xD;&#xA;        customer.email = ""myemail@gmail.com""&#xD;&#xA;        customer.description = ""Subscription""&#xD;&#xA;        &#xD;&#xA;        ###This is being used for the credit card data&#xD;&#xA;        customer.card = attrs[:stripe_card_token]&#xD;&#xA;        customer.save&#xD;&#xA;&#xD;&#xA;      rescue Stripe::StripeError => e &#xD;&#xA;        logger.error ""Stripe Error: "" + e.message &#xD;&#xA;        errors.add :base, ""#{e.message}."" &#xD;&#xA;        false&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;CONTROLLER&#xD;&#xA;&#xD;&#xA;    class SubscriptionsController < ApplicationController&#xD;&#xA;&#xD;&#xA;      def update&#xD;&#xA;        @subscription = current_user.subscription&#xD;&#xA;&#xD;&#xA;        ### I use the method update_card to update the customer's card&#xD;&#xA;        @subscription.update_card(params[:subscription])  &#xD;&#xA;&#xD;&#xA;         if @subscription.update_card&#xD;&#xA;          redirect_to edit_subscription_path, &#xD;&#xA;          flash[:success] = 'Credit Card was Succesfully Updated.' &#xD;&#xA;        else&#xD;&#xA;          flash.alert = 'Unable to update card.'&#xD;&#xA;          render :edit &#xD;&#xA;        end&#xD;&#xA;      end&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Reference: [Stripe Reference for Ruby][1]&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  [1]: https://stripe.com/docs/api#update_customer&#xD;&#xA;&#xD;&#xA;LOGS&#xD;&#xA;&#xD;&#xA;    Started PUT ""/subscriptions/5"" for 127.0.0.1 at 2014-01-30 16:23:20 -0800&#xD;&#xA;    Processing by SubscriptionsController#update as HTML&#xD;&#xA;      &#xD;&#xA;    Parameters: {""utf8""=>""✓"", ""authenticity_token""=>""ehyUD17CbH7MMOe98s+Kqkh+wGghntWkG4OpoqbnQaA="", &#xD;&#xA;    ""subscription""=>{""plan_id""=>""1"", ""user_id""=>""1"", &#xD;&#xA;    ""stripe_card_token""=>""tok_103PJj26f8kAprmwvAtoZFRq""}, ""id""=>""5""}&#xD;&#xA;  &#xD;&#xA;    User Load (0.8ms)  SELECT ""users"".* FROM ""users"" &#xD;&#xA;    WHERE ""users"".""remember_token"" = 'xEeu1X6IK9gUAsna9b6Mow' &#xD;&#xA;&#xD;&#xA;    LIMIT 1&#xD;&#xA;    Subscription Load (0.5ms)  SELECT ""subscriptions"".* &#xD;&#xA;    FROM ""subscriptions"" WHERE ""subscriptions"".""user_id"" = 1 LIMIT 1&#xD;&#xA;&#xD;&#xA;    Redirected to &#xD;&#xA;    Completed 500 Internal Server Error in 1283ms&#xD;&#xA;&#xD;&#xA;    TypeError (can't convert Symbol into String):&#xD;&#xA;    app/controllers/subscriptions_controller.rb:38:in `update'&#xD;&#xA;";;added 30 characters in body
