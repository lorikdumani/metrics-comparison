Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
8697762;4132059;311884;2;1fb6a055-e8f3-4d0f-81f2-897bebfaee32;2010-11-09 09:19:08.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven, so I cannot create t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.";;
8697958;4132059;311884;5;aa9a0483-2c8b-472a-8316-186cf1551cf3;2010-11-09 09:29:37.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.";;added 54 characters in body
8698103;4132059;311884;5;1febc61d-d41b-4a20-b2a1-429132d2efcc;2010-11-09 09:36:52.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.&#xD;&#xA;&#xD;&#xA;**more code**&#xD;&#xA;&#xD;&#xA;    package com.bancova.sap;&#xD;&#xA;    &#xD;&#xA;    import java.io.FileOutputStream;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.util.HashMap;&#xD;&#xA;    import java.util.TreeMap;&#xD;&#xA;    import java.util.regex.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import java.lang.*;&#xD;&#xA;    &#xD;&#xA;    import com.lowagie.text.ChapterAutoNumber;&#xD;&#xA;    import com.lowagie.text.Document;&#xD;&#xA;    import com.lowagie.text.DocumentException;&#xD;&#xA;    import com.lowagie.text.Phrase;&#xD;&#xA;    import com.lowagie.text.Paragraph;&#xD;&#xA;    import com.lowagie.text.Section;&#xD;&#xA;    import com.lowagie.text.pdf.PdfWriter;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * This example was written by Bruno Lowagie. It is part of the book 'iText in&#xD;&#xA;     * Action' by Manning Publications. &#xD;&#xA;     * ISBN: 1932394796&#xD;&#xA;     * http://www.1t3xt.com/docs/book.php &#xD;&#xA;     * http://www.manning.com/lowagie/&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    public class sapWriter3 {&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Generates a PDF file with autonumbered chapters and an open bookmark tab&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param args&#xD;&#xA;    	 *            no arguments needed here&#xD;&#xA;    	 */&#xD;&#xA;            static String inputText = "" "";&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map1;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map2;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map3;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map4;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> maps;&#xD;&#xA;    	public static void main(String[] args) throws IOException,InterruptedException {&#xD;&#xA;    		System.out.println(""Chapter 4: example FoxDogChapter2"");&#xD;&#xA;    		System.out.println(""-> Creates a PDF file with autonumbered chapters"");&#xD;&#xA;    		System.out.println(""   and an open bookmark tab."");&#xD;&#xA;    		System.out.println(""-> jars needed: iText.jar"");&#xD;&#xA;    		System.out.println(""-> resulting PDF: fox_dog_chapter2.pdf"");&#xD;&#xA;    		// step 1: creation of a document-object&#xD;&#xA;    		Document document = new Document();&#xD;&#xA;                    rstInfo3.readFile(""mytest.txt"");&#xD;&#xA;                    String[] paras = Pattern.compile(""=+\\n"", Pattern.MULTILINE).split(inputText);&#xD;&#xA;                    String title = "".*\\n(?==+\\n)"";&#xD;&#xA;                    map1 = rstInfo3.getMytype(title,1,map1);&#xD;&#xA;                    String chapter = "".*\\n(?=\\\\-+\\n)"";&#xD;&#xA;                    map2=rstInfo3.getMytype(chapter,2,map2);&#xD;&#xA;                    String mySection = "".*\\n(?=~+\\n)"";&#xD;&#xA;                    map3=rstInfo3.getMytype(mySection,3,map3);&#xD;&#xA;                    String RST_CODE_BLOCK = ""(?:::\\\\s*\\n\\\\s*\\n)"" +   //$INPUT_START_WITH_BLANK_LINE&#xD;&#xA;                                            ""((\\\\s{4}.*\\n)+)"" +      //CODE_LINES&#xD;&#xA;                                            ""(?=\\\\s*\\n.*\\n)""         //$LOOKAHEAD_FOR_NON_CODE_LINE&#xD;&#xA;                                           ;&#xD;&#xA;                    map4 = rstInfo3.getMytype(RST_CODE_BLOCK,4,map4);&#xD;&#xA;                    &#xD;&#xA;                    String paragraph = ""(^[^\\\\s{4}|=+|\\\\-+|~+].*\\n(?!=+|\\\\-+|~+))+"";      &#xD;&#xA;                    maps=rstInfo3.getMytype(paragraph,9,maps);&#xD;&#xA;                    maps.putAll(map1);&#xD;&#xA;                    maps.putAll(map2);&#xD;&#xA;                    maps.putAll(map3);&#xD;&#xA;                    maps.putAll(map4);&#xD;&#xA;    &#xD;&#xA;                    TreeMap sortedMap = new TreeMap(maps);&#xD;&#xA;                    //String mytest= ""good"";&#xD;&#xA;                    /*&#xD;&#xA;                    for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                         ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                         Object o=a.get(i);&#xD;&#xA;                         HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                         int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                         //HashMap<String,Object> m=maps.get(o);&#xD;&#xA;                         if (test==1){&#xD;&#xA;                         System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                         mytest = (String)m.get(""text"");&#xD;&#xA;                         System.out.println(mytest);&#xD;&#xA;                    }&#xD;&#xA;                    }&#xD;&#xA;                    */&#xD;&#xA;    		try {&#xD;&#xA;    			// step 2:&#xD;&#xA;    			// we create a writer&#xD;&#xA;    			PdfWriter writer = PdfWriter.getInstance(&#xD;&#xA;    			// that listens to the document&#xD;&#xA;    					document,&#xD;&#xA;    					// and directs a PDF-stream to a file&#xD;&#xA;    					new FileOutputStream(""sap_v01.pdf""));&#xD;&#xA;    			writer.setViewerPreferences(PdfWriter.PageModeUseOutlines);&#xD;&#xA;    			// step 3: we open the document&#xD;&#xA;    			document.open();&#xD;&#xA;    			// step 4: we add a paragraph to the document&#xD;&#xA;    			Phrase text = new Phrase(&#xD;&#xA;    					""Quick brown fox jumps over the lazy dog. "");&#xD;&#xA;                           String mytest = ""Test"";&#xD;&#xA;                           for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==3){&#xD;&#xA;                               System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                               mytest = (String)m.get(""text"");&#xD;&#xA;                            }&#xD;&#xA;                                                       }&#xD;&#xA;    			ChapterAutoNumber chapter1 = new ChapterAutoNumber(mytest);&#xD;&#xA;    		//	ChapterAutoNumber chapter1 = new ChapterAutoNumber(""This is a sample sentence:"");&#xD;&#xA;    			chapter1.setBookmarkTitle(""The fox"");&#xD;&#xA;    			chapter1.setBookmarkOpen(false);&#xD;&#xA;    			Section section1 = chapter1.addSection(""Quick"");&#xD;&#xA;    			section1.add(text);&#xD;&#xA;    			section1.add(text);&#xD;&#xA;    			section1.add(text);&#xD;&#xA;                          for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==9){&#xD;&#xA;                              Phrase newtest = new Phrase((String)m.get(""text""));&#xD;&#xA;                              Section section2 = chapter1.addSection(""Fox"");&#xD;&#xA;                                                             }&#xD;&#xA;}&#xD;&#xA;    &#xD;&#xA;    			     		} catch (DocumentException de) {&#xD;&#xA;    			System.err.println(de.getMessage());&#xD;&#xA;    		} catch (IOException ioe) {&#xD;&#xA;    			System.err.println(ioe.getMessage());&#xD;&#xA;    		}&#xD;&#xA;&#xD;&#xA;";;added 6604 characters in body
8698147;4132059;311884;5;8c735468-e185-4a54-93e0-c581f21ce1e6;2010-11-09 09:39:49.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.&#xD;&#xA;&#xD;&#xA;**more code**&#xD;&#xA;&#xD;&#xA;    package com.bancova.sap;&#xD;&#xA;    &#xD;&#xA;    import java.io.FileOutputStream;&#xD;&#xA;    import java.io.IOException;&#xD;&#xA;    import java.util.HashMap;&#xD;&#xA;    import java.util.TreeMap;&#xD;&#xA;    import java.util.regex.*;&#xD;&#xA;    import java.util.*;&#xD;&#xA;    import java.lang.*;&#xD;&#xA;    &#xD;&#xA;    import com.lowagie.text.ChapterAutoNumber;&#xD;&#xA;    import com.lowagie.text.Document;&#xD;&#xA;    import com.lowagie.text.DocumentException;&#xD;&#xA;    import com.lowagie.text.Phrase;&#xD;&#xA;    import com.lowagie.text.Paragraph;&#xD;&#xA;    import com.lowagie.text.Section;&#xD;&#xA;    import com.lowagie.text.pdf.PdfWriter;&#xD;&#xA;    &#xD;&#xA;    /**&#xD;&#xA;     * This example was written by Bruno Lowagie. It is part of the book 'iText in&#xD;&#xA;     * Action' by Manning Publications. &#xD;&#xA;     * ISBN: 1932394796&#xD;&#xA;     * http://www.1t3xt.com/docs/book.php &#xD;&#xA;     * http://www.manning.com/lowagie/&#xD;&#xA;     */&#xD;&#xA;    &#xD;&#xA;    public class sapWriter3 {&#xD;&#xA;    &#xD;&#xA;    	/**&#xD;&#xA;    	 * Generates a PDF file with autonumbered chapters and an open bookmark tab&#xD;&#xA;    	 * &#xD;&#xA;    	 * @param args&#xD;&#xA;    	 *            no arguments needed here&#xD;&#xA;    	 */&#xD;&#xA;            static String inputText = "" "";&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map1;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map2;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map3;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> map4;&#xD;&#xA;            static HashMap<Integer,HashMap<String,Object>> maps;&#xD;&#xA;    	public static void main(String[] args) throws IOException,InterruptedException {&#xD;&#xA;    		System.out.println(""Chapter 4: example FoxDogChapter2"");&#xD;&#xA;    		System.out.println(""-> Creates a PDF file with autonumbered chapters"");&#xD;&#xA;    		System.out.println(""   and an open bookmark tab."");&#xD;&#xA;    		System.out.println(""-> jars needed: iText.jar"");&#xD;&#xA;    		System.out.println(""-> resulting PDF: fox_dog_chapter2.pdf"");&#xD;&#xA;    		// step 1: creation of a document-object&#xD;&#xA;    		Document document = new Document();&#xD;&#xA;                    rstInfo3.readFile(""mytest.txt"");&#xD;&#xA;                    String[] paras = Pattern.compile(""=+\\n"", Pattern.MULTILINE).split(inputText);&#xD;&#xA;                    String title = "".*\\n(?==+\\n)"";&#xD;&#xA;                    map1 = rstInfo3.getMytype(title,1,map1);&#xD;&#xA;                    String chapter = "".*\\n(?=\\\\-+\\n)"";&#xD;&#xA;                    map2=rstInfo3.getMytype(chapter,2,map2);&#xD;&#xA;                    String mySection = "".*\\n(?=~+\\n)"";&#xD;&#xA;                    map3=rstInfo3.getMytype(mySection,3,map3);&#xD;&#xA;                    String RST_CODE_BLOCK = ""(?:::\\\\s*\\n\\\\s*\\n)"" +   //$INPUT_START_WITH_BLANK_LINE&#xD;&#xA;                                            ""((\\\\s{4}.*\\n)+)"" +      //CODE_LINES&#xD;&#xA;                                            ""(?=\\\\s*\\n.*\\n)""         //$LOOKAHEAD_FOR_NON_CODE_LINE&#xD;&#xA;                                           ;&#xD;&#xA;                    map4 = rstInfo3.getMytype(RST_CODE_BLOCK,4,map4);&#xD;&#xA;                    &#xD;&#xA;                    String paragraph = ""(^[^\\\\s{4}|=+|\\\\-+|~+].*\\n(?!=+|\\\\-+|~+))+"";      &#xD;&#xA;                    maps=rstInfo3.getMytype(paragraph,9,maps);&#xD;&#xA;                    maps.putAll(map1);&#xD;&#xA;                    maps.putAll(map2);&#xD;&#xA;                    maps.putAll(map3);&#xD;&#xA;                    maps.putAll(map4);&#xD;&#xA;    &#xD;&#xA;                    TreeMap sortedMap = new TreeMap(maps);&#xD;&#xA;                        		try {&#xD;&#xA;    			 &#xD;&#xA;    			// we create a writer&#xD;&#xA;    			PdfWriter writer = PdfWriter.getInstance(&#xD;&#xA;    			// that listens to the document&#xD;&#xA;    					document,&#xD;&#xA;    					// and directs a PDF-stream to a file&#xD;&#xA;    					new FileOutputStream(""sap_v01.pdf""));&#xD;&#xA;    			writer.setViewerPreferences(PdfWriter.PageModeUseOutlines);&#xD;&#xA;    			// step 3: we open the document&#xD;&#xA;    			document.open();&#xD;&#xA;    	                    &#xD;&#xA;                           for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==3){&#xD;&#xA;                               System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                               String mytest = (String)m.get(""text"");&#xD;&#xA;                               ChapterAutoNumber chapter1 = new ChapterAutoNumber(mytest);&#xD;&#xA;                            }&#xD;&#xA;                                                       }&#xD;&#xA;    			&#xD;&#xA;    		 }&#xD;&#xA;    &#xD;&#xA;    			     		} catch (DocumentException de) {&#xD;&#xA;    			System.err.println(de.getMessage());&#xD;&#xA;    		} catch (IOException ioe) {&#xD;&#xA;    			System.err.println(ioe.getMessage());&#xD;&#xA;    		}&#xD;&#xA;&#xD;&#xA;";;"deleted 971 characters in body; deleted 915 characters in body; deleted 16 characters in body"
8698254;4132059;311884;5;389eea8d-6bac-4ee4-9691-901a99109637;2010-11-09 09:46:04.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.&#xD;&#xA;&#xD;&#xA;**more code**&#xD;&#xA;&#xD;&#xA;Note: &#xD;&#xA;&#xD;&#xA;1)test has many values, and what instance to create depends on its value.&#xD;&#xA;&#xD;&#xA;2) since I'm looping a map of maps which are data driven, the number of instances to be created depend on the number of inner maps......&#xD;&#xA;       &#xD;&#xA;    	                    for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==3){&#xD;&#xA;                               System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                               String mytest = (String)m.get(""text"");&#xD;&#xA;                               ChapterAutoNumber chapter1 = new ChapterAutoNumber(mytest);&#xD;&#xA;                            }&#xD;&#xA;                                                       ";;"deleted 3864 characters in body; added 224 characters in body"
8698475;4132059;311884;5;4c526ab6-6ab0-4a18-b9c3-653a480e1aa4;2010-11-09 09:56:27.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;thanks.&#xD;&#xA;&#xD;&#xA;**more code**&#xD;&#xA;&#xD;&#xA;Note: &#xD;&#xA;&#xD;&#xA;1)test has many values, and what instance to create depends on its value.&#xD;&#xA;&#xD;&#xA;2) since I'm looping through a map of maps which are data driven, the number of instances to be created depend on the number of inner maps......&#xD;&#xA;       &#xD;&#xA;    	                    for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==3){&#xD;&#xA;                               System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                               String mytest = (String)m.get(""text"");&#xD;&#xA;                               ChapterAutoNumber chapter1 = new ChapterAutoNumber(mytest);&#xD;&#xA;                            }&#xD;&#xA;                                                       ";;added 8 characters in body
35401636;4132059;1921273;5;21a5d438-7552-4254-a31a-638a61ca904e;2013-02-02 22:36:49.0;"How to create local references created in for loop into global references?   The following code wont compile:  &#xD;&#xA;&#xD;&#xA;  Also, in real project, the number of t's and type of t's are data driven (I'm looping through a map of maps to make decision), so I cannot specify t before starting for loop.....&#xD;&#xA;&#xD;&#xA;    public class TestLocal{&#xD;&#xA;      public static void main(String [] args){&#xD;&#xA;      &#xD;&#xA;      for (int i=1; i<1; i++){&#xD;&#xA;        TestLocal t=new TestLocal();&#xD;&#xA;       }&#xD;&#xA;       System.out.println(""This is the new object:  "" + t );&#xD;&#xA;     }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;How could I make t accessible from outside for loop?&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;**more code**&#xD;&#xA;&#xD;&#xA;Note: &#xD;&#xA;&#xD;&#xA;1)test has many values, and what instance to create depends on its value.&#xD;&#xA;&#xD;&#xA;2) since I'm looping through a map of maps which are data driven, the number of instances to be created depend on the number of inner maps......&#xD;&#xA;       &#xD;&#xA;    	                    for (int i=0;i<sortedMap.size();i++){&#xD;&#xA;                               ArrayList<Object> a = new ArrayList<Object>(sortedMap.keySet());&#xD;&#xA;                               Object o=a.get(i);&#xD;&#xA;                               HashMap m=(HashMap)sortedMap.get(o);&#xD;&#xA;                               int test = ((Number)m.get(""textType"")).intValue();&#xD;&#xA;                              if (test==3){&#xD;&#xA;                               System.out.println(""all together: "" + sortedMap.size() + ""each element is:  "" + o + "" value: "" + m.get(""textType""));&#xD;&#xA;                               String mytest = (String)m.get(""text"");&#xD;&#xA;                               ChapterAutoNumber chapter1 = new ChapterAutoNumber(mytest);&#xD;&#xA;                            }&#xD;&#xA;                                                       ";;" thanks."
