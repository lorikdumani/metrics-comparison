Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
5834614;2834667;160173;2;e3ece239-fdb8-4b86-9c54-22ccc94fbf01;2010-05-14 13:59:21.0;"Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $(this.href);&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         target[0] && $(""html,body"").stop().animate({ ""scrollTop"": target.offset().top }, 1000);&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point:&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;But I'm not sure how to write the `IsManuallyScrolled` function. I've checked out `e` in the JS console in Google Chrome and as far as I can tell there is no difference between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;How can I go about detecting a manual scroll?";;
5836215;2834667;160173;5;22b45291-24ed-4299-b701-0830e79e8f46;2010-05-14 15:37:08.0;"Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $(this.href);&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point:&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;But I'm not sure how to write the `IsManuallyScrolled` function. I've checked out `e` in the JS console in Google Chrome and as far as I can tell there is no difference between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I go about detecting a manual scroll?__";;added 480 characters in body
5837230;2834667;160173;5;79a77cec-8269-4c42-a1f1-be4ed773bff6;2010-05-14 16:38:41.0;"Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $(this.href);&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point:&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;But I'm not sure how to write the `IsManuallyScrolled` function. I've checked out `e` in the JS console in Google Chrome and as far as I can tell there is no difference between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I go about detecting a _manual_ scroll?__";;"added 2 characters in body; edited title"
5837465;2834667;160173;5;b7ddd2fb-b9bb-496f-8d95-834ded7f359e;2010-05-14 16:55:18.0;"Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $(this.href);&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;         return false;&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point...&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;...but I'm not sure how to code the `IsManuallyScrolled` function. I've checked out `e` (the `event` object) in Google Chrome's console and AFAIK there is not way to  differentiate between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I differentiate between a _manual_ scroll and one called via jQuery's `$.fn.animate` function?__";;added 93 characters in body
5837596;2834667;160173;5;d5361825-6fe8-437a-b8c2-4d8d20b42bed;2010-05-14 17:04:22.0;"UPDATE:&#xD;&#xA;--&#xD;&#xA;Here is a <a href=""http://jsbin.com/eqafi/3"">jsbin example</a> demonstrating the problem.&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $($(this).attr(""href""));&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;         return false;&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point...&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;...but I'm not sure how to code the `IsManuallyScrolled` function. I've checked out `e` (the `event` object) in Google Chrome's console and AFAIK there is not way to  differentiate between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I differentiate between a _manual_ scroll and one called via jQuery's `$.fn.animate` function?__";;"added 124 characters in body; edited body"
5837842;2834667;160173;5;516b1f74-cb14-446b-adec-400c6c6949eb;2010-05-14 17:20:56.0;"UPDATE:&#xD;&#xA;--&#xD;&#xA;Here is a <a href=""http://jsbin.com/eqafi/3"">jsbin example</a> demonstrating the problem.&#xD;&#xA;&#xD;&#xA;__UPDATE 2:__  &#xD;&#xA;And here is [the fixed version](http://jsbin.com/eqafi/4) thanks to [fudgey](http://stackoverflow.com/users/145346/fudgey).&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $($(this).attr(""href""));&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;         return false;&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point...&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;...but I'm not sure how to code the `IsManuallyScrolled` function. I've checked out `e` (the `event` object) in Google Chrome's console and AFAIK there is not way to  differentiate between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I differentiate between a _manual_ scroll and one called via jQuery's `$.fn.animate` function?__";;added 144 characters in body
147691831;2834667;-1;5;6c479980-93dd-431b-825b-5d847cfb5275;2017-05-23 12:34:09.0;"UPDATE:&#xD;&#xA;--&#xD;&#xA;Here is a <a href=""http://jsbin.com/eqafi/3"">jsbin example</a> demonstrating the problem.&#xD;&#xA;&#xD;&#xA;__UPDATE 2:__  &#xD;&#xA;And here is [the fixed version](http://jsbin.com/eqafi/4) thanks to [fudgey](https://stackoverflow.com/users/145346/fudgey).&#xD;&#xA;&#xD;&#xA;---&#xD;&#xA;&#xD;&#xA;Basically, I have the following javascript which scrolls the window to an anchor on the page:&#xD;&#xA;     &#xD;&#xA;     // get anchors with href's that start with ""#""&#xD;&#xA;     $(""a[href^=#]"").live(""click"", function(){&#xD;&#xA;         var target = $($(this).attr(""href""));&#xD;&#xA;         // if the target exists: scroll to it...&#xD;&#xA;         if(target[0]){&#xD;&#xA;             // If the page isn't long enough to scroll to the target's position&#xD;&#xA;             // we want to scroll as much as we can. This part prevents a sudden &#xD;&#xA;             // stop when window.scrollTop reaches its maximum.&#xD;&#xA;             var y = Math.min(target.offset().top, $(document).height() - $(window).height());&#xD;&#xA;             // also, don't try to scroll to a negative value...&#xD;&#xA;             y=Math.max(y,0);&#xD;&#xA;             // OK, you can scroll now...&#xD;&#xA;             $(""html,body"").stop().animate({ ""scrollTop"": y }, 1000);&#xD;&#xA;         }&#xD;&#xA;         return false;&#xD;&#xA;     });&#xD;&#xA;&#xD;&#xA;It works perfectly......until I manually try to scroll the window. When the scrollbar or mousewheel is scrolled I need to stop the current scroll animation...but I'm not sure how to do this.&#xD;&#xA;&#xD;&#xA;This is probably my starting point...&#xD;&#xA;&#xD;&#xA;    $(window).scroll(e){&#xD;&#xA;        if(IsManuallyScrolled(e)){&#xD;&#xA;            $(""html,body"").stop();&#xD;&#xA;        }&#xD;&#xA;    } &#xD;&#xA;&#xD;&#xA;...but I'm not sure how to code the `IsManuallyScrolled` function. I've checked out `e` (the `event` object) in Google Chrome's console and AFAIK there is not way to  differentiate between a manual scroll and jQuery's `animate()` scroll.&#xD;&#xA;&#xD;&#xA;__How can I differentiate between a _manual_ scroll and one called via jQuery's `$.fn.animate` function?__";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
