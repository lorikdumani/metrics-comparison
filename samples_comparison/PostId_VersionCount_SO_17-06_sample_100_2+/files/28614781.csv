Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
84158654;28614781;4530610;2;83d7b4ec-2e63-4cbe-a892-b20de039c43e;2015-02-19 19:04:49.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    &#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars, stringsAsFactors = FALSE) &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    lapply( seq_len(NROW(var_comb) ), function(i)   {&#xD;&#xA;      formula_i <- as.formula(sprintf(""%s ~ %s"", var_comb$Var1[i], var_comb$Var2[i] ))&#xD;&#xA;      glm(formula_i, data=dfPRAC, family=binomial(""logit""))&#xD;&#xA;    })&#xD;&#xA;";;
84159081;28614781;4530610;5;2a66d445-a4e9-4bba-bff4-8b4afbfa3bac;2015-02-19 19:12:29.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    &#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars, stringsAsFactors = FALSE) &#xD;&#xA;    &#xD;&#xA;    &#xD;&#xA;    lapply( seq_len(nrow(var_comb) ), function(i)   {&#xD;&#xA;      formula_i <- as.formula(sprintf(""%s ~ %s"", var_comb$Var1[i], var_comb$Var2[i] ))&#xD;&#xA;      glm(formula_i, data=dfPRAC, family=binomial(""logit""))&#xD;&#xA;    })&#xD;&#xA;";;edited body
84164516;28614781;4530610;5;2c729332-57fc-4f1d-b3a4-783b076833fc;2015-02-19 20:37:35.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    lapply( formula_vec, function(f)   {&#xD;&#xA;      glm(f, data=dfPRAC, family=binomial(""logit""))&#xD;&#xA;    })&#xD;&#xA;";;deleted 77 characters in body
84229303;28614781;4530610;5;66593a13-bd59-4ea1-991f-5397dc12ff3e;2015-02-20 16:41:24.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;      glm(f, data=dfPRAC, family=binomial(""logit""))&#xD;&#xA;    })&#xD;&#xA;    &#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # to get model for specific formula:&#xD;&#xA;    glm_res[""DepVar1 ~ IndVar3""]&#xD;&#xA;";;models' names
84294359;28614781;4530610;5;11cff6b0-57ee-4fcc-8eda-17d22d58b470;2015-02-21 17:30:21.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef(summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;";;coefs
84294786;28614781;4530610;5;26a0443b-e2dd-44bd-ac8b-869d7a3e15be;2015-02-21 17:38:09.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef(summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients for var1 ~ var1&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;    # p-values for var1 ~ var2&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar2""]])[,""Pr(>|z|)""]&#xD;&#xA;&#xD;&#xA;";;added 104 characters in body
84398578;28614781;4530610;5;b9f0f282-c94e-4885-a321-cb6ee6c2afda;2015-02-23 14:20:22.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef(summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients for var1 ~ var1&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;    # p-values for var1 ~ var2&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar2""]])[,""Pr(>|z|)""]&#xD;&#xA;&#xD;&#xA;    # p-values in a data.frame&#xD;&#xA;    p_values <- &#xD;&#xA;      cbind(formula_vec, as.data.frame ( do.call(rbind,&#xD;&#xA;            lapply(glm_res, function(x) {&#xD;&#xA;              rbind(c(intercept = coef(x)[1,4], var = coef(x)[2,4]))&#xD;&#xA;            })&#xD;&#xA;      )))&#xD;&#xA;";;added 247 characters in body
84427489;28614781;4530610;5;37574031-4d69-424d-a6f8-5a160bec5a78;2015-02-23 21:00:14.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    ind_vars <- &#xD;&#xA;      unlist( sapply( seq_len(length(ind_vars)), &#xD;&#xA;              function(i) {&#xD;&#xA;                   apply( combn(ind_vars,i), 2, function(x) paste(x, collapse = ""+""))&#xD;&#xA;              }))&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars ) &#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;    &#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef(summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients for var1 ~ var1&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;    # p-values for var1 ~ var2&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar2""]])[,""Pr(>|z|)""]&#xD;&#xA;&#xD;&#xA;    # p-values in a data.frame&#xD;&#xA;    p_values <- &#xD;&#xA;      cbind(formula_vec, as.data.frame ( do.call(rbind,&#xD;&#xA;            lapply(glm_res, function(x) {&#xD;&#xA;              coefs <- coef(x)&#xD;&#xA;              rbind(c(intercept = coefs[1,4], &#xD;&#xA;                      var1 = coefs[2,4],&#xD;&#xA;                      var2 = ifelse(dim(coefs)[1]>2, coefs[3,4], NA),&#xD;&#xA;                      var3 = ifelse(dim(coefs)[1]>3, coefs[4,4], NA))&#xD;&#xA;                    )&#xD;&#xA;            })&#xD;&#xA;      )))&#xD;&#xA;";;added 421 characters in body
84428226;28614781;4530610;5;f3c28118-4ff8-47cd-823c-aed324c31f1c;2015-02-23 21:13:08.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    &#xD;&#xA;    # create all compinations of ind_vars&#xD;&#xA;    ind_vars_comb <- &#xD;&#xA;      unlist( sapply( seq_len(length(ind_vars)), &#xD;&#xA;              function(i) {&#xD;&#xA;                   apply( combn(ind_vars,i), 2, function(x) paste(x, collapse = ""+""))&#xD;&#xA;              }))&#xD;&#xA;    &#xD;&#xA;    # pair with dep_vars:&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars_comb ) &#xD;&#xA;    &#xD;&#xA;    # formulas for all combinations&#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;&#xD;&#xA;    # create models&#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef( summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients for var1 ~ var1&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;    # p-values for var1 ~ var2&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar2""]])[,""Pr(>|z|)""]&#xD;&#xA;&#xD;&#xA;    # p-values in a data.frame&#xD;&#xA;    p_values <- &#xD;&#xA;      cbind(formula_vec, as.data.frame ( do.call(rbind,&#xD;&#xA;            lapply(glm_res, function(x) {&#xD;&#xA;              coefs <- coef(x)&#xD;&#xA;              rbind(c(coefs[,4] , rep(NA, length(ind_vars) - length(coefs[,4]) + 1)))&#xD;&#xA;            })&#xD;&#xA;      )))&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Result:&#xD;&#xA;&#xD;&#xA;							 formula_vec (Intercept)    IndVar1         V3        V4&#xD;&#xA;	1                  DepVar1 ~ IndVar1  1.00000000 1.00000000         NA        NA&#xD;&#xA;	2                  DepVar2 ~ IndVar1  0.65526203 0.29437334         NA        NA&#xD;&#xA;	3                  DepVar1 ~ IndVar2  0.29307777 0.19121066         NA        NA&#xD;&#xA;	4                  DepVar2 ~ IndVar2  0.07298241 0.03858791         NA        NA&#xD;&#xA;	5                  DepVar1 ~ IndVar3  0.99950535 0.99940963         NA        NA&#xD;&#xA;	6                  DepVar2 ~ IndVar3  0.52105212 0.44715614         NA        NA&#xD;&#xA;	7          DepVar1 ~ IndVar1+IndVar2  0.31112860 0.76310468 0.18416266        NA&#xD;&#xA;	8          DepVar2 ~ IndVar1+IndVar2  0.06488501 0.08833369 0.03031766        NA&#xD;&#xA;	9          DepVar1 ~ IndVar1+IndVar3  0.99952006 0.99999188 0.99940957        NA&#xD;&#xA;	10         DepVar2 ~ IndVar1+IndVar3  0.38508258 0.29593637 0.45010697        NA&#xD;&#xA;	11         DepVar1 ~ IndVar2+IndVar3  0.28167430 0.15753070 0.54363164        NA&#xD;&#xA;	12         DepVar2 ~ IndVar2+IndVar3  0.22644873 0.04654188 0.84059019        NA&#xD;&#xA;	13 DepVar1 ~ IndVar1+IndVar2+IndVar3  0.27858393 0.71600105 0.14812808 0.5222330&#xD;&#xA;	14 DepVar2 ~ IndVar1+IndVar2+IndVar3  0.15634739 0.08611677 0.02889574 0.7449513";;deleted 168 characters in body
84428830;28614781;4530610;5;5219ebdd-110d-48eb-af3e-0192c3b1d2ee;2015-02-23 21:23:16.0;"Maybe something like that:&#xD;&#xA;&#xD;&#xA;    dep_vars <- c(""DepVar1"", ""DepVar2"") &#xD;&#xA;    ind_vars <- c(""IndVar1"", ""IndVar2"", ""IndVar3"")&#xD;&#xA;    &#xD;&#xA;    # create all combinations of ind_vars&#xD;&#xA;    ind_vars_comb <- &#xD;&#xA;      unlist( sapply( seq_len(length(ind_vars)), &#xD;&#xA;              function(i) {&#xD;&#xA;                   apply( combn(ind_vars,i), 2, function(x) paste(x, collapse = ""+""))&#xD;&#xA;              }))&#xD;&#xA;    &#xD;&#xA;    # pair with dep_vars:&#xD;&#xA;    var_comb <- expand.grid(dep_vars, ind_vars_comb ) &#xD;&#xA;    &#xD;&#xA;    # formulas for all combinations&#xD;&#xA;    formula_vec <- sprintf(""%s ~ %s"", var_comb$Var1, var_comb$Var2)&#xD;&#xA;&#xD;&#xA;    # create models&#xD;&#xA;    glm_res <- lapply( formula_vec, function(f)   {&#xD;&#xA;        fit1 <- glm( f, data = dfPRAC, family = binomial(""logit""))&#xD;&#xA;        fit1$coefficients <- coef( summary(fit1))&#xD;&#xA;        return(fit1)&#xD;&#xA;    })&#xD;&#xA;    names(glm_res) <- formula_vec&#xD;&#xA;    &#xD;&#xA;    # get model for specific formula&#xD;&#xA;    glm_res[[""DepVar1 ~ IndVar1""]] &#xD;&#xA;&#xD;&#xA;    # coefficients for var1 ~ var1&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar1""]])&#xD;&#xA;&#xD;&#xA;    # p-values for var1 ~ var2&#xD;&#xA;    coef(glm_res[[""DepVar1 ~ IndVar2""]])[,""Pr(>|z|)""]&#xD;&#xA;&#xD;&#xA;    # p-values in a data.frame&#xD;&#xA;    p_values <- &#xD;&#xA;      cbind(formula_vec, as.data.frame ( do.call(rbind,&#xD;&#xA;            lapply(glm_res, function(x) {&#xD;&#xA;              coefs <- coef(x)&#xD;&#xA;              rbind(c(coefs[,4] , rep(NA, length(ind_vars) - length(coefs[,4]) + 1)))&#xD;&#xA;            })&#xD;&#xA;      )))&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Result:&#xD;&#xA;&#xD;&#xA;							 formula_vec (Intercept)    IndVar1         V3        V4&#xD;&#xA;	1                  DepVar1 ~ IndVar1  1.00000000 1.00000000         NA        NA&#xD;&#xA;	2                  DepVar2 ~ IndVar1  0.65526203 0.29437334         NA        NA&#xD;&#xA;	3                  DepVar1 ~ IndVar2  0.29307777 0.19121066         NA        NA&#xD;&#xA;	4                  DepVar2 ~ IndVar2  0.07298241 0.03858791         NA        NA&#xD;&#xA;	5                  DepVar1 ~ IndVar3  0.99950535 0.99940963         NA        NA&#xD;&#xA;	6                  DepVar2 ~ IndVar3  0.52105212 0.44715614         NA        NA&#xD;&#xA;	7          DepVar1 ~ IndVar1+IndVar2  0.31112860 0.76310468 0.18416266        NA&#xD;&#xA;	8          DepVar2 ~ IndVar1+IndVar2  0.06488501 0.08833369 0.03031766        NA&#xD;&#xA;	9          DepVar1 ~ IndVar1+IndVar3  0.99952006 0.99999188 0.99940957        NA&#xD;&#xA;	10         DepVar2 ~ IndVar1+IndVar3  0.38508258 0.29593637 0.45010697        NA&#xD;&#xA;	11         DepVar1 ~ IndVar2+IndVar3  0.28167430 0.15753070 0.54363164        NA&#xD;&#xA;	12         DepVar2 ~ IndVar2+IndVar3  0.22644873 0.04654188 0.84059019        NA&#xD;&#xA;	13 DepVar1 ~ IndVar1+IndVar2+IndVar3  0.27858393 0.71600105 0.14812808 0.5222330&#xD;&#xA;	14 DepVar2 ~ IndVar1+IndVar2+IndVar3  0.15634739 0.08611677 0.02889574 0.7449513";;edited body
