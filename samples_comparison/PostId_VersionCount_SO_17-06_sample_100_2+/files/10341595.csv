Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
23748260;10341595;54680;2;08beb693-dc19-408c-b66b-68af3fb50c75;2012-04-26 21:20:43.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime the first letter variable changes, output it. If it doesn't change, don't continue to output it.&#xD;&#xA;&#xD;&#xA;    $firstChar; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word ) {&#xD;&#xA;      $firstChar = substr( $word, 0, 1 );&#xD;&#xA;      if ( $firstChar != $currChar ) {&#xD;&#xA;        $currChar = $firstChar;&#xD;&#xA;        echo sprintf( '<li>%s</li>', $currChar ) . PHP_EOL;&#xD;&#xA;      }&#xD;&#xA;      echo sprintf( '<li>%s</li>', $word ) . PHP_EOL; &#xD;&#xA;    }";;
23748413;10341595;54680;5;46cc4062-3bff-4c89-bfdf-8588e6fc748a;2012-04-26 21:25:44.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime the first letter variable changes, output it. If it doesn't change, don't continue to output it.&#xD;&#xA;&#xD;&#xA;    $firstChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word ) {&#xD;&#xA;      $firstChar = substr( $word, 0, 1 );&#xD;&#xA;      if ( $firstChar != $currChar ) {&#xD;&#xA;        $currChar = $firstChar;&#xD;&#xA;        echo $currChar;&#xD;&#xA;      }&#xD;&#xA;      echo $word; &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;deleted 72 characters in body
23748868;10341595;54680;5;5fe8331c-a2c1-46a8-a1ec-2329b09365d2;2012-04-26 21:40:54.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    $firstChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word ) {&#xD;&#xA;      $firstChar = substr( $word, 0, 1 );&#xD;&#xA;      if ( $firstChar != $currChar ) {&#xD;&#xA;        $currChar = $firstChar;&#xD;&#xA;        echo $currChar;&#xD;&#xA;      }&#xD;&#xA;      echo $word; &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;deleted 65 characters in body
23748987;10341595;43959;5;06d52210-696b-42e7-97d0-5c290e0cd695;2012-04-26 21:44:17.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    $currChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word ) {&#xD;&#xA;      $firstChar = substr( $word, 0, 1 );&#xD;&#xA;      if ( $firstChar != $currChar ) {&#xD;&#xA;        $currChar = $firstChar;&#xD;&#xA;        echo $currChar;&#xD;&#xA;      }&#xD;&#xA;      echo $word; &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;deleted 1 characters in body
23749009;10341595;54680;5;c4599f1f-ab7f-443c-8f46-e2e9a0905d70;2012-04-26 21:44:50.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    $currChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word ) {&#xD;&#xA;      $firstChar = $word[0];&#xD;&#xA;      if ( $firstChar != $currChar ) {&#xD;&#xA;        $currChar = $firstChar;&#xD;&#xA;        echo $currChar;&#xD;&#xA;      }&#xD;&#xA;      echo $word; &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;deleted 13 characters in body
23749182;10341595;43959;5;4f9a3bd3-f324-4ddf-a1fb-8e182e99b80a;2012-04-26 21:50:48.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    $currChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word) {&#xD;&#xA;      if ( $word[0] != $currChar ) {&#xD;&#xA;        $currChar = $word[0];&#xD;&#xA;        echo $currChar . PHP_EOL;&#xD;&#xA;      }&#xD;&#xA;      echo $word . PHP_EOL;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;"deleted 17 characters in body; added 1 characters in body"
23749275;10341595;54680;5;c6f91996-8b6a-4f5a-afb1-be6b6ee455ae;2012-04-26 21:54:04.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    $currChar = ''; &#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word) {&#xD;&#xA;      if ( $word[0] != $currChar ) {&#xD;&#xA;        $currChar = $word[0];&#xD;&#xA;        echo $currChar . PHP_EOL;&#xD;&#xA;      }&#xD;&#xA;      echo $word . PHP_EOL;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    /* Brevity: foreach($a as $w)echo($c!=($f=$w[0]))?($c=$f).$w:$w; */&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;added 75 characters in body
23749569;10341595;54680;5;fbcaa690-5097-44f7-8800-9dd4ab149c17;2012-04-26 22:05:12.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    sort( $aTest );&#xD;&#xA;&#xD;&#xA;    foreach ( $aTest as $word) {&#xD;&#xA;      if ( $word[0] != $currChar ) {&#xD;&#xA;        $currChar = $word[0];&#xD;&#xA;        echo $currChar . PHP_EOL;&#xD;&#xA;      }&#xD;&#xA;      echo $word . PHP_EOL;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;deleted 97 characters in body
23758824;10341595;43959;5;74ee327d-e2f5-4f31-9e45-568424848a94;2012-04-27 06:22:05.0;"I would suggest you use `sort()` to get them all in order. Then, track the first letter. Anytime it changes, save and output it.&#xD;&#xA;&#xD;&#xA;    sort( $aTest );&#xD;&#xA;    &#xD;&#xA;    $currChar = '';&#xD;&#xA;    foreach ( $aTest as $word) {&#xD;&#xA;      if ( $word[0] != $currChar ) {&#xD;&#xA;        $currChar = $word[0];&#xD;&#xA;        echo $currChar . PHP_EOL;&#xD;&#xA;      }&#xD;&#xA;      echo $word . PHP_EOL;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;From your initial array, this would produce the following:&#xD;&#xA;&#xD;&#xA;    a&#xD;&#xA;    apple&#xD;&#xA;    b&#xD;&#xA;    banana&#xD;&#xA;    k&#xD;&#xA;    kiwi&#xD;&#xA;    p&#xD;&#xA;    pear&#xD;&#xA;    pineapple&#xD;&#xA;    s&#xD;&#xA;    strawberry";;added 25 characters in body
