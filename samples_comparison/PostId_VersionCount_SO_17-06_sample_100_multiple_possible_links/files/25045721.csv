Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
70462885;25045721;621962;2;7ec5e8c0-f217-4f91-af59-21847300dbd7;2014-07-30 19:51:23.0;"You could nest calls to [`map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map($(tr).find(""td""), function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]";;
70463174;25045721;621962;5;f87b1a4e-2997-4b28-908f-5af18d656ad8;2014-07-30 19:56:25.0;"You could nest calls to [`map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map($(tr).find(""td""), function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;Or, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-jquery-variable-as-multidimensional-arr/25045721#comment38955348_25045008), you could create an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/))&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = $.map($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call($(tr).find(""td""), function (p, td, i) {&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;added 789 characters in body
70465193;25045721;621962;5;acc24ad4-67eb-4af7-9b84-07b69e6ccb9c;2014-07-30 20:31:11.0;"You could nest calls to [`map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map($(tr).find(""td""), function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;Or, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could create an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/))&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = $.map($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call($(tr).find(""td""), function (p, td, i) {&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;deleted 14 characters in body
70465541;25045721;621962;5;c03d0fb2-276e-4318-962d-4358a03dd94e;2014-07-30 20:37:13.0;"You could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var x = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = $.map($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var x = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call($(tr).find(""td""), function (p, td, i) {&#xD;&#xA;            // assign cell-text to column-header property name&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;deleted 14 characters in body
70465991;25045721;621962;5;ced02c87-e9af-4d93-8824-f0e4f9833083;2014-07-30 20:44:38.0;"You could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var data = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = [].map.call($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var data = [].map.call($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call(tr.cells, function (p, td, i) {&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Map) and [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;deleted 8 characters in body
70466280;25045721;621962;5;11f8a5a3-34ea-40a9-a23e-6e1d7f000663;2014-07-30 20:49:50.0;"You could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var data = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (and perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = [].map.call($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var data = [].map.call($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call(tr.cells, function (p, td, i) {&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Map) and [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;added 4 characters in body
70545657;25045721;621962;5;e3ef1ec0-88a7-4df9-b7f7-13247caeadb3;2014-07-31 20:09:13.0;"Assuming that by _""table content""_ you mean _""the data""_, you could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var data = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (and perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = [].map.call($(""thead th""), function (th) {&#xD;&#xA;        return $(th).text();&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var data = [].map.call($(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call(tr.cells, function (p, td, i) {&#xD;&#xA;            p[names[i]] = $(td).text();&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Map) and [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;added 58 characters in body
70592269;25045721;621962;5;6f072d05-3a4b-428f-8373-22ed80118b6e;2014-08-01 12:51:20.0;"Assuming that by _""table content""_ you mean _""the data""_, you could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var data = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](http://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (and perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = [].map.call(document.querySelectorAll(""thead th""), function (th) {&#xD;&#xA;        return th.textContent;&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call(tr.cells, function (p, td, i) {&#xD;&#xA;            p[names[i]] = td.textContent;&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Map) and [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;added 52 characters in body
147574573;25045721;-1;5;258d25b5-138b-40f6-97ce-fc6c21c756f9;2017-05-23 12:29:25.0;"Assuming that by _""table content""_ you mean _""the data""_, you could nest calls to [`jQuery.map()`](http://api.jquery.com/jquery.map/) ([fiddle](http://jsfiddle.net/antisanity/k4be3/)):&#xD;&#xA;&#xD;&#xA;    // for each content row, retrieve an array of cell-text values&#xD;&#xA;    var data = $.map($(""tbody tr""), function (tr) {&#xD;&#xA;        return [$.map(tr.cells, function (td) {&#xD;&#xA;            return $(td).text();&#xD;&#xA;        })];&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [&#xD;&#xA;        [""four"", ""4"", ""Female""],&#xD;&#xA;        [""one"", ""1"", ""Male""],&#xD;&#xA;        [""three"", ""3"", ""Female""],&#xD;&#xA;        [""two"", ""2"", ""Male""]&#xD;&#xA;    ]&#xD;&#xA;&#xD;&#xA;... and in plain javascript ([fiddle](http://jsfiddle.net/antisanity/t39kz/)):&#xD;&#xA;&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].map.call(tr.cells, function(td) {&#xD;&#xA;           return td.textContent; &#xD;&#xA;        });&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;Now, [as others have suggested](https://stackoverflow.com/questions/25045008/how-to-get-table-content-and-put-it-in-a-variable-as-multidimensional-array#comment38955348_25045008), you could (and perhaps _should_) consider an array of objects instead ([fiddle](http://jsfiddle.net/antisanity/LB6Wx/)):&#xD;&#xA;&#xD;&#xA;    // get the header names so we can use them for our object property names&#xD;&#xA;    var names = [].map.call(document.querySelectorAll(""thead th""), function (th) {&#xD;&#xA;        return th.textContent;&#xD;&#xA;    });&#xD;&#xA;    &#xD;&#xA;    // for each content row, retrieve an object-representation of the data&#xD;&#xA;    var data = [].map.call(document.querySelectorAll(""tbody tr""), function (tr) {&#xD;&#xA;        return [].reduce.call(tr.cells, function (p, td, i) {&#xD;&#xA;            p[names[i]] = td.textContent;&#xD;&#xA;            return p;&#xD;&#xA;        }, {});&#xD;&#xA;    });&#xD;&#xA;&#xD;&#xA;output:&#xD;&#xA;&#xD;&#xA;    [{&#xD;&#xA;        ""Name"": ""four"",&#xD;&#xA;        ""Age"": ""4"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""one"",&#xD;&#xA;        ""Age"": ""1"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""three"",&#xD;&#xA;        ""Age"": ""3"",&#xD;&#xA;        ""Gender"": ""Female""&#xD;&#xA;    }, {&#xD;&#xA;        ""Name"": ""two"",&#xD;&#xA;        ""Age"": ""2"",&#xD;&#xA;        ""Gender"": ""Male""&#xD;&#xA;    }]&#xD;&#xA;&#xD;&#xA;<sub>See [`Array.prototype.map()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Map) and [`Array.prototype.reduce()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce) on MDN.</sub>";;replaced http://stackoverflow.com/ with https://stackoverflow.com/
