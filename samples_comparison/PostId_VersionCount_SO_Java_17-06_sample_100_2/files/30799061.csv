Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
92667210;30799061;5002373;2;2557c04f-fa0b-4f1c-bcfd-893cb047a8f1;2015-06-12 08:52:40.0;"I write adapter between sql data base and mail server. I use pop3 connection.&#xD;&#xA;And I have the next problem, when this adapter recive russian file name occurs error.<br><br>&#xD;&#xA;Example input file name: **=?UTF-8?B?0KHQutGA0LjQv9C60LAg0JzQsNGA0LjRjy5kb2N4?=**&#xD;&#xA;<br>&#xD;&#xA; I finded what this coded format, it is BASE64.<br>&#xD;&#xA;But I tried convert Base64 to UTF-8, and it gave nothing.&#xD;&#xA;<br><br>&#xD;&#xA;My code:&#xD;&#xA;&#xD;&#xA;    if (contentType.contains(""multipart""))&#xD;&#xA;                {&#xD;&#xA;                    Multipart multiPart = (Multipart) message.getContent();&#xD;&#xA;                    int numberOfParts = multiPart.getCount();&#xD;&#xA;                    for (int partCount = 0; partCount<numberOfParts; partCount++)&#xD;&#xA;                    {&#xD;&#xA;                        MimeBodyPart part = (MimeBodyPart) multiPart.getBodyPart(partCount);&#xD;&#xA;                        if (!Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()))&#xD;&#xA;                        {&#xD;&#xA;                            //this part is attachment&#xD;&#xA;                            continue;&#xD;&#xA;&#xD;&#xA;                        }&#xD;&#xA;&#xD;&#xA;                            //String fileName = part.getFileName();&#xD;&#xA;                            String fileName = part.getFileName().toString();&#xD;&#xA;                            if (fileName.contains(""UTF-8""))&#xD;&#xA;                            {&#xD;&#xA;                                byte[] decoded = Base64.decodeBase64(fileName.getBytes());&#xD;&#xA;                                fileName = new String(decoded, ""UTF-8"");&#xD;&#xA;                            }&#xD;&#xA;                            attachFiles += fileName + "", "";&#xD;&#xA;                            part.saveFile(""d:/"" + File.separator + fileName);&#xD;&#xA;                            //this part may be the message content&#xD;&#xA;                            messageContent = part.getContent().toString();&#xD;&#xA;&#xD;&#xA;                    }&#xD;&#xA;                    if (attachFiles.length() > 1)&#xD;&#xA;                    {&#xD;&#xA;                        attachFiles = attachFiles.substring(0, attachFiles.length()-2);&#xD;&#xA;                    }&#xD;&#xA;                }";;
92674928;30799061;1169349;5;195f31df-4187-4515-895c-78e6967f7c00;2015-06-12 10:42:19.0;"I wrote an adapter between an SQL database and mail server. I used a POP3 connection.&#xD;&#xA;Thereafter, I encountered the following problem - when the adapter receives  a Russian file name this error occurs.<br><br>&#xD;&#xA;Example input file name: **=?UTF-8?B?0KHQutGA0LjQv9C60LAg0JzQsNGA0LjRjy5kb2N4?=**&#xD;&#xA;<br>&#xD;&#xA; The coded format is BASE64. I tried to convert Base64 to UTF-8 but it did not solve the problem.&#xD;&#xA;<br><br>&#xD;&#xA;My code:&#xD;&#xA;&#xD;&#xA;    if (contentType.contains(""multipart""))&#xD;&#xA;                {&#xD;&#xA;                    Multipart multiPart = (Multipart) message.getContent();&#xD;&#xA;                    int numberOfParts = multiPart.getCount();&#xD;&#xA;                    for (int partCount = 0; partCount<numberOfParts; partCount++)&#xD;&#xA;                    {&#xD;&#xA;                        MimeBodyPart part = (MimeBodyPart) multiPart.getBodyPart(partCount);&#xD;&#xA;                        if (!Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()))&#xD;&#xA;                        {&#xD;&#xA;                            //this part is attachment&#xD;&#xA;                            continue;&#xD;&#xA;&#xD;&#xA;                        }&#xD;&#xA;&#xD;&#xA;                            //String fileName = part.getFileName();&#xD;&#xA;                            String fileName = part.getFileName().toString();&#xD;&#xA;                            if (fileName.contains(""UTF-8""))&#xD;&#xA;                            {&#xD;&#xA;                                byte[] decoded = Base64.decodeBase64(fileName.getBytes());&#xD;&#xA;                                fileName = new String(decoded, ""UTF-8"");&#xD;&#xA;                            }&#xD;&#xA;                            attachFiles += fileName + "", "";&#xD;&#xA;                            part.saveFile(""d:/"" + File.separator + fileName);&#xD;&#xA;                            //this part may be the message content&#xD;&#xA;                            messageContent = part.getContent().toString();&#xD;&#xA;&#xD;&#xA;                    }&#xD;&#xA;                    if (attachFiles.length() > 1)&#xD;&#xA;                    {&#xD;&#xA;                        attachFiles = attachFiles.substring(0, attachFiles.length()-2);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;&#xD;&#xA;Does anybody have an idea how I can solve this issue?&#xD;&#xA;";;Fixed grammer
92674931;30799061;2753241;5;9eb3b8d5-2636-4f93-9e82-eb56b2c73f38;2015-06-12 10:42:19.0;"I wrote an adapter between an SQL database and mail server. I used a POP3 connection.&#xD;&#xA;Thereafter, I encountered the following problem - when the adapter receives  a Russian file name this error occurs.<br><br>&#xD;&#xA;Example input file name: `=?UTF-8?B?0KHQutGA0LjQv9C60LAg0JzQsNGA0LjRjy5kb2N4?=`&#xD;&#xA;<br>&#xD;&#xA; The coded format is Base64. I tried to convert Base64 to UTF-8 but it did not solve the problem.&#xD;&#xA;<br><br>&#xD;&#xA;My code:&#xD;&#xA;&#xD;&#xA;    if (contentType.contains(""multipart""))&#xD;&#xA;                {&#xD;&#xA;                    Multipart multiPart = (Multipart) message.getContent();&#xD;&#xA;                    int numberOfParts = multiPart.getCount();&#xD;&#xA;                    for (int partCount = 0; partCount<numberOfParts; partCount++)&#xD;&#xA;                    {&#xD;&#xA;                        MimeBodyPart part = (MimeBodyPart) multiPart.getBodyPart(partCount);&#xD;&#xA;                        if (!Part.ATTACHMENT.equalsIgnoreCase(part.getDisposition()))&#xD;&#xA;                        {&#xD;&#xA;                            //this part is attachment&#xD;&#xA;                            continue;&#xD;&#xA;&#xD;&#xA;                        }&#xD;&#xA;&#xD;&#xA;                            //String fileName = part.getFileName();&#xD;&#xA;                            String fileName = part.getFileName().toString();&#xD;&#xA;                            if (fileName.contains(""UTF-8""))&#xD;&#xA;                            {&#xD;&#xA;                                byte[] decoded = Base64.decodeBase64(fileName.getBytes());&#xD;&#xA;                                fileName = new String(decoded, ""UTF-8"");&#xD;&#xA;                            }&#xD;&#xA;                            attachFiles += fileName + "", "";&#xD;&#xA;                            part.saveFile(""d:/"" + File.separator + fileName);&#xD;&#xA;                            //this part may be the message content&#xD;&#xA;                            messageContent = part.getContent().toString();&#xD;&#xA;&#xD;&#xA;                    }&#xD;&#xA;                    if (attachFiles.length() > 1)&#xD;&#xA;                    {&#xD;&#xA;                        attachFiles = attachFiles.substring(0, attachFiles.length()-2);&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;&#xD;&#xA;Does anybody have an idea how I can solve this issue?&#xD;&#xA;";;Fixed grammer
