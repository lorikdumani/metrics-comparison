Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
78685701;27197039;4192019;2;aae6d4c5-88a4-443d-a522-2842973a5b4e;2014-11-28 23:15:31.0;"First of all I would like to be excused if I do not match the perfect asking style, but I will do better-this is my first time.&#xD;&#xA;Problem: I am working on SPA with AngularJS for client and WEB API 2.0  and SignalR on server side. The things going like this, SignalR receives notifications from external source and pushes them as json to AngularJS service from where it update my to main directives.My two controllers:&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    'use strict'&#xD;&#xA;    tripExchange.controller('GamesDetailsCtrl', ['$scope', '$routeParams', 'GamesResource', 'TeamsResource',&#xD;&#xA;    'playersSignalRValuesUtilizer', 'subscribePrefix', 'myCache',&#xD;&#xA;    function GamesDetailsCtrl($scope, $routeParams, GamesResource, TeamsResource, playersSignalRValuesUtilizer&#xD;&#xA;        , subscribePrefix, myCache) {&#xD;&#xA;        var cacheCurrentGameHomeProfile = myCache.get('homeProfile' + $routeParams.id);&#xD;&#xA;        var cacheCurrentGameGuestProfile = myCache.get('guestProfile' + $routeParams.id);&#xD;&#xA;        //get cached data if available&#xD;&#xA;        if (cacheCurrentGameHomeProfile) { // If there’s something in the cache, use it!&#xD;&#xA;            $scope.homeProfileModel = cacheCurrentGameHomeProfile;&#xD;&#xA;            $scope.guestProfileModel = cacheCurrentGameGuestProfile;&#xD;&#xA;            console.log(""It is in GDCtrl has cache"");&#xD;&#xA;        }&#xD;&#xA;        //make promise call for resource to DB through Web APU&#xD;&#xA;        else {&#xD;&#xA;            GamesResource.byId($routeParams.id)&#xD;&#xA;                .$promise&#xD;&#xA;                .then(function (game) {&#xD;&#xA;                    $scope.game = game;&#xD;&#xA;                    TeamsResource.byId(game.hostName)&#xD;&#xA;                        .$promise&#xD;&#xA;                        .then(function (resultHome) {&#xD;&#xA;                            // return resultHome;&#xD;&#xA;                            $scope.homeProfileModel = resultHome;&#xD;&#xA;                            myCache.put('homeProfile' + $routeParams.id, $scope.homeProfileModel);&#xD;&#xA;                        });&#xD;&#xA;&#xD;&#xA;                    TeamsResource.byId(game.guestName)&#xD;&#xA;                        .$promise&#xD;&#xA;                        .then(function (resultGuest) {&#xD;&#xA;                            $scope.guestProfileModel = resultGuest;&#xD;&#xA;                            myCache.put('guestProfile' + $routeParams.id, $scope.guestProfileModel);&#xD;&#xA;&#xD;&#xA;                        });&#xD;&#xA;&#xD;&#xA;                });&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;        //THIS IS the SignalR Method- it actually moderates data in one of the directives&#xD;&#xA;        $scope.$on(subscribePrefix + ""pushTeamData"", function (evt, data) {&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentPlayersTimePlayed(data.CurrentPassedHomeOldPlayersIds, $scope.homeProfileModel.players);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentPlayersTimePlayed(data.CurrentPassedAwayOldPlayersIds, $scope.guestProfileModel.players);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentNewPlayers(data.CurrentPassedHomeNewPlayers, $scope.homeProfileModel);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentNewPlayers(data.CurrentPassedAwayNewPlayers, $scope.guestProfileModel);&#xD;&#xA;            if (myCache.get('guestProfile' + $routeParams.id)) {&#xD;&#xA;                myCache.remove('guestProfile' + $routeParams.id);&#xD;&#xA;            }&#xD;&#xA;            myCache.put('guestProfile' + $routeParams.id, $scope.guestProfileModel);&#xD;&#xA;            if (myCache.get('homeProfile' + $routeParams.id)) {&#xD;&#xA;                myCache.remove('homeProfile' + $routeParams.id);&#xD;&#xA;            }&#xD;&#xA;            myCache.put('homeProfile' + $routeParams.id, $scope.homeProfileModel);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;    }]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;The second one:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    use strict';&#xD;&#xA;&#xD;&#xA;    tripExchange.controller('HomeCtrl', ['$scope','$filter','GamesResource','subscribePrefix','myCache',&#xD;&#xA;    function HomeCtrl($scope, $filter,GamesResource,subscribePrefix,myCache) {&#xD;&#xA;        var cacheCurrentGames = myCache.get('currentGames');&#xD;&#xA;&#xD;&#xA;        if (cacheCurrentGames) { // If there’s something in the cache, use it!&#xD;&#xA;            $scope.games = cacheCurrentGames;&#xD;&#xA;            console.log(""It is in HomeCtrl has cache"");&#xD;&#xA;        }&#xD;&#xA;        else { // Otherwise, let’s generate a new instance&#xD;&#xA;            $scope.games = GamesResource.public();&#xD;&#xA;            myCache.put('currentGames',  $scope.games);&#xD;&#xA;            console.log(""It is in HomeCtrl has not cache"");&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        $scope.$on(subscribePrefix + ""notifyLinkMainPage"", function (evt, data) {&#xD;&#xA;            console.log(""It is in HomeCtrl notifyLinkMainPage"");&#xD;&#xA;            var currentPushedGame= $filter('filter')($scope.games, {gameId: data.GameId})[0];&#xD;&#xA;&#xD;&#xA;            currentPushedGame.status=""NowPlayed"";&#xD;&#xA;            if(myCache.get('currentGames')) {&#xD;&#xA;                myCache.remove('currentGames');&#xD;&#xA;            }&#xD;&#xA;            myCache.put('currentGames',  $scope.games);&#xD;&#xA;&#xD;&#xA;        });&#xD;&#xA;    }]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Everything works great, however I have only one problem(it might be because I am new in Angular world-that is why I am asking after few days resesarch). When user starts application the home page  loads few links identified by predifined  ids from DB  when SignalR receive external update it pushes info to the anchor with the same id-""notifyLinkMainPage""-it actually only turns its color to red and in the other controller SignalR client method is""pushTeamData"". When actually SignalR push is made it affects only the active ""page"" on the browser either Home or GamesDetails, SignalR logging gives info that the event on the other page is also trigerred but there is no result from it. I have an idea if I made caching for all nececessary info on first load on any page but I think that it is anti pattern to make it in every controller(than where to make it?). The question is pretty specific and I was not able to find something pretty close in depth. Thanks in advance to any suggestions.In summary I need help in how to make so that when SignalR pushes to affect values even on inactive pages(controllers).";;
78686942;27197039;151682;5;85e00fa2-ce1a-447c-8e17-960be31321b3;2014-11-28 23:55:29.0;"First of all I would like to be excused if I do not match the perfect asking style, but I will do better-this is my first time.&#xD;&#xA;Problem: I am working on SPA with AngularJS for client and WEB API 2.0  and SignalR on server side. The things going like this, SignalR receives notifications from external source and pushes them as json to AngularJS service from where it update my to main directives.My two controllers:&#xD;&#xA;   &#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    'use strict'&#xD;&#xA;    tripExchange.controller('GamesDetailsCtrl', ['$scope', '$routeParams', 'GamesResource', 'TeamsResource',&#xD;&#xA;    'playersSignalRValuesUtilizer', 'subscribePrefix', 'myCache',&#xD;&#xA;    function GamesDetailsCtrl($scope, $routeParams, GamesResource, TeamsResource, playersSignalRValuesUtilizer&#xD;&#xA;        , subscribePrefix, myCache) {&#xD;&#xA;        var cacheCurrentGameHomeProfile = myCache.get('homeProfile' + $routeParams.id);&#xD;&#xA;        var cacheCurrentGameGuestProfile = myCache.get('guestProfile' + $routeParams.id);&#xD;&#xA;        //get cached data if available&#xD;&#xA;        if (cacheCurrentGameHomeProfile) { // If there’s something in the cache, use it!&#xD;&#xA;            $scope.homeProfileModel = cacheCurrentGameHomeProfile;&#xD;&#xA;            $scope.guestProfileModel = cacheCurrentGameGuestProfile;&#xD;&#xA;            console.log(""It is in GDCtrl has cache"");&#xD;&#xA;        }&#xD;&#xA;        //make promise call for resource to DB through Web APU&#xD;&#xA;        else {&#xD;&#xA;            GamesResource.byId($routeParams.id)&#xD;&#xA;                .$promise&#xD;&#xA;                .then(function (game) {&#xD;&#xA;                    $scope.game = game;&#xD;&#xA;                    TeamsResource.byId(game.hostName)&#xD;&#xA;                        .$promise&#xD;&#xA;                        .then(function (resultHome) {&#xD;&#xA;                            // return resultHome;&#xD;&#xA;                            $scope.homeProfileModel = resultHome;&#xD;&#xA;                            myCache.put('homeProfile' + $routeParams.id, $scope.homeProfileModel);&#xD;&#xA;                        });&#xD;&#xA;&#xD;&#xA;                    TeamsResource.byId(game.guestName)&#xD;&#xA;                        .$promise&#xD;&#xA;                        .then(function (resultGuest) {&#xD;&#xA;                            $scope.guestProfileModel = resultGuest;&#xD;&#xA;                            myCache.put('guestProfile' + $routeParams.id, $scope.guestProfileModel);&#xD;&#xA;&#xD;&#xA;                        });&#xD;&#xA;&#xD;&#xA;                });&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        }&#xD;&#xA;        //THIS IS the SignalR Method- it actually moderates data in one of the directives&#xD;&#xA;        $scope.$on(subscribePrefix + ""pushTeamData"", function (evt, data) {&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentPlayersTimePlayed(data.CurrentPassedHomeOldPlayersIds, $scope.homeProfileModel.players);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentPlayersTimePlayed(data.CurrentPassedAwayOldPlayersIds, $scope.guestProfileModel.players);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentNewPlayers(data.CurrentPassedHomeNewPlayers, $scope.homeProfileModel);&#xD;&#xA;            playersSignalRValuesUtilizer.setCurrentNewPlayers(data.CurrentPassedAwayNewPlayers, $scope.guestProfileModel);&#xD;&#xA;            if (myCache.get('guestProfile' + $routeParams.id)) {&#xD;&#xA;                myCache.remove('guestProfile' + $routeParams.id);&#xD;&#xA;            }&#xD;&#xA;            myCache.put('guestProfile' + $routeParams.id, $scope.guestProfileModel);&#xD;&#xA;            if (myCache.get('homeProfile' + $routeParams.id)) {&#xD;&#xA;                myCache.remove('homeProfile' + $routeParams.id);&#xD;&#xA;            }&#xD;&#xA;            myCache.put('homeProfile' + $routeParams.id, $scope.homeProfileModel);&#xD;&#xA;        });&#xD;&#xA;&#xD;&#xA;    }]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;The second one:&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    'use strict';&#xD;&#xA;&#xD;&#xA;    tripExchange.controller('HomeCtrl', ['$scope','$filter','GamesResource','subscribePrefix','myCache',&#xD;&#xA;    function HomeCtrl($scope, $filter,GamesResource,subscribePrefix,myCache) {&#xD;&#xA;        var cacheCurrentGames = myCache.get('currentGames');&#xD;&#xA;&#xD;&#xA;        if (cacheCurrentGames) { // If there’s something in the cache, use it!&#xD;&#xA;            $scope.games = cacheCurrentGames;&#xD;&#xA;            console.log(""It is in HomeCtrl has cache"");&#xD;&#xA;        }&#xD;&#xA;        else { // Otherwise, let’s generate a new instance&#xD;&#xA;            $scope.games = GamesResource.public();&#xD;&#xA;            myCache.put('currentGames',  $scope.games);&#xD;&#xA;            console.log(""It is in HomeCtrl has not cache"");&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;        $scope.$on(subscribePrefix + ""notifyLinkMainPage"", function (evt, data) {&#xD;&#xA;            console.log(""It is in HomeCtrl notifyLinkMainPage"");&#xD;&#xA;            var currentPushedGame= $filter('filter')($scope.games, {gameId: data.GameId})[0];&#xD;&#xA;&#xD;&#xA;            currentPushedGame.status=""NowPlayed"";&#xD;&#xA;            if(myCache.get('currentGames')) {&#xD;&#xA;                myCache.remove('currentGames');&#xD;&#xA;            }&#xD;&#xA;            myCache.put('currentGames',  $scope.games);&#xD;&#xA;&#xD;&#xA;        });&#xD;&#xA;    }]);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Everything works great, however I have only one problem (it might be because I am new in Angular world-that is why I am asking after few days resesarch). When the user starts the application, the home page loads few links identified by predefined ids from DB  when SignalR receive external update it pushes info to the anchor with the same id-""notifyLinkMainPage""-it actually only turns its color to red and in the other controller SignalR client method is""pushTeamData"". When actually SignalR push is made it affects only the active ""page"" on the browser either Home or GamesDetails, SignalR logging gives info that the event on the other page is also triggered but there is no result from it. I have an idea if I made caching for all necessary info on first load on any page but I think that it is anti pattern to make it in every controller(than where to make it?). The question is pretty specific and I was not able to find something pretty close in depth. Thanks in advance to any suggestions. In summary I need help in how to make so that when SignalR pushes to affect values even on inactive pages(controllers).";;add missing quotation mark that jumbles syntax highlighting of second snippet. Some orthographic corrections
