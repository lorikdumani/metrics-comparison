Id;PostId;UserId;PostHistoryTypeId;RevisionGUID;CreationDate;Text;UserDisplayName;Comment
26146943;11262492;180664;2;2bc57299-ff1c-4138-a6bc-0dea20a75bdb;2012-06-29 13:14:48.0;Well, the first thing that comes to mind is to replace as you're going backwards through the string.  I'm still working out a clean python example for that.;;
26147952;11262492;180664;5;3b2f5a5a-c854-4711-8891-84998f2d834a;2012-06-29 13:41:15.0;"This is based on the idea that you should just replace going backwards through the string.  First I had to modify your info and replacer structures a little bit, then the code is pretty pythonic:&#xD;&#xA;&#xD;&#xA;    str = 'If you do not know where you are going, any road will get you there.'&#xD;&#xA;    info = {'you': [(3, 3), (25, 3)], 'get you': [(54, 7)], 'know': [(14, 4)]}&#xD;&#xA;    replacer = [('you', '<b>you</b>'), ('know', '<i>know</i>')]&#xD;&#xA;    &#xD;&#xA;    info2 = {}&#xD;&#xA;    replacer2 = {}&#xD;&#xA;    &#xD;&#xA;    for original, replacement in replacer:&#xD;&#xA;    	replacer2[original] = replacement&#xD;&#xA;    &#xD;&#xA;    for k, v in info.items():&#xD;&#xA;    	for start, length in v:&#xD;&#xA;    		replacement = None&#xD;&#xA;    		if k in replacer2:&#xD;&#xA;    			replacement = replacer2[k]&#xD;&#xA;    		info2[start] = (k, length, replacement)&#xD;&#xA;    &#xD;&#xA;    for position in sorted(info2.iterkeys(), reverse=True):&#xD;&#xA;    	original, length, replacement = info2[position]&#xD;&#xA;    	if replacement is not None:&#xD;&#xA;    		str[:position] + replacement + str[position + length]&#xD;&#xA;    &#xD;&#xA;    print str";;"added 792 characters in body; deleted 245 characters in body; added 291 characters in body"
35175244;11262492;180664;5;96fa5cd7-84f0-4375-8c99-a30a6ed0de69;2013-01-29 14:21:39.0;"This is based on the idea that you should just replace going backwards through the string.  First I had to modify your info and replacer structures a little bit:&#xD;&#xA;&#xD;&#xA;    str = 'If you do not know where you are going, any road will get you there.'&#xD;&#xA;    info = {'you': [(3, 3), (25, 3)], 'get you': [(54, 7)], 'know': [(14, 4)]}&#xD;&#xA;    replacer = [('you', '<b>you</b>'), ('know', '<i>know</i>')]&#xD;&#xA;    &#xD;&#xA;    info2 = {}&#xD;&#xA;    replacer2 = {}&#xD;&#xA;    &#xD;&#xA;    for original, replacement in replacer:&#xD;&#xA;    	replacer2[original] = replacement&#xD;&#xA;    &#xD;&#xA;    for k, v in info.items():&#xD;&#xA;    	for start, length in v:&#xD;&#xA;    		replacement = None&#xD;&#xA;    		if k in replacer2:&#xD;&#xA;    			replacement = replacer2[k]&#xD;&#xA;    		info2[start] = (k, length, replacement)&#xD;&#xA;    &#xD;&#xA;    for position in sorted(info2.iterkeys(), reverse=True):&#xD;&#xA;    	original, length, replacement = info2[position]&#xD;&#xA;    	if replacement is not None:&#xD;&#xA;    		str[:position] + replacement + str[position + length]&#xD;&#xA;    &#xD;&#xA;    print str";;deleted 34 characters in body
